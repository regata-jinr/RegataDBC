'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("NAA_DB_EXPDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class NAA_DB_EXPDataSet
    Inherits Global.System.Data.DataSet
    
    Private tabletable_Client As table_ClientDataTable
    
    Private tabletable_Country As table_CountryDataTable
    
    Private tabletable_Determined_Elements As table_Determined_ElementsDataTable
    
    Private tabletable_Physical_Environment As table_Physical_EnvironmentDataTable
    
    Private tabletable_Received_By As table_Received_ByDataTable
    
    Private tabletable_Sample_Preparation As table_Sample_PreparationDataTable
    
    Private tabletable_Sample_Set As table_Sample_SetDataTable
    
    Private tabletable_Sample_Type As table_Sample_TypeDataTable
    
    Private tabletable_Sample As table_SampleDataTable
    
    Private tabletable_Sample_Sample_Preparation As table_Sample_Sample_PreparationDataTable
    
    Private tabletable_SLI_Irradiation_Log As table_SLI_Irradiation_LogDataTable
    
    Private tabletable_LLI_Irradiation_Log As table_LLI_Irradiation_LogDataTable
    
    Private tabletable_Monitor As table_MonitorDataTable
    
    Private tabletable_Monitor_Set As table_Monitor_SetDataTable
    
    Private tabletable_SRM As table_SRMDataTable
    
    Private tabletable_SRM_Set As table_SRM_SetDataTable
    
    Private tabletable_Sample_NAA_Results As table_Sample_NAA_ResultsDataTable
    
    Private relationFK_table_Sample_Set_table_Client As Global.System.Data.DataRelation
    
    Private relationFK_table_Sample_table_Sample_Set As Global.System.Data.DataRelation
    
    Private relationFK_table_Sample_table_Sample_Set1 As Global.System.Data.DataRelation
    
    Private relationFK_table_SLI_Irradiation_Log_table_Sample As Global.System.Data.DataRelation
    
    Private relationFK_table_SLI_Irradiation_Log_table_Sample1 As Global.System.Data.DataRelation
    
    Private relationFK_table_LLI_Irradiation_Log_table_Sample As Global.System.Data.DataRelation
    
    Private relationFK_table_LLI_Irradiation_Log_table_Sample1 As Global.System.Data.DataRelation
    
    Private relationFK_table_SLI_Irradiation_Log_table_Monitor As Global.System.Data.DataRelation
    
    Private relationFK_table_SLI_Irradiation_Log_table_SRM As Global.System.Data.DataRelation
    
    Private relationFK_table_LLI_Irradiation_Log_table_Monitor As Global.System.Data.DataRelation
    
    Private relationFK_table_LLI_Irradiation_Log_table_SRM As Global.System.Data.DataRelation
    
    Private relationFK_table_Monitor_table_Monitor_Set As Global.System.Data.DataRelation
    
    Private relationFK_table_SRM_table_SRM_Set As Global.System.Data.DataRelation
    
    Private relationFK_table_Sample_table_Sample_Set2 As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("table_Client")) Is Nothing) Then
                MyBase.Tables.Add(New table_ClientDataTable(ds.Tables("table_Client")))
            End If
            If (Not (ds.Tables("table_Country")) Is Nothing) Then
                MyBase.Tables.Add(New table_CountryDataTable(ds.Tables("table_Country")))
            End If
            If (Not (ds.Tables("table_Determined_Elements")) Is Nothing) Then
                MyBase.Tables.Add(New table_Determined_ElementsDataTable(ds.Tables("table_Determined_Elements")))
            End If
            If (Not (ds.Tables("table_Physical_Environment")) Is Nothing) Then
                MyBase.Tables.Add(New table_Physical_EnvironmentDataTable(ds.Tables("table_Physical_Environment")))
            End If
            If (Not (ds.Tables("table_Received_By")) Is Nothing) Then
                MyBase.Tables.Add(New table_Received_ByDataTable(ds.Tables("table_Received_By")))
            End If
            If (Not (ds.Tables("table_Sample_Preparation")) Is Nothing) Then
                MyBase.Tables.Add(New table_Sample_PreparationDataTable(ds.Tables("table_Sample_Preparation")))
            End If
            If (Not (ds.Tables("table_Sample_Set")) Is Nothing) Then
                MyBase.Tables.Add(New table_Sample_SetDataTable(ds.Tables("table_Sample_Set")))
            End If
            If (Not (ds.Tables("table_Sample_Type")) Is Nothing) Then
                MyBase.Tables.Add(New table_Sample_TypeDataTable(ds.Tables("table_Sample_Type")))
            End If
            If (Not (ds.Tables("table_Sample")) Is Nothing) Then
                MyBase.Tables.Add(New table_SampleDataTable(ds.Tables("table_Sample")))
            End If
            If (Not (ds.Tables("table_Sample_Sample_Preparation")) Is Nothing) Then
                MyBase.Tables.Add(New table_Sample_Sample_PreparationDataTable(ds.Tables("table_Sample_Sample_Preparation")))
            End If
            If (Not (ds.Tables("table_SLI_Irradiation_Log")) Is Nothing) Then
                MyBase.Tables.Add(New table_SLI_Irradiation_LogDataTable(ds.Tables("table_SLI_Irradiation_Log")))
            End If
            If (Not (ds.Tables("table_LLI_Irradiation_Log")) Is Nothing) Then
                MyBase.Tables.Add(New table_LLI_Irradiation_LogDataTable(ds.Tables("table_LLI_Irradiation_Log")))
            End If
            If (Not (ds.Tables("table_Monitor")) Is Nothing) Then
                MyBase.Tables.Add(New table_MonitorDataTable(ds.Tables("table_Monitor")))
            End If
            If (Not (ds.Tables("table_Monitor_Set")) Is Nothing) Then
                MyBase.Tables.Add(New table_Monitor_SetDataTable(ds.Tables("table_Monitor_Set")))
            End If
            If (Not (ds.Tables("table_SRM")) Is Nothing) Then
                MyBase.Tables.Add(New table_SRMDataTable(ds.Tables("table_SRM")))
            End If
            If (Not (ds.Tables("table_SRM_Set")) Is Nothing) Then
                MyBase.Tables.Add(New table_SRM_SetDataTable(ds.Tables("table_SRM_Set")))
            End If
            If (Not (ds.Tables("table_Sample_NAA_Results")) Is Nothing) Then
                MyBase.Tables.Add(New table_Sample_NAA_ResultsDataTable(ds.Tables("table_Sample_NAA_Results")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_Client() As table_ClientDataTable
        Get
            Return Me.tabletable_Client
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_Country() As table_CountryDataTable
        Get
            Return Me.tabletable_Country
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_Determined_Elements() As table_Determined_ElementsDataTable
        Get
            Return Me.tabletable_Determined_Elements
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_Physical_Environment() As table_Physical_EnvironmentDataTable
        Get
            Return Me.tabletable_Physical_Environment
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_Received_By() As table_Received_ByDataTable
        Get
            Return Me.tabletable_Received_By
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_Sample_Preparation() As table_Sample_PreparationDataTable
        Get
            Return Me.tabletable_Sample_Preparation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_Sample_Set() As table_Sample_SetDataTable
        Get
            Return Me.tabletable_Sample_Set
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_Sample_Type() As table_Sample_TypeDataTable
        Get
            Return Me.tabletable_Sample_Type
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_Sample() As table_SampleDataTable
        Get
            Return Me.tabletable_Sample
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_Sample_Sample_Preparation() As table_Sample_Sample_PreparationDataTable
        Get
            Return Me.tabletable_Sample_Sample_Preparation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_SLI_Irradiation_Log() As table_SLI_Irradiation_LogDataTable
        Get
            Return Me.tabletable_SLI_Irradiation_Log
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_LLI_Irradiation_Log() As table_LLI_Irradiation_LogDataTable
        Get
            Return Me.tabletable_LLI_Irradiation_Log
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_Monitor() As table_MonitorDataTable
        Get
            Return Me.tabletable_Monitor
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_Monitor_Set() As table_Monitor_SetDataTable
        Get
            Return Me.tabletable_Monitor_Set
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_SRM() As table_SRMDataTable
        Get
            Return Me.tabletable_SRM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_SRM_Set() As table_SRM_SetDataTable
        Get
            Return Me.tabletable_SRM_Set
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property table_Sample_NAA_Results() As table_Sample_NAA_ResultsDataTable
        Get
            Return Me.tabletable_Sample_NAA_Results
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As NAA_DB_EXPDataSet = CType(MyBase.Clone,NAA_DB_EXPDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("table_Client")) Is Nothing) Then
                MyBase.Tables.Add(New table_ClientDataTable(ds.Tables("table_Client")))
            End If
            If (Not (ds.Tables("table_Country")) Is Nothing) Then
                MyBase.Tables.Add(New table_CountryDataTable(ds.Tables("table_Country")))
            End If
            If (Not (ds.Tables("table_Determined_Elements")) Is Nothing) Then
                MyBase.Tables.Add(New table_Determined_ElementsDataTable(ds.Tables("table_Determined_Elements")))
            End If
            If (Not (ds.Tables("table_Physical_Environment")) Is Nothing) Then
                MyBase.Tables.Add(New table_Physical_EnvironmentDataTable(ds.Tables("table_Physical_Environment")))
            End If
            If (Not (ds.Tables("table_Received_By")) Is Nothing) Then
                MyBase.Tables.Add(New table_Received_ByDataTable(ds.Tables("table_Received_By")))
            End If
            If (Not (ds.Tables("table_Sample_Preparation")) Is Nothing) Then
                MyBase.Tables.Add(New table_Sample_PreparationDataTable(ds.Tables("table_Sample_Preparation")))
            End If
            If (Not (ds.Tables("table_Sample_Set")) Is Nothing) Then
                MyBase.Tables.Add(New table_Sample_SetDataTable(ds.Tables("table_Sample_Set")))
            End If
            If (Not (ds.Tables("table_Sample_Type")) Is Nothing) Then
                MyBase.Tables.Add(New table_Sample_TypeDataTable(ds.Tables("table_Sample_Type")))
            End If
            If (Not (ds.Tables("table_Sample")) Is Nothing) Then
                MyBase.Tables.Add(New table_SampleDataTable(ds.Tables("table_Sample")))
            End If
            If (Not (ds.Tables("table_Sample_Sample_Preparation")) Is Nothing) Then
                MyBase.Tables.Add(New table_Sample_Sample_PreparationDataTable(ds.Tables("table_Sample_Sample_Preparation")))
            End If
            If (Not (ds.Tables("table_SLI_Irradiation_Log")) Is Nothing) Then
                MyBase.Tables.Add(New table_SLI_Irradiation_LogDataTable(ds.Tables("table_SLI_Irradiation_Log")))
            End If
            If (Not (ds.Tables("table_LLI_Irradiation_Log")) Is Nothing) Then
                MyBase.Tables.Add(New table_LLI_Irradiation_LogDataTable(ds.Tables("table_LLI_Irradiation_Log")))
            End If
            If (Not (ds.Tables("table_Monitor")) Is Nothing) Then
                MyBase.Tables.Add(New table_MonitorDataTable(ds.Tables("table_Monitor")))
            End If
            If (Not (ds.Tables("table_Monitor_Set")) Is Nothing) Then
                MyBase.Tables.Add(New table_Monitor_SetDataTable(ds.Tables("table_Monitor_Set")))
            End If
            If (Not (ds.Tables("table_SRM")) Is Nothing) Then
                MyBase.Tables.Add(New table_SRMDataTable(ds.Tables("table_SRM")))
            End If
            If (Not (ds.Tables("table_SRM_Set")) Is Nothing) Then
                MyBase.Tables.Add(New table_SRM_SetDataTable(ds.Tables("table_SRM_Set")))
            End If
            If (Not (ds.Tables("table_Sample_NAA_Results")) Is Nothing) Then
                MyBase.Tables.Add(New table_Sample_NAA_ResultsDataTable(ds.Tables("table_Sample_NAA_Results")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletable_Client = CType(MyBase.Tables("table_Client"),table_ClientDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_Client) Is Nothing) Then
                Me.tabletable_Client.InitVars
            End If
        End If
        Me.tabletable_Country = CType(MyBase.Tables("table_Country"),table_CountryDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_Country) Is Nothing) Then
                Me.tabletable_Country.InitVars
            End If
        End If
        Me.tabletable_Determined_Elements = CType(MyBase.Tables("table_Determined_Elements"),table_Determined_ElementsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_Determined_Elements) Is Nothing) Then
                Me.tabletable_Determined_Elements.InitVars
            End If
        End If
        Me.tabletable_Physical_Environment = CType(MyBase.Tables("table_Physical_Environment"),table_Physical_EnvironmentDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_Physical_Environment) Is Nothing) Then
                Me.tabletable_Physical_Environment.InitVars
            End If
        End If
        Me.tabletable_Received_By = CType(MyBase.Tables("table_Received_By"),table_Received_ByDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_Received_By) Is Nothing) Then
                Me.tabletable_Received_By.InitVars
            End If
        End If
        Me.tabletable_Sample_Preparation = CType(MyBase.Tables("table_Sample_Preparation"),table_Sample_PreparationDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_Sample_Preparation) Is Nothing) Then
                Me.tabletable_Sample_Preparation.InitVars
            End If
        End If
        Me.tabletable_Sample_Set = CType(MyBase.Tables("table_Sample_Set"),table_Sample_SetDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_Sample_Set) Is Nothing) Then
                Me.tabletable_Sample_Set.InitVars
            End If
        End If
        Me.tabletable_Sample_Type = CType(MyBase.Tables("table_Sample_Type"),table_Sample_TypeDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_Sample_Type) Is Nothing) Then
                Me.tabletable_Sample_Type.InitVars
            End If
        End If
        Me.tabletable_Sample = CType(MyBase.Tables("table_Sample"),table_SampleDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_Sample) Is Nothing) Then
                Me.tabletable_Sample.InitVars
            End If
        End If
        Me.tabletable_Sample_Sample_Preparation = CType(MyBase.Tables("table_Sample_Sample_Preparation"),table_Sample_Sample_PreparationDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_Sample_Sample_Preparation) Is Nothing) Then
                Me.tabletable_Sample_Sample_Preparation.InitVars
            End If
        End If
        Me.tabletable_SLI_Irradiation_Log = CType(MyBase.Tables("table_SLI_Irradiation_Log"),table_SLI_Irradiation_LogDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_SLI_Irradiation_Log) Is Nothing) Then
                Me.tabletable_SLI_Irradiation_Log.InitVars
            End If
        End If
        Me.tabletable_LLI_Irradiation_Log = CType(MyBase.Tables("table_LLI_Irradiation_Log"),table_LLI_Irradiation_LogDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_LLI_Irradiation_Log) Is Nothing) Then
                Me.tabletable_LLI_Irradiation_Log.InitVars
            End If
        End If
        Me.tabletable_Monitor = CType(MyBase.Tables("table_Monitor"),table_MonitorDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_Monitor) Is Nothing) Then
                Me.tabletable_Monitor.InitVars
            End If
        End If
        Me.tabletable_Monitor_Set = CType(MyBase.Tables("table_Monitor_Set"),table_Monitor_SetDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_Monitor_Set) Is Nothing) Then
                Me.tabletable_Monitor_Set.InitVars
            End If
        End If
        Me.tabletable_SRM = CType(MyBase.Tables("table_SRM"),table_SRMDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_SRM) Is Nothing) Then
                Me.tabletable_SRM.InitVars
            End If
        End If
        Me.tabletable_SRM_Set = CType(MyBase.Tables("table_SRM_Set"),table_SRM_SetDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_SRM_Set) Is Nothing) Then
                Me.tabletable_SRM_Set.InitVars
            End If
        End If
        Me.tabletable_Sample_NAA_Results = CType(MyBase.Tables("table_Sample_NAA_Results"),table_Sample_NAA_ResultsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletable_Sample_NAA_Results) Is Nothing) Then
                Me.tabletable_Sample_NAA_Results.InitVars
            End If
        End If
        Me.relationFK_table_Sample_Set_table_Client = Me.Relations("FK_table_Sample_Set_table_Client")
        Me.relationFK_table_Sample_table_Sample_Set = Me.Relations("FK_table_Sample_table_Sample_Set")
        Me.relationFK_table_Sample_table_Sample_Set1 = Me.Relations("FK_table_Sample_table_Sample_Set1")
        Me.relationFK_table_SLI_Irradiation_Log_table_Sample = Me.Relations("FK_table_SLI_Irradiation_Log_table_Sample")
        Me.relationFK_table_SLI_Irradiation_Log_table_Sample1 = Me.Relations("FK_table_SLI_Irradiation_Log_table_Sample1")
        Me.relationFK_table_LLI_Irradiation_Log_table_Sample = Me.Relations("FK_table_LLI_Irradiation_Log_table_Sample")
        Me.relationFK_table_LLI_Irradiation_Log_table_Sample1 = Me.Relations("FK_table_LLI_Irradiation_Log_table_Sample1")
        Me.relationFK_table_SLI_Irradiation_Log_table_Monitor = Me.Relations("FK_table_SLI_Irradiation_Log_table_Monitor")
        Me.relationFK_table_SLI_Irradiation_Log_table_SRM = Me.Relations("FK_table_SLI_Irradiation_Log_table_SRM")
        Me.relationFK_table_LLI_Irradiation_Log_table_Monitor = Me.Relations("FK_table_LLI_Irradiation_Log_table_Monitor")
        Me.relationFK_table_LLI_Irradiation_Log_table_SRM = Me.Relations("FK_table_LLI_Irradiation_Log_table_SRM")
        Me.relationFK_table_Monitor_table_Monitor_Set = Me.Relations("FK_table_Monitor_table_Monitor_Set")
        Me.relationFK_table_SRM_table_SRM_Set = Me.Relations("FK_table_SRM_table_SRM_Set")
        Me.relationFK_table_Sample_table_Sample_Set2 = Me.Relations("FK_table_Sample_table_Sample_Set2")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "NAA_DB_EXPDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/NAA_DB_EXPDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletable_Client = New table_ClientDataTable()
        MyBase.Tables.Add(Me.tabletable_Client)
        Me.tabletable_Country = New table_CountryDataTable()
        MyBase.Tables.Add(Me.tabletable_Country)
        Me.tabletable_Determined_Elements = New table_Determined_ElementsDataTable()
        MyBase.Tables.Add(Me.tabletable_Determined_Elements)
        Me.tabletable_Physical_Environment = New table_Physical_EnvironmentDataTable()
        MyBase.Tables.Add(Me.tabletable_Physical_Environment)
        Me.tabletable_Received_By = New table_Received_ByDataTable()
        MyBase.Tables.Add(Me.tabletable_Received_By)
        Me.tabletable_Sample_Preparation = New table_Sample_PreparationDataTable()
        MyBase.Tables.Add(Me.tabletable_Sample_Preparation)
        Me.tabletable_Sample_Set = New table_Sample_SetDataTable()
        MyBase.Tables.Add(Me.tabletable_Sample_Set)
        Me.tabletable_Sample_Type = New table_Sample_TypeDataTable()
        MyBase.Tables.Add(Me.tabletable_Sample_Type)
        Me.tabletable_Sample = New table_SampleDataTable()
        MyBase.Tables.Add(Me.tabletable_Sample)
        Me.tabletable_Sample_Sample_Preparation = New table_Sample_Sample_PreparationDataTable()
        MyBase.Tables.Add(Me.tabletable_Sample_Sample_Preparation)
        Me.tabletable_SLI_Irradiation_Log = New table_SLI_Irradiation_LogDataTable()
        MyBase.Tables.Add(Me.tabletable_SLI_Irradiation_Log)
        Me.tabletable_LLI_Irradiation_Log = New table_LLI_Irradiation_LogDataTable()
        MyBase.Tables.Add(Me.tabletable_LLI_Irradiation_Log)
        Me.tabletable_Monitor = New table_MonitorDataTable()
        MyBase.Tables.Add(Me.tabletable_Monitor)
        Me.tabletable_Monitor_Set = New table_Monitor_SetDataTable()
        MyBase.Tables.Add(Me.tabletable_Monitor_Set)
        Me.tabletable_SRM = New table_SRMDataTable()
        MyBase.Tables.Add(Me.tabletable_SRM)
        Me.tabletable_SRM_Set = New table_SRM_SetDataTable()
        MyBase.Tables.Add(Me.tabletable_SRM_Set)
        Me.tabletable_Sample_NAA_Results = New table_Sample_NAA_ResultsDataTable()
        MyBase.Tables.Add(Me.tabletable_Sample_NAA_Results)
        Me.relationFK_table_Sample_Set_table_Client = New Global.System.Data.DataRelation("FK_table_Sample_Set_table_Client", New Global.System.Data.DataColumn() {Me.tabletable_Client.Country_CodeColumn, Me.tabletable_Client.Client_IDColumn}, New Global.System.Data.DataColumn() {Me.tabletable_Sample_Set.Country_CodeColumn, Me.tabletable_Sample_Set.Client_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_table_Sample_Set_table_Client)
        Me.relationFK_table_Sample_table_Sample_Set = New Global.System.Data.DataRelation("FK_table_Sample_table_Sample_Set", New Global.System.Data.DataColumn() {Me.tabletable_Sample_Set.Country_CodeColumn, Me.tabletable_Sample_Set.Client_IDColumn, Me.tabletable_Sample_Set.YearColumn, Me.tabletable_Sample_Set.Sample_Set_IDColumn, Me.tabletable_Sample_Set.Sample_Set_IndexColumn}, New Global.System.Data.DataColumn() {Me.tabletable_Sample.F_Country_CodeColumn, Me.tabletable_Sample.F_Client_IDColumn, Me.tabletable_Sample.F_YearColumn, Me.tabletable_Sample.F_Sample_Set_IDColumn, Me.tabletable_Sample.F_Sample_Set_IndexColumn}, false)
        Me.Relations.Add(Me.relationFK_table_Sample_table_Sample_Set)
        Me.relationFK_table_Sample_table_Sample_Set1 = New Global.System.Data.DataRelation("FK_table_Sample_table_Sample_Set1", New Global.System.Data.DataColumn() {Me.tabletable_Sample_Set.Country_CodeColumn, Me.tabletable_Sample_Set.Client_IDColumn, Me.tabletable_Sample_Set.YearColumn, Me.tabletable_Sample_Set.Sample_Set_IDColumn, Me.tabletable_Sample_Set.Sample_Set_IndexColumn}, New Global.System.Data.DataColumn() {Me.tabletable_Sample_Sample_Preparation.F_Country_CodeColumn, Me.tabletable_Sample_Sample_Preparation.F_Client_IDColumn, Me.tabletable_Sample_Sample_Preparation.F_YearColumn, Me.tabletable_Sample_Sample_Preparation.F_Sample_Set_IDColumn, Me.tabletable_Sample_Sample_Preparation.F_Sample_Set_IndexColumn}, false)
        Me.Relations.Add(Me.relationFK_table_Sample_table_Sample_Set1)
        Me.relationFK_table_SLI_Irradiation_Log_table_Sample = New Global.System.Data.DataRelation("FK_table_SLI_Irradiation_Log_table_Sample", New Global.System.Data.DataColumn() {Me.tabletable_Sample.F_Country_CodeColumn, Me.tabletable_Sample.F_Client_IDColumn, Me.tabletable_Sample.F_YearColumn, Me.tabletable_Sample.F_Sample_Set_IDColumn, Me.tabletable_Sample.F_Sample_Set_IndexColumn, Me.tabletable_Sample.A_Sample_IDColumn}, New Global.System.Data.DataColumn() {Me.tabletable_SLI_Irradiation_Log.Country_CodeColumn, Me.tabletable_SLI_Irradiation_Log.Client_IDColumn, Me.tabletable_SLI_Irradiation_Log.YearColumn, Me.tabletable_SLI_Irradiation_Log.Sample_Set_IDColumn, Me.tabletable_SLI_Irradiation_Log.Sample_Set_IndexColumn, Me.tabletable_SLI_Irradiation_Log.Sample_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_table_SLI_Irradiation_Log_table_Sample)
        Me.relationFK_table_SLI_Irradiation_Log_table_Sample1 = New Global.System.Data.DataRelation("FK_table_SLI_Irradiation_Log_table_Sample1", New Global.System.Data.DataColumn() {Me.tabletable_Sample_Sample_Preparation.F_Country_CodeColumn, Me.tabletable_Sample_Sample_Preparation.F_Client_IDColumn, Me.tabletable_Sample_Sample_Preparation.F_YearColumn, Me.tabletable_Sample_Sample_Preparation.F_Sample_Set_IDColumn, Me.tabletable_Sample_Sample_Preparation.F_Sample_Set_IndexColumn, Me.tabletable_Sample_Sample_Preparation.A_Sample_IDColumn}, New Global.System.Data.DataColumn() {Me.tabletable_SLI_Irradiation_Log.Country_CodeColumn, Me.tabletable_SLI_Irradiation_Log.Client_IDColumn, Me.tabletable_SLI_Irradiation_Log.YearColumn, Me.tabletable_SLI_Irradiation_Log.Sample_Set_IDColumn, Me.tabletable_SLI_Irradiation_Log.Sample_Set_IndexColumn, Me.tabletable_SLI_Irradiation_Log.Sample_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_table_SLI_Irradiation_Log_table_Sample1)
        Me.relationFK_table_LLI_Irradiation_Log_table_Sample = New Global.System.Data.DataRelation("FK_table_LLI_Irradiation_Log_table_Sample", New Global.System.Data.DataColumn() {Me.tabletable_Sample.F_Country_CodeColumn, Me.tabletable_Sample.F_Client_IDColumn, Me.tabletable_Sample.F_YearColumn, Me.tabletable_Sample.F_Sample_Set_IDColumn, Me.tabletable_Sample.F_Sample_Set_IndexColumn, Me.tabletable_Sample.A_Sample_IDColumn}, New Global.System.Data.DataColumn() {Me.tabletable_LLI_Irradiation_Log.Country_CodeColumn, Me.tabletable_LLI_Irradiation_Log.Client_IDColumn, Me.tabletable_LLI_Irradiation_Log.YearColumn, Me.tabletable_LLI_Irradiation_Log.Sample_Set_IDColumn, Me.tabletable_LLI_Irradiation_Log.Sample_Set_IndexColumn, Me.tabletable_LLI_Irradiation_Log.Sample_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_table_LLI_Irradiation_Log_table_Sample)
        Me.relationFK_table_LLI_Irradiation_Log_table_Sample1 = New Global.System.Data.DataRelation("FK_table_LLI_Irradiation_Log_table_Sample1", New Global.System.Data.DataColumn() {Me.tabletable_Sample_Sample_Preparation.F_Country_CodeColumn, Me.tabletable_Sample_Sample_Preparation.F_Client_IDColumn, Me.tabletable_Sample_Sample_Preparation.F_YearColumn, Me.tabletable_Sample_Sample_Preparation.F_Sample_Set_IDColumn, Me.tabletable_Sample_Sample_Preparation.F_Sample_Set_IndexColumn, Me.tabletable_Sample_Sample_Preparation.A_Sample_IDColumn}, New Global.System.Data.DataColumn() {Me.tabletable_LLI_Irradiation_Log.Country_CodeColumn, Me.tabletable_LLI_Irradiation_Log.Client_IDColumn, Me.tabletable_LLI_Irradiation_Log.YearColumn, Me.tabletable_LLI_Irradiation_Log.Sample_Set_IDColumn, Me.tabletable_LLI_Irradiation_Log.Sample_Set_IndexColumn, Me.tabletable_LLI_Irradiation_Log.Sample_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_table_LLI_Irradiation_Log_table_Sample1)
        Me.relationFK_table_SLI_Irradiation_Log_table_Monitor = New Global.System.Data.DataRelation("FK_table_SLI_Irradiation_Log_table_Monitor", New Global.System.Data.DataColumn() {Me.tabletable_Monitor.Monitor_Set_NameColumn, Me.tabletable_Monitor.Monitor_Set_NumberColumn, Me.tabletable_Monitor.Monitor_NumberColumn}, New Global.System.Data.DataColumn() {Me.tabletable_SLI_Irradiation_Log.Sample_Set_IDColumn, Me.tabletable_SLI_Irradiation_Log.Sample_Set_IndexColumn, Me.tabletable_SLI_Irradiation_Log.Sample_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_table_SLI_Irradiation_Log_table_Monitor)
        Me.relationFK_table_SLI_Irradiation_Log_table_SRM = New Global.System.Data.DataRelation("FK_table_SLI_Irradiation_Log_table_SRM", New Global.System.Data.DataColumn() {Me.tabletable_SRM.SRM_Set_NameColumn, Me.tabletable_SRM.SRM_Set_NumberColumn, Me.tabletable_SRM.SRM_NumberColumn}, New Global.System.Data.DataColumn() {Me.tabletable_SLI_Irradiation_Log.Sample_Set_IDColumn, Me.tabletable_SLI_Irradiation_Log.Sample_Set_IndexColumn, Me.tabletable_SLI_Irradiation_Log.Sample_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_table_SLI_Irradiation_Log_table_SRM)
        Me.relationFK_table_LLI_Irradiation_Log_table_Monitor = New Global.System.Data.DataRelation("FK_table_LLI_Irradiation_Log_table_Monitor", New Global.System.Data.DataColumn() {Me.tabletable_Monitor.Monitor_Set_NameColumn, Me.tabletable_Monitor.Monitor_Set_NumberColumn, Me.tabletable_Monitor.Monitor_NumberColumn}, New Global.System.Data.DataColumn() {Me.tabletable_LLI_Irradiation_Log.Sample_Set_IDColumn, Me.tabletable_LLI_Irradiation_Log.Sample_Set_IndexColumn, Me.tabletable_LLI_Irradiation_Log.Sample_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_table_LLI_Irradiation_Log_table_Monitor)
        Me.relationFK_table_LLI_Irradiation_Log_table_SRM = New Global.System.Data.DataRelation("FK_table_LLI_Irradiation_Log_table_SRM", New Global.System.Data.DataColumn() {Me.tabletable_SRM.SRM_Set_NameColumn, Me.tabletable_SRM.SRM_Set_NumberColumn, Me.tabletable_SRM.SRM_NumberColumn}, New Global.System.Data.DataColumn() {Me.tabletable_LLI_Irradiation_Log.Sample_Set_IDColumn, Me.tabletable_LLI_Irradiation_Log.Sample_Set_IndexColumn, Me.tabletable_LLI_Irradiation_Log.Sample_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_table_LLI_Irradiation_Log_table_SRM)
        Me.relationFK_table_Monitor_table_Monitor_Set = New Global.System.Data.DataRelation("FK_table_Monitor_table_Monitor_Set", New Global.System.Data.DataColumn() {Me.tabletable_Monitor_Set.Monitor_Set_NameColumn, Me.tabletable_Monitor_Set.Monitor_Set_NumberColumn}, New Global.System.Data.DataColumn() {Me.tabletable_Monitor.Monitor_Set_NameColumn, Me.tabletable_Monitor.Monitor_Set_NumberColumn}, false)
        Me.Relations.Add(Me.relationFK_table_Monitor_table_Monitor_Set)
        Me.relationFK_table_SRM_table_SRM_Set = New Global.System.Data.DataRelation("FK_table_SRM_table_SRM_Set", New Global.System.Data.DataColumn() {Me.tabletable_SRM_Set.SRM_Set_NameColumn, Me.tabletable_SRM_Set.SRM_Set_NumberColumn}, New Global.System.Data.DataColumn() {Me.tabletable_SRM.SRM_Set_NameColumn, Me.tabletable_SRM.SRM_Set_NumberColumn}, false)
        Me.Relations.Add(Me.relationFK_table_SRM_table_SRM_Set)
        Me.relationFK_table_Sample_table_Sample_Set2 = New Global.System.Data.DataRelation("FK_table_Sample_table_Sample_Set2", New Global.System.Data.DataColumn() {Me.tabletable_Sample_Set.Country_CodeColumn, Me.tabletable_Sample_Set.Client_IDColumn, Me.tabletable_Sample_Set.YearColumn, Me.tabletable_Sample_Set.Sample_Set_IDColumn, Me.tabletable_Sample_Set.Sample_Set_IndexColumn}, New Global.System.Data.DataColumn() {Me.tabletable_Sample_NAA_Results.F_Country_CodeColumn, Me.tabletable_Sample_NAA_Results.F_Client_IDColumn, Me.tabletable_Sample_NAA_Results.F_YearColumn, Me.tabletable_Sample_NAA_Results.F_Sample_Set_IDColumn, Me.tabletable_Sample_NAA_Results.F_Sample_Set_IndexColumn}, false)
        Me.Relations.Add(Me.relationFK_table_Sample_table_Sample_Set2)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_Client() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_Country() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_Determined_Elements() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_Physical_Environment() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_Received_By() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_Sample_Preparation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_Sample_Set() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_Sample_Type() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_Sample() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_Sample_Sample_Preparation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_SLI_Irradiation_Log() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_LLI_Irradiation_Log() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_Monitor() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_Monitor_Set() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_SRM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_SRM_Set() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetable_Sample_NAA_Results() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_ClientRowChangeEventHandler(ByVal sender As Object, ByVal e As table_ClientRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_CountryRowChangeEventHandler(ByVal sender As Object, ByVal e As table_CountryRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_Determined_ElementsRowChangeEventHandler(ByVal sender As Object, ByVal e As table_Determined_ElementsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_Physical_EnvironmentRowChangeEventHandler(ByVal sender As Object, ByVal e As table_Physical_EnvironmentRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_Received_ByRowChangeEventHandler(ByVal sender As Object, ByVal e As table_Received_ByRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_Sample_PreparationRowChangeEventHandler(ByVal sender As Object, ByVal e As table_Sample_PreparationRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_Sample_SetRowChangeEventHandler(ByVal sender As Object, ByVal e As table_Sample_SetRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_Sample_TypeRowChangeEventHandler(ByVal sender As Object, ByVal e As table_Sample_TypeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_SampleRowChangeEventHandler(ByVal sender As Object, ByVal e As table_SampleRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_Sample_Sample_PreparationRowChangeEventHandler(ByVal sender As Object, ByVal e As table_Sample_Sample_PreparationRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_SLI_Irradiation_LogRowChangeEventHandler(ByVal sender As Object, ByVal e As table_SLI_Irradiation_LogRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_LLI_Irradiation_LogRowChangeEventHandler(ByVal sender As Object, ByVal e As table_LLI_Irradiation_LogRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_MonitorRowChangeEventHandler(ByVal sender As Object, ByVal e As table_MonitorRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_Monitor_SetRowChangeEventHandler(ByVal sender As Object, ByVal e As table_Monitor_SetRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_SRMRowChangeEventHandler(ByVal sender As Object, ByVal e As table_SRMRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_SRM_SetRowChangeEventHandler(ByVal sender As Object, ByVal e As table_SRM_SetRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub table_Sample_NAA_ResultsRowChangeEventHandler(ByVal sender As Object, ByVal e As table_Sample_NAA_ResultsRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_ClientDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_ClientRow)
        
        Private columnClient_ID As Global.System.Data.DataColumn
        
        Private columnCountry_Code As Global.System.Data.DataColumn
        
        Private columnCountry As Global.System.Data.DataColumn
        
        Private columnPostal_Code As Global.System.Data.DataColumn
        
        Private columnRepublic As Global.System.Data.DataColumn
        
        Private columnRegion As Global.System.Data.DataColumn
        
        Private columnArea As Global.System.Data.DataColumn
        
        Private columnCity As Global.System.Data.DataColumn
        
        Private columnStreet As Global.System.Data.DataColumn
        
        Private columnHouse As Global.System.Data.DataColumn
        
        Private columnBuilding As Global.System.Data.DataColumn
        
        Private columnOrganization As Global.System.Data.DataColumn
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnGender As Global.System.Data.DataColumn
        
        Private columnLast_Name As Global.System.Data.DataColumn
        
        Private columnFirst_Name As Global.System.Data.DataColumn
        
        Private columnMiddle_Name As Global.System.Data.DataColumn
        
        Private columnPhone_Country_Code_Phone_1 As Global.System.Data.DataColumn
        
        Private columnCode_Phone_1 As Global.System.Data.DataColumn
        
        Private columnPhone_1 As Global.System.Data.DataColumn
        
        Private columnPhone_Country_Code_Phone_2 As Global.System.Data.DataColumn
        
        Private columnCode_Phone_2 As Global.System.Data.DataColumn
        
        Private columnPhone_2 As Global.System.Data.DataColumn
        
        Private columnPhone_Country_Code_Fax_1 As Global.System.Data.DataColumn
        
        Private columnCode_Fax_1 As Global.System.Data.DataColumn
        
        Private columnFax_1 As Global.System.Data.DataColumn
        
        Private columnPhone_Country_Code_Mobile_Phone_1 As Global.System.Data.DataColumn
        
        Private columnCode_Mobile_Phone_1 As Global.System.Data.DataColumn
        
        Private columnMobile_Phone_1 As Global.System.Data.DataColumn
        
        Private columnE_mail_1 As Global.System.Data.DataColumn
        
        Private columnE_mail_2 As Global.System.Data.DataColumn
        
        Private columnNotes As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_Client"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Client_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClient_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Country_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountry_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CountryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Postal_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPostal_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RepublicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRepublic
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RegionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StreetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStreet
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HouseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHouse
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BuildingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuilding
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OrganizationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrganization
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GenderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Last_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLast_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property First_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirst_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Middle_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMiddle_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Phone_Country_Code_Phone_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhone_Country_Code_Phone_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Code_Phone_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_Phone_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Phone_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhone_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Phone_Country_Code_Phone_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhone_Country_Code_Phone_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Code_Phone_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_Phone_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Phone_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhone_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Phone_Country_Code_Fax_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhone_Country_Code_Fax_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Code_Fax_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_Fax_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Fax_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFax_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Phone_Country_Code_Mobile_Phone_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhone_Country_Code_Mobile_Phone_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Code_Mobile_Phone_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_Mobile_Phone_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Mobile_Phone_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMobile_Phone_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property E_mail_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_mail_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property E_mail_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_mail_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NotesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_ClientRow
            Get
                Return CType(Me.Rows(index),table_ClientRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_ClientRowChanging As table_ClientRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_ClientRowChanged As table_ClientRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_ClientRowDeleting As table_ClientRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_ClientRowDeleted As table_ClientRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_ClientRow(ByVal row As table_ClientRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_ClientRow( _
                    ByVal Client_ID As String,  _
                    ByVal Country_Code As String,  _
                    ByVal Country As String,  _
                    ByVal Postal_Code As String,  _
                    ByVal Republic As String,  _
                    ByVal _Region As String,  _
                    ByVal Area As String,  _
                    ByVal City As String,  _
                    ByVal Street As String,  _
                    ByVal House As String,  _
                    ByVal Building As String,  _
                    ByVal Organization As String,  _
                    ByVal Title As String,  _
                    ByVal Gender As String,  _
                    ByVal Last_Name As String,  _
                    ByVal First_Name As String,  _
                    ByVal Middle_Name As String,  _
                    ByVal Phone_Country_Code_Phone_1 As String,  _
                    ByVal Code_Phone_1 As String,  _
                    ByVal Phone_1 As String,  _
                    ByVal Phone_Country_Code_Phone_2 As String,  _
                    ByVal Code_Phone_2 As String,  _
                    ByVal Phone_2 As String,  _
                    ByVal Phone_Country_Code_Fax_1 As String,  _
                    ByVal Code_Fax_1 As String,  _
                    ByVal Fax_1 As String,  _
                    ByVal Phone_Country_Code_Mobile_Phone_1 As String,  _
                    ByVal Code_Mobile_Phone_1 As String,  _
                    ByVal Mobile_Phone_1 As String,  _
                    ByVal E_mail_1 As String,  _
                    ByVal E_mail_2 As String,  _
                    ByVal Notes As String) As table_ClientRow
            Dim rowtable_ClientRow As table_ClientRow = CType(Me.NewRow,table_ClientRow)
            Dim columnValuesArray() As Object = New Object() {Client_ID, Country_Code, Country, Postal_Code, Republic, _Region, Area, City, Street, House, Building, Organization, Title, Gender, Last_Name, First_Name, Middle_Name, Phone_Country_Code_Phone_1, Code_Phone_1, Phone_1, Phone_Country_Code_Phone_2, Code_Phone_2, Phone_2, Phone_Country_Code_Fax_1, Code_Fax_1, Fax_1, Phone_Country_Code_Mobile_Phone_1, Code_Mobile_Phone_1, Mobile_Phone_1, E_mail_1, E_mail_2, Notes}
            rowtable_ClientRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_ClientRow)
            Return rowtable_ClientRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_ClientDataTable = CType(MyBase.Clone,table_ClientDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_ClientDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnClient_ID = MyBase.Columns("Client_ID")
            Me.columnCountry_Code = MyBase.Columns("Country_Code")
            Me.columnCountry = MyBase.Columns("Country")
            Me.columnPostal_Code = MyBase.Columns("Postal_Code")
            Me.columnRepublic = MyBase.Columns("Republic")
            Me.columnRegion = MyBase.Columns("Region")
            Me.columnArea = MyBase.Columns("Area")
            Me.columnCity = MyBase.Columns("City")
            Me.columnStreet = MyBase.Columns("Street")
            Me.columnHouse = MyBase.Columns("House")
            Me.columnBuilding = MyBase.Columns("Building")
            Me.columnOrganization = MyBase.Columns("Organization")
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnGender = MyBase.Columns("Gender")
            Me.columnLast_Name = MyBase.Columns("Last_Name")
            Me.columnFirst_Name = MyBase.Columns("First_Name")
            Me.columnMiddle_Name = MyBase.Columns("Middle_Name")
            Me.columnPhone_Country_Code_Phone_1 = MyBase.Columns("Phone_Country_Code_Phone_1")
            Me.columnCode_Phone_1 = MyBase.Columns("Code_Phone_1")
            Me.columnPhone_1 = MyBase.Columns("Phone_1")
            Me.columnPhone_Country_Code_Phone_2 = MyBase.Columns("Phone_Country_Code_Phone_2")
            Me.columnCode_Phone_2 = MyBase.Columns("Code_Phone_2")
            Me.columnPhone_2 = MyBase.Columns("Phone_2")
            Me.columnPhone_Country_Code_Fax_1 = MyBase.Columns("Phone_Country_Code_Fax_1")
            Me.columnCode_Fax_1 = MyBase.Columns("Code_Fax_1")
            Me.columnFax_1 = MyBase.Columns("Fax_1")
            Me.columnPhone_Country_Code_Mobile_Phone_1 = MyBase.Columns("Phone_Country_Code_Mobile_Phone_1")
            Me.columnCode_Mobile_Phone_1 = MyBase.Columns("Code_Mobile_Phone_1")
            Me.columnMobile_Phone_1 = MyBase.Columns("Mobile_Phone_1")
            Me.columnE_mail_1 = MyBase.Columns("E_mail_1")
            Me.columnE_mail_2 = MyBase.Columns("E_mail_2")
            Me.columnNotes = MyBase.Columns("Notes")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnClient_ID = New Global.System.Data.DataColumn("Client_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClient_ID)
            Me.columnCountry_Code = New Global.System.Data.DataColumn("Country_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountry_Code)
            Me.columnCountry = New Global.System.Data.DataColumn("Country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountry)
            Me.columnPostal_Code = New Global.System.Data.DataColumn("Postal_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPostal_Code)
            Me.columnRepublic = New Global.System.Data.DataColumn("Republic", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRepublic)
            Me.columnRegion = New Global.System.Data.DataColumn("Region", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnRegion.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "RegionColumn")
            Me.columnRegion.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnRegion")
            Me.columnRegion.ExtendedProperties.Add("Generator_UserColumnName", "Region")
            MyBase.Columns.Add(Me.columnRegion)
            Me.columnArea = New Global.System.Data.DataColumn("Area", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea)
            Me.columnCity = New Global.System.Data.DataColumn("City", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCity)
            Me.columnStreet = New Global.System.Data.DataColumn("Street", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStreet)
            Me.columnHouse = New Global.System.Data.DataColumn("House", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHouse)
            Me.columnBuilding = New Global.System.Data.DataColumn("Building", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuilding)
            Me.columnOrganization = New Global.System.Data.DataColumn("Organization", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrganization)
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnGender = New Global.System.Data.DataColumn("Gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGender)
            Me.columnLast_Name = New Global.System.Data.DataColumn("Last_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLast_Name)
            Me.columnFirst_Name = New Global.System.Data.DataColumn("First_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirst_Name)
            Me.columnMiddle_Name = New Global.System.Data.DataColumn("Middle_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMiddle_Name)
            Me.columnPhone_Country_Code_Phone_1 = New Global.System.Data.DataColumn("Phone_Country_Code_Phone_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhone_Country_Code_Phone_1)
            Me.columnCode_Phone_1 = New Global.System.Data.DataColumn("Code_Phone_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_Phone_1)
            Me.columnPhone_1 = New Global.System.Data.DataColumn("Phone_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhone_1)
            Me.columnPhone_Country_Code_Phone_2 = New Global.System.Data.DataColumn("Phone_Country_Code_Phone_2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhone_Country_Code_Phone_2)
            Me.columnCode_Phone_2 = New Global.System.Data.DataColumn("Code_Phone_2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_Phone_2)
            Me.columnPhone_2 = New Global.System.Data.DataColumn("Phone_2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhone_2)
            Me.columnPhone_Country_Code_Fax_1 = New Global.System.Data.DataColumn("Phone_Country_Code_Fax_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhone_Country_Code_Fax_1)
            Me.columnCode_Fax_1 = New Global.System.Data.DataColumn("Code_Fax_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_Fax_1)
            Me.columnFax_1 = New Global.System.Data.DataColumn("Fax_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFax_1)
            Me.columnPhone_Country_Code_Mobile_Phone_1 = New Global.System.Data.DataColumn("Phone_Country_Code_Mobile_Phone_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhone_Country_Code_Mobile_Phone_1)
            Me.columnCode_Mobile_Phone_1 = New Global.System.Data.DataColumn("Code_Mobile_Phone_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_Mobile_Phone_1)
            Me.columnMobile_Phone_1 = New Global.System.Data.DataColumn("Mobile_Phone_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMobile_Phone_1)
            Me.columnE_mail_1 = New Global.System.Data.DataColumn("E_mail_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_mail_1)
            Me.columnE_mail_2 = New Global.System.Data.DataColumn("E_mail_2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_mail_2)
            Me.columnNotes = New Global.System.Data.DataColumn("Notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotes)
            Me.columnClient_ID.AllowDBNull = false
            Me.columnClient_ID.MaxLength = 2
            Me.columnCountry_Code.AllowDBNull = false
            Me.columnCountry_Code.MaxLength = 2
            Me.columnCountry.AllowDBNull = false
            Me.columnCountry.MaxLength = 50
            Me.columnPostal_Code.MaxLength = 6
            Me.columnRepublic.MaxLength = 20
            Me.columnRegion.MaxLength = 20
            Me.columnArea.MaxLength = 20
            Me.columnCity.MaxLength = 20
            Me.columnStreet.MaxLength = 25
            Me.columnHouse.MaxLength = 5
            Me.columnBuilding.MaxLength = 5
            Me.columnOrganization.MaxLength = 50
            Me.columnTitle.MaxLength = 5
            Me.columnGender.MaxLength = 1
            Me.columnLast_Name.MaxLength = 20
            Me.columnFirst_Name.MaxLength = 20
            Me.columnMiddle_Name.MaxLength = 20
            Me.columnPhone_Country_Code_Phone_1.MaxLength = 4
            Me.columnCode_Phone_1.MaxLength = 3
            Me.columnPhone_1.MaxLength = 7
            Me.columnPhone_Country_Code_Phone_2.MaxLength = 4
            Me.columnCode_Phone_2.MaxLength = 3
            Me.columnPhone_2.MaxLength = 7
            Me.columnPhone_Country_Code_Fax_1.MaxLength = 4
            Me.columnCode_Fax_1.MaxLength = 3
            Me.columnFax_1.MaxLength = 7
            Me.columnPhone_Country_Code_Mobile_Phone_1.MaxLength = 4
            Me.columnCode_Mobile_Phone_1.MaxLength = 3
            Me.columnMobile_Phone_1.MaxLength = 7
            Me.columnE_mail_1.MaxLength = 20
            Me.columnE_mail_2.MaxLength = 20
            Me.columnNotes.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_ClientRow() As table_ClientRow
            Return CType(Me.NewRow,table_ClientRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_ClientRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_ClientRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_ClientRowChangedEvent) Is Nothing) Then
                RaiseEvent table_ClientRowChanged(Me, New table_ClientRowChangeEvent(CType(e.Row,table_ClientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_ClientRowChangingEvent) Is Nothing) Then
                RaiseEvent table_ClientRowChanging(Me, New table_ClientRowChangeEvent(CType(e.Row,table_ClientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_ClientRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_ClientRowDeleted(Me, New table_ClientRowChangeEvent(CType(e.Row,table_ClientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_ClientRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_ClientRowDeleting(Me, New table_ClientRowChangeEvent(CType(e.Row,table_ClientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_ClientRow(ByVal row As table_ClientRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_ClientDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_CountryDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_CountryRow)
        
        Private columnCountry As Global.System.Data.DataColumn
        
        Private columnCountry_Code As Global.System.Data.DataColumn
        
        Private columnPhone_Country_Code As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_Country"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CountryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Country_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountry_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Phone_Country_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhone_Country_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_CountryRow
            Get
                Return CType(Me.Rows(index),table_CountryRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_CountryRowChanging As table_CountryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_CountryRowChanged As table_CountryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_CountryRowDeleting As table_CountryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_CountryRowDeleted As table_CountryRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_CountryRow(ByVal row As table_CountryRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_CountryRow(ByVal Country As String, ByVal Country_Code As String, ByVal Phone_Country_Code As String) As table_CountryRow
            Dim rowtable_CountryRow As table_CountryRow = CType(Me.NewRow,table_CountryRow)
            Dim columnValuesArray() As Object = New Object() {Country, Country_Code, Phone_Country_Code}
            rowtable_CountryRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_CountryRow)
            Return rowtable_CountryRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_CountryDataTable = CType(MyBase.Clone,table_CountryDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_CountryDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCountry = MyBase.Columns("Country")
            Me.columnCountry_Code = MyBase.Columns("Country_Code")
            Me.columnPhone_Country_Code = MyBase.Columns("Phone_Country_Code")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCountry = New Global.System.Data.DataColumn("Country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountry)
            Me.columnCountry_Code = New Global.System.Data.DataColumn("Country_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountry_Code)
            Me.columnPhone_Country_Code = New Global.System.Data.DataColumn("Phone_Country_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhone_Country_Code)
            Me.columnCountry.AllowDBNull = false
            Me.columnCountry.MaxLength = 50
            Me.columnCountry_Code.AllowDBNull = false
            Me.columnCountry_Code.MaxLength = 2
            Me.columnPhone_Country_Code.AllowDBNull = false
            Me.columnPhone_Country_Code.MaxLength = 4
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_CountryRow() As table_CountryRow
            Return CType(Me.NewRow,table_CountryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_CountryRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_CountryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_CountryRowChangedEvent) Is Nothing) Then
                RaiseEvent table_CountryRowChanged(Me, New table_CountryRowChangeEvent(CType(e.Row,table_CountryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_CountryRowChangingEvent) Is Nothing) Then
                RaiseEvent table_CountryRowChanging(Me, New table_CountryRowChangeEvent(CType(e.Row,table_CountryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_CountryRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_CountryRowDeleted(Me, New table_CountryRowChangeEvent(CType(e.Row,table_CountryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_CountryRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_CountryRowDeleting(Me, New table_CountryRowChangeEvent(CType(e.Row,table_CountryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_CountryRow(ByVal row As table_CountryRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_CountryDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_Determined_ElementsDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_Determined_ElementsRow)
        
        Private columnDeterminedElements As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_Determined_Elements"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DeterminedElementsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeterminedElements
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_Determined_ElementsRow
            Get
                Return CType(Me.Rows(index),table_Determined_ElementsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Determined_ElementsRowChanging As table_Determined_ElementsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Determined_ElementsRowChanged As table_Determined_ElementsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Determined_ElementsRowDeleting As table_Determined_ElementsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Determined_ElementsRowDeleted As table_Determined_ElementsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_Determined_ElementsRow(ByVal row As table_Determined_ElementsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_Determined_ElementsRow(ByVal DeterminedElements As String) As table_Determined_ElementsRow
            Dim rowtable_Determined_ElementsRow As table_Determined_ElementsRow = CType(Me.NewRow,table_Determined_ElementsRow)
            Dim columnValuesArray() As Object = New Object() {DeterminedElements}
            rowtable_Determined_ElementsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_Determined_ElementsRow)
            Return rowtable_Determined_ElementsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_Determined_ElementsDataTable = CType(MyBase.Clone,table_Determined_ElementsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_Determined_ElementsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDeterminedElements = MyBase.Columns("DeterminedElements")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDeterminedElements = New Global.System.Data.DataColumn("DeterminedElements", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeterminedElements)
            Me.columnDeterminedElements.AllowDBNull = false
            Me.columnDeterminedElements.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_Determined_ElementsRow() As table_Determined_ElementsRow
            Return CType(Me.NewRow,table_Determined_ElementsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_Determined_ElementsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_Determined_ElementsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_Determined_ElementsRowChangedEvent) Is Nothing) Then
                RaiseEvent table_Determined_ElementsRowChanged(Me, New table_Determined_ElementsRowChangeEvent(CType(e.Row,table_Determined_ElementsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_Determined_ElementsRowChangingEvent) Is Nothing) Then
                RaiseEvent table_Determined_ElementsRowChanging(Me, New table_Determined_ElementsRowChangeEvent(CType(e.Row,table_Determined_ElementsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_Determined_ElementsRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_Determined_ElementsRowDeleted(Me, New table_Determined_ElementsRowChangeEvent(CType(e.Row,table_Determined_ElementsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_Determined_ElementsRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_Determined_ElementsRowDeleting(Me, New table_Determined_ElementsRowChangeEvent(CType(e.Row,table_Determined_ElementsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_Determined_ElementsRow(ByVal row As table_Determined_ElementsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_Determined_ElementsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_Physical_EnvironmentDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_Physical_EnvironmentRow)
        
        Private columnData As Global.System.Data.DataColumn
        
        Private columnTime As Global.System.Data.DataColumn
        
        Private columnRelative_Humidity As Global.System.Data.DataColumn
        
        Private columnTemperature As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_Physical_Environment"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnData
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Relative_HumidityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelative_Humidity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TemperatureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTemperature
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_Physical_EnvironmentRow
            Get
                Return CType(Me.Rows(index),table_Physical_EnvironmentRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Physical_EnvironmentRowChanging As table_Physical_EnvironmentRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Physical_EnvironmentRowChanged As table_Physical_EnvironmentRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Physical_EnvironmentRowDeleting As table_Physical_EnvironmentRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Physical_EnvironmentRowDeleted As table_Physical_EnvironmentRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_Physical_EnvironmentRow(ByVal row As table_Physical_EnvironmentRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_Physical_EnvironmentRow(ByVal Data As Date, ByVal Time As System.TimeSpan, ByVal Relative_Humidity As Single, ByVal Temperature As Single) As table_Physical_EnvironmentRow
            Dim rowtable_Physical_EnvironmentRow As table_Physical_EnvironmentRow = CType(Me.NewRow,table_Physical_EnvironmentRow)
            Dim columnValuesArray() As Object = New Object() {Data, Time, Relative_Humidity, Temperature}
            rowtable_Physical_EnvironmentRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_Physical_EnvironmentRow)
            Return rowtable_Physical_EnvironmentRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_Physical_EnvironmentDataTable = CType(MyBase.Clone,table_Physical_EnvironmentDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_Physical_EnvironmentDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnData = MyBase.Columns("Data")
            Me.columnTime = MyBase.Columns("Time")
            Me.columnRelative_Humidity = MyBase.Columns("Relative_Humidity")
            Me.columnTemperature = MyBase.Columns("Temperature")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnData = New Global.System.Data.DataColumn("Data", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnData)
            Me.columnTime = New Global.System.Data.DataColumn("Time", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTime)
            Me.columnRelative_Humidity = New Global.System.Data.DataColumn("Relative_Humidity", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelative_Humidity)
            Me.columnTemperature = New Global.System.Data.DataColumn("Temperature", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTemperature)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_Physical_EnvironmentRow() As table_Physical_EnvironmentRow
            Return CType(Me.NewRow,table_Physical_EnvironmentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_Physical_EnvironmentRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_Physical_EnvironmentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_Physical_EnvironmentRowChangedEvent) Is Nothing) Then
                RaiseEvent table_Physical_EnvironmentRowChanged(Me, New table_Physical_EnvironmentRowChangeEvent(CType(e.Row,table_Physical_EnvironmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_Physical_EnvironmentRowChangingEvent) Is Nothing) Then
                RaiseEvent table_Physical_EnvironmentRowChanging(Me, New table_Physical_EnvironmentRowChangeEvent(CType(e.Row,table_Physical_EnvironmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_Physical_EnvironmentRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_Physical_EnvironmentRowDeleted(Me, New table_Physical_EnvironmentRowChangeEvent(CType(e.Row,table_Physical_EnvironmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_Physical_EnvironmentRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_Physical_EnvironmentRowDeleting(Me, New table_Physical_EnvironmentRowChangeEvent(CType(e.Row,table_Physical_EnvironmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_Physical_EnvironmentRow(ByVal row As table_Physical_EnvironmentRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_Physical_EnvironmentDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_Received_ByDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_Received_ByRow)
        
        Private columnReceived_By As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_Received_By"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Received_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceived_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_Received_ByRow
            Get
                Return CType(Me.Rows(index),table_Received_ByRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Received_ByRowChanging As table_Received_ByRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Received_ByRowChanged As table_Received_ByRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Received_ByRowDeleting As table_Received_ByRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Received_ByRowDeleted As table_Received_ByRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_Received_ByRow(ByVal row As table_Received_ByRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_Received_ByRow(ByVal Received_By As String) As table_Received_ByRow
            Dim rowtable_Received_ByRow As table_Received_ByRow = CType(Me.NewRow,table_Received_ByRow)
            Dim columnValuesArray() As Object = New Object() {Received_By}
            rowtable_Received_ByRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_Received_ByRow)
            Return rowtable_Received_ByRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_Received_ByDataTable = CType(MyBase.Clone,table_Received_ByDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_Received_ByDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnReceived_By = MyBase.Columns("Received_By")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnReceived_By = New Global.System.Data.DataColumn("Received_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceived_By)
            Me.columnReceived_By.AllowDBNull = false
            Me.columnReceived_By.MaxLength = 25
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_Received_ByRow() As table_Received_ByRow
            Return CType(Me.NewRow,table_Received_ByRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_Received_ByRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_Received_ByRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_Received_ByRowChangedEvent) Is Nothing) Then
                RaiseEvent table_Received_ByRowChanged(Me, New table_Received_ByRowChangeEvent(CType(e.Row,table_Received_ByRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_Received_ByRowChangingEvent) Is Nothing) Then
                RaiseEvent table_Received_ByRowChanging(Me, New table_Received_ByRowChangeEvent(CType(e.Row,table_Received_ByRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_Received_ByRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_Received_ByRowDeleted(Me, New table_Received_ByRowChangeEvent(CType(e.Row,table_Received_ByRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_Received_ByRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_Received_ByRowDeleting(Me, New table_Received_ByRowChangeEvent(CType(e.Row,table_Received_ByRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_Received_ByRow(ByVal row As table_Received_ByRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_Received_ByDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_Sample_PreparationDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_Sample_PreparationRow)
        
        Private columnCleaning As Global.System.Data.DataColumn
        
        Private columnDrying As Global.System.Data.DataColumn
        
        Private columnEvaporation As Global.System.Data.DataColumn
        
        Private columnFreeze_Drying As Global.System.Data.DataColumn
        
        Private columnHomogenizing As Global.System.Data.DataColumn
        
        Private columnPelletization As Global.System.Data.DataColumn
        
        Private columnFragmentation As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_Sample_Preparation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CleaningColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCleaning
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DryingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDrying
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EvaporationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEvaporation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Freeze_DryingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreeze_Drying
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HomogenizingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHomogenizing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PelletizationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPelletization
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FragmentationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFragmentation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_Sample_PreparationRow
            Get
                Return CType(Me.Rows(index),table_Sample_PreparationRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_PreparationRowChanging As table_Sample_PreparationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_PreparationRowChanged As table_Sample_PreparationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_PreparationRowDeleting As table_Sample_PreparationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_PreparationRowDeleted As table_Sample_PreparationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_Sample_PreparationRow(ByVal row As table_Sample_PreparationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_Sample_PreparationRow(ByVal Cleaning As Boolean, ByVal Drying As Boolean, ByVal Evaporation As Boolean, ByVal Freeze_Drying As Boolean, ByVal Homogenizing As Boolean, ByVal Pelletization As Boolean, ByVal Fragmentation As Boolean) As table_Sample_PreparationRow
            Dim rowtable_Sample_PreparationRow As table_Sample_PreparationRow = CType(Me.NewRow,table_Sample_PreparationRow)
            Dim columnValuesArray() As Object = New Object() {Cleaning, Drying, Evaporation, Freeze_Drying, Homogenizing, Pelletization, Fragmentation}
            rowtable_Sample_PreparationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_Sample_PreparationRow)
            Return rowtable_Sample_PreparationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_Sample_PreparationDataTable = CType(MyBase.Clone,table_Sample_PreparationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_Sample_PreparationDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCleaning = MyBase.Columns("Cleaning")
            Me.columnDrying = MyBase.Columns("Drying")
            Me.columnEvaporation = MyBase.Columns("Evaporation")
            Me.columnFreeze_Drying = MyBase.Columns("Freeze_Drying")
            Me.columnHomogenizing = MyBase.Columns("Homogenizing")
            Me.columnPelletization = MyBase.Columns("Pelletization")
            Me.columnFragmentation = MyBase.Columns("Fragmentation")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCleaning = New Global.System.Data.DataColumn("Cleaning", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCleaning)
            Me.columnDrying = New Global.System.Data.DataColumn("Drying", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDrying)
            Me.columnEvaporation = New Global.System.Data.DataColumn("Evaporation", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEvaporation)
            Me.columnFreeze_Drying = New Global.System.Data.DataColumn("Freeze_Drying", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreeze_Drying)
            Me.columnHomogenizing = New Global.System.Data.DataColumn("Homogenizing", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHomogenizing)
            Me.columnPelletization = New Global.System.Data.DataColumn("Pelletization", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPelletization)
            Me.columnFragmentation = New Global.System.Data.DataColumn("Fragmentation", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFragmentation)
            Me.columnCleaning.AllowDBNull = false
            Me.columnDrying.AllowDBNull = false
            Me.columnEvaporation.AllowDBNull = false
            Me.columnFreeze_Drying.AllowDBNull = false
            Me.columnHomogenizing.AllowDBNull = false
            Me.columnPelletization.AllowDBNull = false
            Me.columnFragmentation.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_Sample_PreparationRow() As table_Sample_PreparationRow
            Return CType(Me.NewRow,table_Sample_PreparationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_Sample_PreparationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_Sample_PreparationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_Sample_PreparationRowChangedEvent) Is Nothing) Then
                RaiseEvent table_Sample_PreparationRowChanged(Me, New table_Sample_PreparationRowChangeEvent(CType(e.Row,table_Sample_PreparationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_Sample_PreparationRowChangingEvent) Is Nothing) Then
                RaiseEvent table_Sample_PreparationRowChanging(Me, New table_Sample_PreparationRowChangeEvent(CType(e.Row,table_Sample_PreparationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_Sample_PreparationRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_Sample_PreparationRowDeleted(Me, New table_Sample_PreparationRowChangeEvent(CType(e.Row,table_Sample_PreparationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_Sample_PreparationRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_Sample_PreparationRowDeleting(Me, New table_Sample_PreparationRowChangeEvent(CType(e.Row,table_Sample_PreparationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_Sample_PreparationRow(ByVal row As table_Sample_PreparationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_Sample_PreparationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_Sample_SetDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_Sample_SetRow)
        
        Private columnCountry_Code As Global.System.Data.DataColumn
        
        Private columnClient_ID As Global.System.Data.DataColumn
        
        Private columnYear As Global.System.Data.DataColumn
        
        Private columnSample_Set_ID As Global.System.Data.DataColumn
        
        Private columnSample_Set_Index As Global.System.Data.DataColumn
        
        Private columnSample_Set_Receipt_Date As Global.System.Data.DataColumn
        
        Private columnSample_Set_Report_Date As Global.System.Data.DataColumn
        
        Private columnReceived_By As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_Sample_Set"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Country_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountry_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Client_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClient_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property YearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Sample_Set_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSample_Set_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Sample_Set_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSample_Set_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Sample_Set_Receipt_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSample_Set_Receipt_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Sample_Set_Report_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSample_Set_Report_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Received_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceived_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_Sample_SetRow
            Get
                Return CType(Me.Rows(index),table_Sample_SetRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_SetRowChanging As table_Sample_SetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_SetRowChanged As table_Sample_SetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_SetRowDeleting As table_Sample_SetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_SetRowDeleted As table_Sample_SetRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_Sample_SetRow(ByVal row As table_Sample_SetRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_Sample_SetRow(ByVal Country_Code As String, ByVal Client_ID As String, ByVal Year As String, ByVal Sample_Set_ID As String, ByVal Sample_Set_Index As String, ByVal Sample_Set_Receipt_Date As Date, ByVal Sample_Set_Report_Date As Date, ByVal Received_By As String) As table_Sample_SetRow
            Dim rowtable_Sample_SetRow As table_Sample_SetRow = CType(Me.NewRow,table_Sample_SetRow)
            Dim columnValuesArray() As Object = New Object() {Country_Code, Client_ID, Year, Sample_Set_ID, Sample_Set_Index, Sample_Set_Receipt_Date, Sample_Set_Report_Date, Received_By}
            rowtable_Sample_SetRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_Sample_SetRow)
            Return rowtable_Sample_SetRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByCountry_CodeClient_IDYearSample_Set_IDSample_Set_Index(ByVal Country_Code As String, ByVal Client_ID As String, ByVal Year As String, ByVal Sample_Set_ID As String, ByVal Sample_Set_Index As String) As table_Sample_SetRow
            Return CType(Me.Rows.Find(New Object() {Country_Code, Client_ID, Year, Sample_Set_ID, Sample_Set_Index}),table_Sample_SetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_Sample_SetDataTable = CType(MyBase.Clone,table_Sample_SetDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_Sample_SetDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCountry_Code = MyBase.Columns("Country_Code")
            Me.columnClient_ID = MyBase.Columns("Client_ID")
            Me.columnYear = MyBase.Columns("Year")
            Me.columnSample_Set_ID = MyBase.Columns("Sample_Set_ID")
            Me.columnSample_Set_Index = MyBase.Columns("Sample_Set_Index")
            Me.columnSample_Set_Receipt_Date = MyBase.Columns("Sample_Set_Receipt_Date")
            Me.columnSample_Set_Report_Date = MyBase.Columns("Sample_Set_Report_Date")
            Me.columnReceived_By = MyBase.Columns("Received_By")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCountry_Code = New Global.System.Data.DataColumn("Country_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountry_Code)
            Me.columnClient_ID = New Global.System.Data.DataColumn("Client_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClient_ID)
            Me.columnYear = New Global.System.Data.DataColumn("Year", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYear)
            Me.columnSample_Set_ID = New Global.System.Data.DataColumn("Sample_Set_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSample_Set_ID)
            Me.columnSample_Set_Index = New Global.System.Data.DataColumn("Sample_Set_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSample_Set_Index)
            Me.columnSample_Set_Receipt_Date = New Global.System.Data.DataColumn("Sample_Set_Receipt_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSample_Set_Receipt_Date)
            Me.columnSample_Set_Report_Date = New Global.System.Data.DataColumn("Sample_Set_Report_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSample_Set_Report_Date)
            Me.columnReceived_By = New Global.System.Data.DataColumn("Received_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceived_By)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCountry_Code, Me.columnClient_ID, Me.columnYear, Me.columnSample_Set_ID, Me.columnSample_Set_Index}, true))
            Me.columnCountry_Code.AllowDBNull = false
            Me.columnCountry_Code.MaxLength = 2
            Me.columnClient_ID.AllowDBNull = false
            Me.columnClient_ID.MaxLength = 2
            Me.columnYear.AllowDBNull = false
            Me.columnYear.MaxLength = 2
            Me.columnSample_Set_ID.AllowDBNull = false
            Me.columnSample_Set_ID.MaxLength = 2
            Me.columnSample_Set_Index.AllowDBNull = false
            Me.columnSample_Set_Index.MaxLength = 1
            Me.columnReceived_By.MaxLength = 25
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_Sample_SetRow() As table_Sample_SetRow
            Return CType(Me.NewRow,table_Sample_SetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_Sample_SetRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_Sample_SetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_Sample_SetRowChangedEvent) Is Nothing) Then
                RaiseEvent table_Sample_SetRowChanged(Me, New table_Sample_SetRowChangeEvent(CType(e.Row,table_Sample_SetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_Sample_SetRowChangingEvent) Is Nothing) Then
                RaiseEvent table_Sample_SetRowChanging(Me, New table_Sample_SetRowChangeEvent(CType(e.Row,table_Sample_SetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_Sample_SetRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_Sample_SetRowDeleted(Me, New table_Sample_SetRowChangeEvent(CType(e.Row,table_Sample_SetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_Sample_SetRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_Sample_SetRowDeleting(Me, New table_Sample_SetRowChangeEvent(CType(e.Row,table_Sample_SetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_Sample_SetRow(ByVal row As table_Sample_SetRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_Sample_SetDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_Sample_TypeDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_Sample_TypeRow)
        
        Private columnSampleType As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_Sample_Type"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_Sample_TypeRow
            Get
                Return CType(Me.Rows(index),table_Sample_TypeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_TypeRowChanging As table_Sample_TypeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_TypeRowChanged As table_Sample_TypeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_TypeRowDeleting As table_Sample_TypeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_TypeRowDeleted As table_Sample_TypeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_Sample_TypeRow(ByVal row As table_Sample_TypeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_Sample_TypeRow(ByVal SampleType As String) As table_Sample_TypeRow
            Dim rowtable_Sample_TypeRow As table_Sample_TypeRow = CType(Me.NewRow,table_Sample_TypeRow)
            Dim columnValuesArray() As Object = New Object() {SampleType}
            rowtable_Sample_TypeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_Sample_TypeRow)
            Return rowtable_Sample_TypeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_Sample_TypeDataTable = CType(MyBase.Clone,table_Sample_TypeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_Sample_TypeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSampleType = MyBase.Columns("SampleType")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSampleType = New Global.System.Data.DataColumn("SampleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleType)
            Me.columnSampleType.AllowDBNull = false
            Me.columnSampleType.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_Sample_TypeRow() As table_Sample_TypeRow
            Return CType(Me.NewRow,table_Sample_TypeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_Sample_TypeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_Sample_TypeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_Sample_TypeRowChangedEvent) Is Nothing) Then
                RaiseEvent table_Sample_TypeRowChanged(Me, New table_Sample_TypeRowChangeEvent(CType(e.Row,table_Sample_TypeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_Sample_TypeRowChangingEvent) Is Nothing) Then
                RaiseEvent table_Sample_TypeRowChanging(Me, New table_Sample_TypeRowChangeEvent(CType(e.Row,table_Sample_TypeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_Sample_TypeRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_Sample_TypeRowDeleted(Me, New table_Sample_TypeRowChangeEvent(CType(e.Row,table_Sample_TypeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_Sample_TypeRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_Sample_TypeRowDeleting(Me, New table_Sample_TypeRowChangeEvent(CType(e.Row,table_Sample_TypeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_Sample_TypeRow(ByVal row As table_Sample_TypeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_Sample_TypeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_SampleDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_SampleRow)
        
        Private columnF_Country_Code As Global.System.Data.DataColumn
        
        Private columnF_Client_ID As Global.System.Data.DataColumn
        
        Private columnF_Year As Global.System.Data.DataColumn
        
        Private columnF_Sample_Set_ID As Global.System.Data.DataColumn
        
        Private columnF_Sample_Set_Index As Global.System.Data.DataColumn
        
        Private columnA_Sample_ID As Global.System.Data.DataColumn
        
        Private columnA_Client_Sample_ID As Global.System.Data.DataColumn
        
        Private columnA_Sample_Type As Global.System.Data.DataColumn
        
        Private columnA_Sample_Subtype As Global.System.Data.DataColumn
        
        Private columnA_Collection_Place As Global.System.Data.DataColumn
        
        Private columnA_Latitude As Global.System.Data.DataColumn
        
        Private columnA_Longitude As Global.System.Data.DataColumn
        
        Private columnA_Cleaning_Plan As Global.System.Data.DataColumn
        
        Private columnA_Drying_Plan As Global.System.Data.DataColumn
        
        Private columnA_Evaporation_Plan As Global.System.Data.DataColumn
        
        Private columnA_Freeze_Drying_Plan As Global.System.Data.DataColumn
        
        Private columnA_Homogenizing_Plan As Global.System.Data.DataColumn
        
        Private columnA_Pelletization_Plan As Global.System.Data.DataColumn
        
        Private columnA_Fragmentation_Plan As Global.System.Data.DataColumn
        
        Private columnA_Determined_Elements As Global.System.Data.DataColumn
        
        Private columnA_Halogens_Plan As Global.System.Data.DataColumn
        
        Private columnA_Heavy_Metals_Plan As Global.System.Data.DataColumn
        
        Private columnA_Short_Lived_Plan As Global.System.Data.DataColumn
        
        Private columnA_Long_Lived_Plan As Global.System.Data.DataColumn
        
        Private columnA_F_Plan As Global.System.Data.DataColumn
        
        Private columnA_Na_Plan As Global.System.Data.DataColumn
        
        Private columnA_Mg_Plan As Global.System.Data.DataColumn
        
        Private columnA_Al_Plan As Global.System.Data.DataColumn
        
        Private columnA_Si_Plan As Global.System.Data.DataColumn
        
        Private columnA_S_Plan As Global.System.Data.DataColumn
        
        Private columnA_Cl_Plan As Global.System.Data.DataColumn
        
        Private columnA_K_Plan As Global.System.Data.DataColumn
        
        Private columnA_Ca_Plan As Global.System.Data.DataColumn
        
        Private columnA_Sc_Plan As Global.System.Data.DataColumn
        
        Private columnA_Ti_Plan As Global.System.Data.DataColumn
        
        Private columnA_V_Plan As Global.System.Data.DataColumn
        
        Private columnA_Cr_Plan As Global.System.Data.DataColumn
        
        Private columnA_Mn_Plan As Global.System.Data.DataColumn
        
        Private columnA_Fe_Plan As Global.System.Data.DataColumn
        
        Private columnA_Co_Plan As Global.System.Data.DataColumn
        
        Private columnA_Cu_Plan As Global.System.Data.DataColumn
        
        Private columnA_Zn_Plan As Global.System.Data.DataColumn
        
        Private columnA_Ga_Plan As Global.System.Data.DataColumn
        
        Private columnA_As_Plan As Global.System.Data.DataColumn
        
        Private columnA_Se_Plan As Global.System.Data.DataColumn
        
        Private columnA_Br_Plan As Global.System.Data.DataColumn
        
        Private columnA_Rb_Plan As Global.System.Data.DataColumn
        
        Private columnA_Sr_Plan As Global.System.Data.DataColumn
        
        Private columnA_Y_Plan As Global.System.Data.DataColumn
        
        Private columnA_Zr_Plan As Global.System.Data.DataColumn
        
        Private columnA_Nb_Plan As Global.System.Data.DataColumn
        
        Private columnA_Mo_Plan As Global.System.Data.DataColumn
        
        Private columnA_Ru_Plan As Global.System.Data.DataColumn
        
        Private columnA_Ag_Plan As Global.System.Data.DataColumn
        
        Private columnA_Cd_Plan As Global.System.Data.DataColumn
        
        Private columnA_In_Plan As Global.System.Data.DataColumn
        
        Private columnA_Sn_Plan As Global.System.Data.DataColumn
        
        Private columnA_Sb_Plan As Global.System.Data.DataColumn
        
        Private columnA_I_Plan As Global.System.Data.DataColumn
        
        Private columnA_Cs_Plan As Global.System.Data.DataColumn
        
        Private columnA_Ba_Plan As Global.System.Data.DataColumn
        
        Private columnA_La_Plan As Global.System.Data.DataColumn
        
        Private columnA_Ce_Plan As Global.System.Data.DataColumn
        
        Private columnA_Nd_Plan As Global.System.Data.DataColumn
        
        Private columnA_Sm_Plan As Global.System.Data.DataColumn
        
        Private columnA_Eu_Plan As Global.System.Data.DataColumn
        
        Private columnA_Gd_Plan As Global.System.Data.DataColumn
        
        Private columnA_Tb_Plan As Global.System.Data.DataColumn
        
        Private columnA_Dy_Plan As Global.System.Data.DataColumn
        
        Private columnA_Er_Plan As Global.System.Data.DataColumn
        
        Private columnA_Tm_Plan As Global.System.Data.DataColumn
        
        Private columnA_Yb_Plan As Global.System.Data.DataColumn
        
        Private columnA_Lu_Plan As Global.System.Data.DataColumn
        
        Private columnA_Hf_Plan As Global.System.Data.DataColumn
        
        Private columnA_Ta_Plan As Global.System.Data.DataColumn
        
        Private columnA_W_Plan As Global.System.Data.DataColumn
        
        Private columnA_Re_Plan As Global.System.Data.DataColumn
        
        Private columnA_Ir_Plan As Global.System.Data.DataColumn
        
        Private columnA_Pt_Plan As Global.System.Data.DataColumn
        
        Private columnA_Au_Plan As Global.System.Data.DataColumn
        
        Private columnA_Hg_Plan As Global.System.Data.DataColumn
        
        Private columnA_Th_Plan As Global.System.Data.DataColumn
        
        Private columnA_U_Plan As Global.System.Data.DataColumn
        
        Private columnA_Cupboard_Number As Global.System.Data.DataColumn
        
        Private columnA_Box_Number As Global.System.Data.DataColumn
        
        Private columnA_Received_By As Global.System.Data.DataColumn
        
        Private columnA_Notes As Global.System.Data.DataColumn
        
        Private columnP_Cleaning_Fact As Global.System.Data.DataColumn
        
        Private columnP_Drying_Fact As Global.System.Data.DataColumn
        
        Private columnP_Evaporation_Fact As Global.System.Data.DataColumn
        
        Private columnP_Freeze_Drying_Fact As Global.System.Data.DataColumn
        
        Private columnP_Homogenizing_Fact As Global.System.Data.DataColumn
        
        Private columnP_Pelletization_Fact As Global.System.Data.DataColumn
        
        Private columnP_Fragmentation_Fact As Global.System.Data.DataColumn
        
        Private columnP_Weighting_SLI As Global.System.Data.DataColumn
        
        Private columnP_Weighting_LLI As Global.System.Data.DataColumn
        
        Private columnP_Date_Sample_Preparation As Global.System.Data.DataColumn
        
        Private columnP_Maked_By As Global.System.Data.DataColumn
        
        Private columnI_SLI_Time_Start As Global.System.Data.DataColumn
        
        Private columnI_SLI_Channel_Irradiation As Global.System.Data.DataColumn
        
        Private columnI_SLI_File_First As Global.System.Data.DataColumn
        
        Private columnI_SLI_Irradiated_By As Global.System.Data.DataColumn
        
        Private columnI_LLI_1_Irradiation_Fact As Global.System.Data.DataColumn
        
        Private columnI_LLI_1_Date_Start As Global.System.Data.DataColumn
        
        Private columnI_LLI_1_Time_Start As Global.System.Data.DataColumn
        
        Private columnI_LLI_1_Date_Finish As Global.System.Data.DataColumn
        
        Private columnI_LLI_1_Time_Finish As Global.System.Data.DataColumn
        
        Private columnI_LLI_1_Channel_Irradiation As Global.System.Data.DataColumn
        
        Private columnI_LLI_1_Detector_Number As Global.System.Data.DataColumn
        
        Private columnI_LLI_1_File_First As Global.System.Data.DataColumn
        
        Private columnI_LLI_1_File_Last As Global.System.Data.DataColumn
        
        Private columnI_LLI_1_Irradiated_By As Global.System.Data.DataColumn
        
        Private columnI_LLI_1_Irradiation_Log As Global.System.Data.DataColumn
        
        Private columnI_LLI_2_Irradiation_Fact As Global.System.Data.DataColumn
        
        Private columnI_LLI_2_Date_Start As Global.System.Data.DataColumn
        
        Private columnI_LLI_2_Time_Start As Global.System.Data.DataColumn
        
        Private columnI_LLI_2_Date_Finish As Global.System.Data.DataColumn
        
        Private columnI_LLI_2_Time_Finish As Global.System.Data.DataColumn
        
        Private columnI_LLI_2_Channel_Irradiation As Global.System.Data.DataColumn
        
        Private columnI_LLI_2_Detector_Number As Global.System.Data.DataColumn
        
        Private columnI_LLI_2_File_First As Global.System.Data.DataColumn
        
        Private columnI_LLI_2_File_Last As Global.System.Data.DataColumn
        
        Private columnI_LLI_2_Irradiated_By As Global.System.Data.DataColumn
        
        Private columnI_LLI_2_Irradiation_Log As Global.System.Data.DataColumn
        
        Private columnI_SLI_Date As Global.System.Data.DataColumn
        
        Private columnI_SLI_Duration As Global.System.Data.DataColumn
        
        Private columnI_SLI_Irradiation_Log_Number As Global.System.Data.DataColumn
        
        Private columnI_SLI_Measured_By As Global.System.Data.DataColumn
        
        Private columnI_SLI_Detector_1 As Global.System.Data.DataColumn
        
        Private columnI_SLI_Detector_2 As Global.System.Data.DataColumn
        
        Private columnI_SLI_Detector_3 As Global.System.Data.DataColumn
        
        Private columnI_SLI_Detector_4 As Global.System.Data.DataColumn
        
        Private columnI_SLI_File_Last As Global.System.Data.DataColumn
        
        Private columnI_SLI_Duration1 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_Sample"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property F_Country_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Country_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property F_Client_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Client_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property F_YearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Year
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property F_Sample_Set_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Sample_Set_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property F_Sample_Set_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Sample_Set_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Sample_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Sample_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Client_Sample_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Client_Sample_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Sample_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Sample_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Sample_SubtypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Sample_Subtype
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Collection_PlaceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Collection_Place
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_LatitudeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Latitude
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_LongitudeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Longitude
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Cleaning_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Cleaning_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Drying_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Drying_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Evaporation_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Evaporation_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Freeze_Drying_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Freeze_Drying_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Homogenizing_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Homogenizing_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Pelletization_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Pelletization_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Fragmentation_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Fragmentation_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Determined_ElementsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Determined_Elements
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Halogens_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Halogens_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Heavy_Metals_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Heavy_Metals_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Short_Lived_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Short_Lived_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Long_Lived_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Long_Lived_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_F_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_F_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Na_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Na_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Mg_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Mg_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Al_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Al_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Si_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Si_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_S_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_S_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Cl_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Cl_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_K_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_K_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Ca_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Ca_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Sc_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Sc_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Ti_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Ti_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_V_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_V_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Cr_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Cr_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Mn_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Mn_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Fe_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Fe_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Co_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Co_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Cu_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Cu_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Zn_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Zn_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Ga_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Ga_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_As_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_As_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Se_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Se_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Br_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Br_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Rb_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Rb_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Sr_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Sr_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Y_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Y_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Zr_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Zr_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Nb_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Nb_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Mo_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Mo_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Ru_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Ru_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Ag_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Ag_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Cd_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Cd_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_In_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_In_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Sn_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Sn_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Sb_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Sb_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_I_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_I_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Cs_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Cs_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Ba_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Ba_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_La_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_La_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Ce_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Ce_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Nd_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Nd_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Sm_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Sm_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Eu_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Eu_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Gd_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Gd_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Tb_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Tb_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Dy_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Dy_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Er_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Er_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Tm_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Tm_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Yb_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Yb_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Lu_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Lu_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Hf_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Hf_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Ta_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Ta_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_W_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_W_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Re_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Re_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Ir_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Ir_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Pt_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Pt_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Au_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Au_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Hg_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Hg_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Th_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Th_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_U_PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_U_Plan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Cupboard_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Cupboard_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Box_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Box_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Received_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Received_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_NotesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Notes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Cleaning_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Cleaning_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Drying_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Drying_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Evaporation_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Evaporation_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Freeze_Drying_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Freeze_Drying_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Homogenizing_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Homogenizing_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Pelletization_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Pelletization_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Fragmentation_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Fragmentation_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Weighting_SLIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Weighting_SLI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Weighting_LLIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Weighting_LLI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Date_Sample_PreparationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Date_Sample_Preparation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Maked_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Maked_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_SLI_Time_StartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_SLI_Time_Start
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_SLI_Channel_IrradiationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_SLI_Channel_Irradiation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_SLI_File_FirstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_SLI_File_First
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_SLI_Irradiated_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_SLI_Irradiated_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_1_Irradiation_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_1_Irradiation_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_1_Date_StartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_1_Date_Start
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_1_Time_StartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_1_Time_Start
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_1_Date_FinishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_1_Date_Finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_1_Time_FinishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_1_Time_Finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_1_Channel_IrradiationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_1_Channel_Irradiation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_1_Detector_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_1_Detector_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_1_File_FirstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_1_File_First
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_1_File_LastColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_1_File_Last
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_1_Irradiated_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_1_Irradiated_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_1_Irradiation_LogColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_1_Irradiation_Log
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_2_Irradiation_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_2_Irradiation_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_2_Date_StartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_2_Date_Start
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_2_Time_StartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_2_Time_Start
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_2_Date_FinishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_2_Date_Finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_2_Time_FinishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_2_Time_Finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_2_Channel_IrradiationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_2_Channel_Irradiation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_2_Detector_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_2_Detector_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_2_File_FirstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_2_File_First
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_2_File_LastColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_2_File_Last
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_2_Irradiated_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_2_Irradiated_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_LLI_2_Irradiation_LogColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_LLI_2_Irradiation_Log
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_SLI_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_SLI_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_SLI_DurationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_SLI_Duration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_SLI_Irradiation_Log_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_SLI_Irradiation_Log_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_SLI_Measured_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_SLI_Measured_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_SLI_Detector_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_SLI_Detector_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_SLI_Detector_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_SLI_Detector_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_SLI_Detector_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_SLI_Detector_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_SLI_Detector_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_SLI_Detector_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_SLI_File_LastColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_SLI_File_Last
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property I_SLI_Duration1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_SLI_Duration1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_SampleRow
            Get
                Return CType(Me.Rows(index),table_SampleRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SampleRowChanging As table_SampleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SampleRowChanged As table_SampleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SampleRowDeleting As table_SampleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SampleRowDeleted As table_SampleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_SampleRow(ByVal row As table_SampleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_SampleRow( _
                    ByVal F_Country_Code As String,  _
                    ByVal F_Client_ID As String,  _
                    ByVal F_Year As String,  _
                    ByVal F_Sample_Set_ID As String,  _
                    ByVal F_Sample_Set_Index As String,  _
                    ByVal A_Sample_ID As String,  _
                    ByVal A_Client_Sample_ID As String,  _
                    ByVal A_Sample_Type As String,  _
                    ByVal A_Sample_Subtype As String,  _
                    ByVal A_Collection_Place As String,  _
                    ByVal A_Latitude As String,  _
                    ByVal A_Longitude As String,  _
                    ByVal A_Cleaning_Plan As Boolean,  _
                    ByVal A_Drying_Plan As Boolean,  _
                    ByVal A_Evaporation_Plan As Boolean,  _
                    ByVal A_Freeze_Drying_Plan As Boolean,  _
                    ByVal A_Homogenizing_Plan As Boolean,  _
                    ByVal A_Pelletization_Plan As Boolean,  _
                    ByVal A_Fragmentation_Plan As Boolean,  _
                    ByVal A_Determined_Elements As String,  _
                    ByVal A_Halogens_Plan As Boolean,  _
                    ByVal A_Heavy_Metals_Plan As Boolean,  _
                    ByVal A_Short_Lived_Plan As Boolean,  _
                    ByVal A_Long_Lived_Plan As Boolean,  _
                    ByVal A_F_Plan As Boolean,  _
                    ByVal A_Na_Plan As Boolean,  _
                    ByVal A_Mg_Plan As Boolean,  _
                    ByVal A_Al_Plan As Boolean,  _
                    ByVal A_Si_Plan As Boolean,  _
                    ByVal A_S_Plan As Boolean,  _
                    ByVal A_Cl_Plan As Boolean,  _
                    ByVal A_K_Plan As Boolean,  _
                    ByVal A_Ca_Plan As Boolean,  _
                    ByVal A_Sc_Plan As Boolean,  _
                    ByVal A_Ti_Plan As Boolean,  _
                    ByVal A_V_Plan As Boolean,  _
                    ByVal A_Cr_Plan As Boolean,  _
                    ByVal A_Mn_Plan As Boolean,  _
                    ByVal A_Fe_Plan As Boolean,  _
                    ByVal A_Co_Plan As Boolean,  _
                    ByVal A_Cu_Plan As Boolean,  _
                    ByVal A_Zn_Plan As Boolean,  _
                    ByVal A_Ga_Plan As Boolean,  _
                    ByVal A_As_Plan As Boolean,  _
                    ByVal A_Se_Plan As Boolean,  _
                    ByVal A_Br_Plan As Boolean,  _
                    ByVal A_Rb_Plan As Boolean,  _
                    ByVal A_Sr_Plan As Boolean,  _
                    ByVal A_Y_Plan As Boolean,  _
                    ByVal A_Zr_Plan As Boolean,  _
                    ByVal A_Nb_Plan As Boolean,  _
                    ByVal A_Mo_Plan As Boolean,  _
                    ByVal A_Ru_Plan As Boolean,  _
                    ByVal A_Ag_Plan As Boolean,  _
                    ByVal A_Cd_Plan As Boolean,  _
                    ByVal A_In_Plan As Boolean,  _
                    ByVal A_Sn_Plan As Boolean,  _
                    ByVal A_Sb_Plan As Boolean,  _
                    ByVal A_I_Plan As Boolean,  _
                    ByVal A_Cs_Plan As Boolean,  _
                    ByVal A_Ba_Plan As Boolean,  _
                    ByVal A_La_Plan As Boolean,  _
                    ByVal A_Ce_Plan As Boolean,  _
                    ByVal A_Nd_Plan As Boolean,  _
                    ByVal A_Sm_Plan As Boolean,  _
                    ByVal A_Eu_Plan As Boolean,  _
                    ByVal A_Gd_Plan As Boolean,  _
                    ByVal A_Tb_Plan As Boolean,  _
                    ByVal A_Dy_Plan As Boolean,  _
                    ByVal A_Er_Plan As Boolean,  _
                    ByVal A_Tm_Plan As Boolean,  _
                    ByVal A_Yb_Plan As Boolean,  _
                    ByVal A_Lu_Plan As Boolean,  _
                    ByVal A_Hf_Plan As Boolean,  _
                    ByVal A_Ta_Plan As Boolean,  _
                    ByVal A_W_Plan As Boolean,  _
                    ByVal A_Re_Plan As Boolean,  _
                    ByVal A_Ir_Plan As Boolean,  _
                    ByVal A_Pt_Plan As Boolean,  _
                    ByVal A_Au_Plan As Boolean,  _
                    ByVal A_Hg_Plan As Boolean,  _
                    ByVal A_Th_Plan As Boolean,  _
                    ByVal A_U_Plan As Boolean,  _
                    ByVal A_Cupboard_Number As String,  _
                    ByVal A_Box_Number As String,  _
                    ByVal A_Received_By As String,  _
                    ByVal A_Notes As String,  _
                    ByVal P_Cleaning_Fact As Boolean,  _
                    ByVal P_Drying_Fact As Boolean,  _
                    ByVal P_Evaporation_Fact As Boolean,  _
                    ByVal P_Freeze_Drying_Fact As Boolean,  _
                    ByVal P_Homogenizing_Fact As Boolean,  _
                    ByVal P_Pelletization_Fact As Boolean,  _
                    ByVal P_Fragmentation_Fact As Boolean,  _
                    ByVal P_Weighting_SLI As Single,  _
                    ByVal P_Weighting_LLI As Single,  _
                    ByVal P_Date_Sample_Preparation As Date,  _
                    ByVal P_Maked_By As String,  _
                    ByVal I_SLI_Time_Start As System.TimeSpan,  _
                    ByVal I_SLI_Channel_Irradiation As String,  _
                    ByVal I_SLI_File_First As String,  _
                    ByVal I_SLI_Irradiated_By As String,  _
                    ByVal I_LLI_1_Irradiation_Fact As Boolean,  _
                    ByVal I_LLI_1_Date_Start As Date,  _
                    ByVal I_LLI_1_Time_Start As System.TimeSpan,  _
                    ByVal I_LLI_1_Date_Finish As Date,  _
                    ByVal I_LLI_1_Time_Finish As System.TimeSpan,  _
                    ByVal I_LLI_1_Channel_Irradiation As String,  _
                    ByVal I_LLI_1_Detector_Number As String,  _
                    ByVal I_LLI_1_File_First As String,  _
                    ByVal I_LLI_1_File_Last As String,  _
                    ByVal I_LLI_1_Irradiated_By As String,  _
                    ByVal I_LLI_1_Irradiation_Log As Date,  _
                    ByVal I_LLI_2_Irradiation_Fact As Boolean,  _
                    ByVal I_LLI_2_Date_Start As Date,  _
                    ByVal I_LLI_2_Time_Start As System.TimeSpan,  _
                    ByVal I_LLI_2_Date_Finish As Date,  _
                    ByVal I_LLI_2_Time_Finish As System.TimeSpan,  _
                    ByVal I_LLI_2_Channel_Irradiation As String,  _
                    ByVal I_LLI_2_Detector_Number As String,  _
                    ByVal I_LLI_2_File_First As String,  _
                    ByVal I_LLI_2_File_Last As String,  _
                    ByVal I_LLI_2_Irradiated_By As String,  _
                    ByVal I_LLI_2_Irradiation_Log As Date,  _
                    ByVal I_SLI_Date As Date,  _
                    ByVal I_SLI_Duration As System.TimeSpan,  _
                    ByVal I_SLI_Irradiation_Log_Number As Date,  _
                    ByVal I_SLI_Measured_By As String,  _
                    ByVal I_SLI_Detector_1 As Boolean,  _
                    ByVal I_SLI_Detector_2 As Boolean,  _
                    ByVal I_SLI_Detector_3 As Boolean,  _
                    ByVal I_SLI_Detector_4 As Boolean,  _
                    ByVal I_SLI_File_Last As String,  _
                    ByVal I_SLI_Duration1 As Integer) As table_SampleRow
            Dim rowtable_SampleRow As table_SampleRow = CType(Me.NewRow,table_SampleRow)
            Dim columnValuesArray() As Object = New Object() {F_Country_Code, F_Client_ID, F_Year, F_Sample_Set_ID, F_Sample_Set_Index, A_Sample_ID, A_Client_Sample_ID, A_Sample_Type, A_Sample_Subtype, A_Collection_Place, A_Latitude, A_Longitude, A_Cleaning_Plan, A_Drying_Plan, A_Evaporation_Plan, A_Freeze_Drying_Plan, A_Homogenizing_Plan, A_Pelletization_Plan, A_Fragmentation_Plan, A_Determined_Elements, A_Halogens_Plan, A_Heavy_Metals_Plan, A_Short_Lived_Plan, A_Long_Lived_Plan, A_F_Plan, A_Na_Plan, A_Mg_Plan, A_Al_Plan, A_Si_Plan, A_S_Plan, A_Cl_Plan, A_K_Plan, A_Ca_Plan, A_Sc_Plan, A_Ti_Plan, A_V_Plan, A_Cr_Plan, A_Mn_Plan, A_Fe_Plan, A_Co_Plan, A_Cu_Plan, A_Zn_Plan, A_Ga_Plan, A_As_Plan, A_Se_Plan, A_Br_Plan, A_Rb_Plan, A_Sr_Plan, A_Y_Plan, A_Zr_Plan, A_Nb_Plan, A_Mo_Plan, A_Ru_Plan, A_Ag_Plan, A_Cd_Plan, A_In_Plan, A_Sn_Plan, A_Sb_Plan, A_I_Plan, A_Cs_Plan, A_Ba_Plan, A_La_Plan, A_Ce_Plan, A_Nd_Plan, A_Sm_Plan, A_Eu_Plan, A_Gd_Plan, A_Tb_Plan, A_Dy_Plan, A_Er_Plan, A_Tm_Plan, A_Yb_Plan, A_Lu_Plan, A_Hf_Plan, A_Ta_Plan, A_W_Plan, A_Re_Plan, A_Ir_Plan, A_Pt_Plan, A_Au_Plan, A_Hg_Plan, A_Th_Plan, A_U_Plan, A_Cupboard_Number, A_Box_Number, A_Received_By, A_Notes, P_Cleaning_Fact, P_Drying_Fact, P_Evaporation_Fact, P_Freeze_Drying_Fact, P_Homogenizing_Fact, P_Pelletization_Fact, P_Fragmentation_Fact, P_Weighting_SLI, P_Weighting_LLI, P_Date_Sample_Preparation, P_Maked_By, I_SLI_Time_Start, I_SLI_Channel_Irradiation, I_SLI_File_First, I_SLI_Irradiated_By, I_LLI_1_Irradiation_Fact, I_LLI_1_Date_Start, I_LLI_1_Time_Start, I_LLI_1_Date_Finish, I_LLI_1_Time_Finish, I_LLI_1_Channel_Irradiation, I_LLI_1_Detector_Number, I_LLI_1_File_First, I_LLI_1_File_Last, I_LLI_1_Irradiated_By, I_LLI_1_Irradiation_Log, I_LLI_2_Irradiation_Fact, I_LLI_2_Date_Start, I_LLI_2_Time_Start, I_LLI_2_Date_Finish, I_LLI_2_Time_Finish, I_LLI_2_Channel_Irradiation, I_LLI_2_Detector_Number, I_LLI_2_File_First, I_LLI_2_File_Last, I_LLI_2_Irradiated_By, I_LLI_2_Irradiation_Log, I_SLI_Date, I_SLI_Duration, I_SLI_Irradiation_Log_Number, I_SLI_Measured_By, I_SLI_Detector_1, I_SLI_Detector_2, I_SLI_Detector_3, I_SLI_Detector_4, I_SLI_File_Last, I_SLI_Duration1}
            rowtable_SampleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_SampleRow)
            Return rowtable_SampleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_SampleDataTable = CType(MyBase.Clone,table_SampleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_SampleDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnF_Country_Code = MyBase.Columns("F_Country_Code")
            Me.columnF_Client_ID = MyBase.Columns("F_Client_ID")
            Me.columnF_Year = MyBase.Columns("F_Year")
            Me.columnF_Sample_Set_ID = MyBase.Columns("F_Sample_Set_ID")
            Me.columnF_Sample_Set_Index = MyBase.Columns("F_Sample_Set_Index")
            Me.columnA_Sample_ID = MyBase.Columns("A_Sample_ID")
            Me.columnA_Client_Sample_ID = MyBase.Columns("A_Client_Sample_ID")
            Me.columnA_Sample_Type = MyBase.Columns("A_Sample_Type")
            Me.columnA_Sample_Subtype = MyBase.Columns("A_Sample_Subtype")
            Me.columnA_Collection_Place = MyBase.Columns("A_Collection_Place")
            Me.columnA_Latitude = MyBase.Columns("A_Latitude")
            Me.columnA_Longitude = MyBase.Columns("A_Longitude")
            Me.columnA_Cleaning_Plan = MyBase.Columns("A_Cleaning_Plan")
            Me.columnA_Drying_Plan = MyBase.Columns("A_Drying_Plan")
            Me.columnA_Evaporation_Plan = MyBase.Columns("A_Evaporation_Plan")
            Me.columnA_Freeze_Drying_Plan = MyBase.Columns("A_Freeze_Drying_Plan")
            Me.columnA_Homogenizing_Plan = MyBase.Columns("A_Homogenizing_Plan")
            Me.columnA_Pelletization_Plan = MyBase.Columns("A_Pelletization_Plan")
            Me.columnA_Fragmentation_Plan = MyBase.Columns("A_Fragmentation_Plan")
            Me.columnA_Determined_Elements = MyBase.Columns("A_Determined_Elements")
            Me.columnA_Halogens_Plan = MyBase.Columns("A_Halogens_Plan")
            Me.columnA_Heavy_Metals_Plan = MyBase.Columns("A_Heavy_Metals_Plan")
            Me.columnA_Short_Lived_Plan = MyBase.Columns("A_Short_Lived_Plan")
            Me.columnA_Long_Lived_Plan = MyBase.Columns("A_Long_Lived_Plan")
            Me.columnA_F_Plan = MyBase.Columns("A_F_Plan")
            Me.columnA_Na_Plan = MyBase.Columns("A_Na_Plan")
            Me.columnA_Mg_Plan = MyBase.Columns("A_Mg_Plan")
            Me.columnA_Al_Plan = MyBase.Columns("A_Al_Plan")
            Me.columnA_Si_Plan = MyBase.Columns("A_Si_Plan")
            Me.columnA_S_Plan = MyBase.Columns("A_S_Plan")
            Me.columnA_Cl_Plan = MyBase.Columns("A_Cl_Plan")
            Me.columnA_K_Plan = MyBase.Columns("A_K_Plan")
            Me.columnA_Ca_Plan = MyBase.Columns("A_Ca_Plan")
            Me.columnA_Sc_Plan = MyBase.Columns("A_Sc_Plan")
            Me.columnA_Ti_Plan = MyBase.Columns("A_Ti_Plan")
            Me.columnA_V_Plan = MyBase.Columns("A_V_Plan")
            Me.columnA_Cr_Plan = MyBase.Columns("A_Cr_Plan")
            Me.columnA_Mn_Plan = MyBase.Columns("A_Mn_Plan")
            Me.columnA_Fe_Plan = MyBase.Columns("A_Fe_Plan")
            Me.columnA_Co_Plan = MyBase.Columns("A_Co_Plan")
            Me.columnA_Cu_Plan = MyBase.Columns("A_Cu_Plan")
            Me.columnA_Zn_Plan = MyBase.Columns("A_Zn_Plan")
            Me.columnA_Ga_Plan = MyBase.Columns("A_Ga_Plan")
            Me.columnA_As_Plan = MyBase.Columns("A_As_Plan")
            Me.columnA_Se_Plan = MyBase.Columns("A_Se_Plan")
            Me.columnA_Br_Plan = MyBase.Columns("A_Br_Plan")
            Me.columnA_Rb_Plan = MyBase.Columns("A_Rb_Plan")
            Me.columnA_Sr_Plan = MyBase.Columns("A_Sr_Plan")
            Me.columnA_Y_Plan = MyBase.Columns("A_Y_Plan")
            Me.columnA_Zr_Plan = MyBase.Columns("A_Zr_Plan")
            Me.columnA_Nb_Plan = MyBase.Columns("A_Nb_Plan")
            Me.columnA_Mo_Plan = MyBase.Columns("A_Mo_Plan")
            Me.columnA_Ru_Plan = MyBase.Columns("A_Ru_Plan")
            Me.columnA_Ag_Plan = MyBase.Columns("A_Ag_Plan")
            Me.columnA_Cd_Plan = MyBase.Columns("A_Cd_Plan")
            Me.columnA_In_Plan = MyBase.Columns("A_In_Plan")
            Me.columnA_Sn_Plan = MyBase.Columns("A_Sn_Plan")
            Me.columnA_Sb_Plan = MyBase.Columns("A_Sb_Plan")
            Me.columnA_I_Plan = MyBase.Columns("A_I_Plan")
            Me.columnA_Cs_Plan = MyBase.Columns("A_Cs_Plan")
            Me.columnA_Ba_Plan = MyBase.Columns("A_Ba_Plan")
            Me.columnA_La_Plan = MyBase.Columns("A_La_Plan")
            Me.columnA_Ce_Plan = MyBase.Columns("A_Ce_Plan")
            Me.columnA_Nd_Plan = MyBase.Columns("A_Nd_Plan")
            Me.columnA_Sm_Plan = MyBase.Columns("A_Sm_Plan")
            Me.columnA_Eu_Plan = MyBase.Columns("A_Eu_Plan")
            Me.columnA_Gd_Plan = MyBase.Columns("A_Gd_Plan")
            Me.columnA_Tb_Plan = MyBase.Columns("A_Tb_Plan")
            Me.columnA_Dy_Plan = MyBase.Columns("A_Dy_Plan")
            Me.columnA_Er_Plan = MyBase.Columns("A_Er_Plan")
            Me.columnA_Tm_Plan = MyBase.Columns("A_Tm_Plan")
            Me.columnA_Yb_Plan = MyBase.Columns("A_Yb_Plan")
            Me.columnA_Lu_Plan = MyBase.Columns("A_Lu_Plan")
            Me.columnA_Hf_Plan = MyBase.Columns("A_Hf_Plan")
            Me.columnA_Ta_Plan = MyBase.Columns("A_Ta_Plan")
            Me.columnA_W_Plan = MyBase.Columns("A_W_Plan")
            Me.columnA_Re_Plan = MyBase.Columns("A_Re_Plan")
            Me.columnA_Ir_Plan = MyBase.Columns("A_Ir_Plan")
            Me.columnA_Pt_Plan = MyBase.Columns("A_Pt_Plan")
            Me.columnA_Au_Plan = MyBase.Columns("A_Au_Plan")
            Me.columnA_Hg_Plan = MyBase.Columns("A_Hg_Plan")
            Me.columnA_Th_Plan = MyBase.Columns("A_Th_Plan")
            Me.columnA_U_Plan = MyBase.Columns("A_U_Plan")
            Me.columnA_Cupboard_Number = MyBase.Columns("A_Cupboard_Number")
            Me.columnA_Box_Number = MyBase.Columns("A_Box_Number")
            Me.columnA_Received_By = MyBase.Columns("A_Received_By")
            Me.columnA_Notes = MyBase.Columns("A_Notes")
            Me.columnP_Cleaning_Fact = MyBase.Columns("P_Cleaning_Fact")
            Me.columnP_Drying_Fact = MyBase.Columns("P_Drying_Fact")
            Me.columnP_Evaporation_Fact = MyBase.Columns("P_Evaporation_Fact")
            Me.columnP_Freeze_Drying_Fact = MyBase.Columns("P_Freeze_Drying_Fact")
            Me.columnP_Homogenizing_Fact = MyBase.Columns("P_Homogenizing_Fact")
            Me.columnP_Pelletization_Fact = MyBase.Columns("P_Pelletization_Fact")
            Me.columnP_Fragmentation_Fact = MyBase.Columns("P_Fragmentation_Fact")
            Me.columnP_Weighting_SLI = MyBase.Columns("P_Weighting_SLI")
            Me.columnP_Weighting_LLI = MyBase.Columns("P_Weighting_LLI")
            Me.columnP_Date_Sample_Preparation = MyBase.Columns("P_Date_Sample_Preparation")
            Me.columnP_Maked_By = MyBase.Columns("P_Maked_By")
            Me.columnI_SLI_Time_Start = MyBase.Columns("I_SLI_Time_Start")
            Me.columnI_SLI_Channel_Irradiation = MyBase.Columns("I_SLI_Channel_Irradiation")
            Me.columnI_SLI_File_First = MyBase.Columns("I_SLI_File_First")
            Me.columnI_SLI_Irradiated_By = MyBase.Columns("I_SLI_Irradiated_By")
            Me.columnI_LLI_1_Irradiation_Fact = MyBase.Columns("I_LLI_1_Irradiation_Fact")
            Me.columnI_LLI_1_Date_Start = MyBase.Columns("I_LLI_1_Date_Start")
            Me.columnI_LLI_1_Time_Start = MyBase.Columns("I_LLI_1_Time_Start")
            Me.columnI_LLI_1_Date_Finish = MyBase.Columns("I_LLI_1_Date_Finish")
            Me.columnI_LLI_1_Time_Finish = MyBase.Columns("I_LLI_1_Time_Finish")
            Me.columnI_LLI_1_Channel_Irradiation = MyBase.Columns("I_LLI_1_Channel_Irradiation")
            Me.columnI_LLI_1_Detector_Number = MyBase.Columns("I_LLI_1_Detector_Number")
            Me.columnI_LLI_1_File_First = MyBase.Columns("I_LLI_1_File_First")
            Me.columnI_LLI_1_File_Last = MyBase.Columns("I_LLI_1_File_Last")
            Me.columnI_LLI_1_Irradiated_By = MyBase.Columns("I_LLI_1_Irradiated_By")
            Me.columnI_LLI_1_Irradiation_Log = MyBase.Columns("I_LLI_1_Irradiation_Log")
            Me.columnI_LLI_2_Irradiation_Fact = MyBase.Columns("I_LLI_2_Irradiation_Fact")
            Me.columnI_LLI_2_Date_Start = MyBase.Columns("I_LLI_2_Date_Start")
            Me.columnI_LLI_2_Time_Start = MyBase.Columns("I_LLI_2_Time_Start")
            Me.columnI_LLI_2_Date_Finish = MyBase.Columns("I_LLI_2_Date_Finish")
            Me.columnI_LLI_2_Time_Finish = MyBase.Columns("I_LLI_2_Time_Finish")
            Me.columnI_LLI_2_Channel_Irradiation = MyBase.Columns("I_LLI_2_Channel_Irradiation")
            Me.columnI_LLI_2_Detector_Number = MyBase.Columns("I_LLI_2_Detector_Number")
            Me.columnI_LLI_2_File_First = MyBase.Columns("I_LLI_2_File_First")
            Me.columnI_LLI_2_File_Last = MyBase.Columns("I_LLI_2_File_Last")
            Me.columnI_LLI_2_Irradiated_By = MyBase.Columns("I_LLI_2_Irradiated_By")
            Me.columnI_LLI_2_Irradiation_Log = MyBase.Columns("I_LLI_2_Irradiation_Log")
            Me.columnI_SLI_Date = MyBase.Columns("I_SLI_Date")
            Me.columnI_SLI_Duration = MyBase.Columns("I_SLI_Duration")
            Me.columnI_SLI_Irradiation_Log_Number = MyBase.Columns("I_SLI_Irradiation_Log_Number")
            Me.columnI_SLI_Measured_By = MyBase.Columns("I_SLI_Measured_By")
            Me.columnI_SLI_Detector_1 = MyBase.Columns("I_SLI_Detector_1")
            Me.columnI_SLI_Detector_2 = MyBase.Columns("I_SLI_Detector_2")
            Me.columnI_SLI_Detector_3 = MyBase.Columns("I_SLI_Detector_3")
            Me.columnI_SLI_Detector_4 = MyBase.Columns("I_SLI_Detector_4")
            Me.columnI_SLI_File_Last = MyBase.Columns("I_SLI_File_Last")
            Me.columnI_SLI_Duration1 = MyBase.Columns("I_SLI_Duration1")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnF_Country_Code = New Global.System.Data.DataColumn("F_Country_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Country_Code)
            Me.columnF_Client_ID = New Global.System.Data.DataColumn("F_Client_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Client_ID)
            Me.columnF_Year = New Global.System.Data.DataColumn("F_Year", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Year)
            Me.columnF_Sample_Set_ID = New Global.System.Data.DataColumn("F_Sample_Set_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Sample_Set_ID)
            Me.columnF_Sample_Set_Index = New Global.System.Data.DataColumn("F_Sample_Set_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Sample_Set_Index)
            Me.columnA_Sample_ID = New Global.System.Data.DataColumn("A_Sample_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Sample_ID)
            Me.columnA_Client_Sample_ID = New Global.System.Data.DataColumn("A_Client_Sample_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Client_Sample_ID)
            Me.columnA_Sample_Type = New Global.System.Data.DataColumn("A_Sample_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Sample_Type)
            Me.columnA_Sample_Subtype = New Global.System.Data.DataColumn("A_Sample_Subtype", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Sample_Subtype)
            Me.columnA_Collection_Place = New Global.System.Data.DataColumn("A_Collection_Place", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Collection_Place)
            Me.columnA_Latitude = New Global.System.Data.DataColumn("A_Latitude", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Latitude)
            Me.columnA_Longitude = New Global.System.Data.DataColumn("A_Longitude", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Longitude)
            Me.columnA_Cleaning_Plan = New Global.System.Data.DataColumn("A_Cleaning_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Cleaning_Plan)
            Me.columnA_Drying_Plan = New Global.System.Data.DataColumn("A_Drying_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Drying_Plan)
            Me.columnA_Evaporation_Plan = New Global.System.Data.DataColumn("A_Evaporation_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Evaporation_Plan)
            Me.columnA_Freeze_Drying_Plan = New Global.System.Data.DataColumn("A_Freeze_Drying_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Freeze_Drying_Plan)
            Me.columnA_Homogenizing_Plan = New Global.System.Data.DataColumn("A_Homogenizing_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Homogenizing_Plan)
            Me.columnA_Pelletization_Plan = New Global.System.Data.DataColumn("A_Pelletization_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Pelletization_Plan)
            Me.columnA_Fragmentation_Plan = New Global.System.Data.DataColumn("A_Fragmentation_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Fragmentation_Plan)
            Me.columnA_Determined_Elements = New Global.System.Data.DataColumn("A_Determined_Elements", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Determined_Elements)
            Me.columnA_Halogens_Plan = New Global.System.Data.DataColumn("A_Halogens_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Halogens_Plan)
            Me.columnA_Heavy_Metals_Plan = New Global.System.Data.DataColumn("A_Heavy_Metals_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Heavy_Metals_Plan)
            Me.columnA_Short_Lived_Plan = New Global.System.Data.DataColumn("A_Short_Lived_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Short_Lived_Plan)
            Me.columnA_Long_Lived_Plan = New Global.System.Data.DataColumn("A_Long_Lived_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Long_Lived_Plan)
            Me.columnA_F_Plan = New Global.System.Data.DataColumn("A_F_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_F_Plan)
            Me.columnA_Na_Plan = New Global.System.Data.DataColumn("A_Na_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Na_Plan)
            Me.columnA_Mg_Plan = New Global.System.Data.DataColumn("A_Mg_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Mg_Plan)
            Me.columnA_Al_Plan = New Global.System.Data.DataColumn("A_Al_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Al_Plan)
            Me.columnA_Si_Plan = New Global.System.Data.DataColumn("A_Si_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Si_Plan)
            Me.columnA_S_Plan = New Global.System.Data.DataColumn("A_S_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_S_Plan)
            Me.columnA_Cl_Plan = New Global.System.Data.DataColumn("A_Cl_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Cl_Plan)
            Me.columnA_K_Plan = New Global.System.Data.DataColumn("A_K_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_K_Plan)
            Me.columnA_Ca_Plan = New Global.System.Data.DataColumn("A_Ca_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Ca_Plan)
            Me.columnA_Sc_Plan = New Global.System.Data.DataColumn("A_Sc_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Sc_Plan)
            Me.columnA_Ti_Plan = New Global.System.Data.DataColumn("A_Ti_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Ti_Plan)
            Me.columnA_V_Plan = New Global.System.Data.DataColumn("A_V_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_V_Plan)
            Me.columnA_Cr_Plan = New Global.System.Data.DataColumn("A_Cr_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Cr_Plan)
            Me.columnA_Mn_Plan = New Global.System.Data.DataColumn("A_Mn_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Mn_Plan)
            Me.columnA_Fe_Plan = New Global.System.Data.DataColumn("A_Fe_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Fe_Plan)
            Me.columnA_Co_Plan = New Global.System.Data.DataColumn("A_Co_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Co_Plan)
            Me.columnA_Cu_Plan = New Global.System.Data.DataColumn("A_Cu_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Cu_Plan)
            Me.columnA_Zn_Plan = New Global.System.Data.DataColumn("A_Zn_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Zn_Plan)
            Me.columnA_Ga_Plan = New Global.System.Data.DataColumn("A_Ga_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Ga_Plan)
            Me.columnA_As_Plan = New Global.System.Data.DataColumn("A_As_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_As_Plan)
            Me.columnA_Se_Plan = New Global.System.Data.DataColumn("A_Se_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Se_Plan)
            Me.columnA_Br_Plan = New Global.System.Data.DataColumn("A_Br_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Br_Plan)
            Me.columnA_Rb_Plan = New Global.System.Data.DataColumn("A_Rb_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Rb_Plan)
            Me.columnA_Sr_Plan = New Global.System.Data.DataColumn("A_Sr_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Sr_Plan)
            Me.columnA_Y_Plan = New Global.System.Data.DataColumn("A_Y_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Y_Plan)
            Me.columnA_Zr_Plan = New Global.System.Data.DataColumn("A_Zr_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Zr_Plan)
            Me.columnA_Nb_Plan = New Global.System.Data.DataColumn("A_Nb_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Nb_Plan)
            Me.columnA_Mo_Plan = New Global.System.Data.DataColumn("A_Mo_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Mo_Plan)
            Me.columnA_Ru_Plan = New Global.System.Data.DataColumn("A_Ru_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Ru_Plan)
            Me.columnA_Ag_Plan = New Global.System.Data.DataColumn("A_Ag_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Ag_Plan)
            Me.columnA_Cd_Plan = New Global.System.Data.DataColumn("A_Cd_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Cd_Plan)
            Me.columnA_In_Plan = New Global.System.Data.DataColumn("A_In_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_In_Plan)
            Me.columnA_Sn_Plan = New Global.System.Data.DataColumn("A_Sn_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Sn_Plan)
            Me.columnA_Sb_Plan = New Global.System.Data.DataColumn("A_Sb_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Sb_Plan)
            Me.columnA_I_Plan = New Global.System.Data.DataColumn("A_I_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_I_Plan)
            Me.columnA_Cs_Plan = New Global.System.Data.DataColumn("A_Cs_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Cs_Plan)
            Me.columnA_Ba_Plan = New Global.System.Data.DataColumn("A_Ba_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Ba_Plan)
            Me.columnA_La_Plan = New Global.System.Data.DataColumn("A_La_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_La_Plan)
            Me.columnA_Ce_Plan = New Global.System.Data.DataColumn("A_Ce_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Ce_Plan)
            Me.columnA_Nd_Plan = New Global.System.Data.DataColumn("A_Nd_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Nd_Plan)
            Me.columnA_Sm_Plan = New Global.System.Data.DataColumn("A_Sm_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Sm_Plan)
            Me.columnA_Eu_Plan = New Global.System.Data.DataColumn("A_Eu_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Eu_Plan)
            Me.columnA_Gd_Plan = New Global.System.Data.DataColumn("A_Gd_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Gd_Plan)
            Me.columnA_Tb_Plan = New Global.System.Data.DataColumn("A_Tb_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Tb_Plan)
            Me.columnA_Dy_Plan = New Global.System.Data.DataColumn("A_Dy_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Dy_Plan)
            Me.columnA_Er_Plan = New Global.System.Data.DataColumn("A_Er_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Er_Plan)
            Me.columnA_Tm_Plan = New Global.System.Data.DataColumn("A_Tm_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Tm_Plan)
            Me.columnA_Yb_Plan = New Global.System.Data.DataColumn("A_Yb_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Yb_Plan)
            Me.columnA_Lu_Plan = New Global.System.Data.DataColumn("A_Lu_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Lu_Plan)
            Me.columnA_Hf_Plan = New Global.System.Data.DataColumn("A_Hf_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Hf_Plan)
            Me.columnA_Ta_Plan = New Global.System.Data.DataColumn("A_Ta_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Ta_Plan)
            Me.columnA_W_Plan = New Global.System.Data.DataColumn("A_W_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_W_Plan)
            Me.columnA_Re_Plan = New Global.System.Data.DataColumn("A_Re_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Re_Plan)
            Me.columnA_Ir_Plan = New Global.System.Data.DataColumn("A_Ir_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Ir_Plan)
            Me.columnA_Pt_Plan = New Global.System.Data.DataColumn("A_Pt_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Pt_Plan)
            Me.columnA_Au_Plan = New Global.System.Data.DataColumn("A_Au_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Au_Plan)
            Me.columnA_Hg_Plan = New Global.System.Data.DataColumn("A_Hg_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Hg_Plan)
            Me.columnA_Th_Plan = New Global.System.Data.DataColumn("A_Th_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Th_Plan)
            Me.columnA_U_Plan = New Global.System.Data.DataColumn("A_U_Plan", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_U_Plan)
            Me.columnA_Cupboard_Number = New Global.System.Data.DataColumn("A_Cupboard_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Cupboard_Number)
            Me.columnA_Box_Number = New Global.System.Data.DataColumn("A_Box_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Box_Number)
            Me.columnA_Received_By = New Global.System.Data.DataColumn("A_Received_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Received_By)
            Me.columnA_Notes = New Global.System.Data.DataColumn("A_Notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Notes)
            Me.columnP_Cleaning_Fact = New Global.System.Data.DataColumn("P_Cleaning_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Cleaning_Fact)
            Me.columnP_Drying_Fact = New Global.System.Data.DataColumn("P_Drying_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Drying_Fact)
            Me.columnP_Evaporation_Fact = New Global.System.Data.DataColumn("P_Evaporation_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Evaporation_Fact)
            Me.columnP_Freeze_Drying_Fact = New Global.System.Data.DataColumn("P_Freeze_Drying_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Freeze_Drying_Fact)
            Me.columnP_Homogenizing_Fact = New Global.System.Data.DataColumn("P_Homogenizing_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Homogenizing_Fact)
            Me.columnP_Pelletization_Fact = New Global.System.Data.DataColumn("P_Pelletization_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Pelletization_Fact)
            Me.columnP_Fragmentation_Fact = New Global.System.Data.DataColumn("P_Fragmentation_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Fragmentation_Fact)
            Me.columnP_Weighting_SLI = New Global.System.Data.DataColumn("P_Weighting_SLI", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Weighting_SLI)
            Me.columnP_Weighting_LLI = New Global.System.Data.DataColumn("P_Weighting_LLI", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Weighting_LLI)
            Me.columnP_Date_Sample_Preparation = New Global.System.Data.DataColumn("P_Date_Sample_Preparation", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Date_Sample_Preparation)
            Me.columnP_Maked_By = New Global.System.Data.DataColumn("P_Maked_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Maked_By)
            Me.columnI_SLI_Time_Start = New Global.System.Data.DataColumn("I_SLI_Time_Start", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_SLI_Time_Start)
            Me.columnI_SLI_Channel_Irradiation = New Global.System.Data.DataColumn("I_SLI_Channel_Irradiation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_SLI_Channel_Irradiation)
            Me.columnI_SLI_File_First = New Global.System.Data.DataColumn("I_SLI_File_First", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_SLI_File_First)
            Me.columnI_SLI_Irradiated_By = New Global.System.Data.DataColumn("I_SLI_Irradiated_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_SLI_Irradiated_By)
            Me.columnI_LLI_1_Irradiation_Fact = New Global.System.Data.DataColumn("I_LLI_1_Irradiation_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_1_Irradiation_Fact)
            Me.columnI_LLI_1_Date_Start = New Global.System.Data.DataColumn("I_LLI_1_Date_Start", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_1_Date_Start)
            Me.columnI_LLI_1_Time_Start = New Global.System.Data.DataColumn("I_LLI_1_Time_Start", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_1_Time_Start)
            Me.columnI_LLI_1_Date_Finish = New Global.System.Data.DataColumn("I_LLI_1_Date_Finish", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_1_Date_Finish)
            Me.columnI_LLI_1_Time_Finish = New Global.System.Data.DataColumn("I_LLI_1_Time_Finish", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_1_Time_Finish)
            Me.columnI_LLI_1_Channel_Irradiation = New Global.System.Data.DataColumn("I_LLI_1_Channel_Irradiation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_1_Channel_Irradiation)
            Me.columnI_LLI_1_Detector_Number = New Global.System.Data.DataColumn("I_LLI_1_Detector_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_1_Detector_Number)
            Me.columnI_LLI_1_File_First = New Global.System.Data.DataColumn("I_LLI_1_File_First", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_1_File_First)
            Me.columnI_LLI_1_File_Last = New Global.System.Data.DataColumn("I_LLI_1_File_Last", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_1_File_Last)
            Me.columnI_LLI_1_Irradiated_By = New Global.System.Data.DataColumn("I_LLI_1_Irradiated_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_1_Irradiated_By)
            Me.columnI_LLI_1_Irradiation_Log = New Global.System.Data.DataColumn("I_LLI_1_Irradiation_Log", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_1_Irradiation_Log)
            Me.columnI_LLI_2_Irradiation_Fact = New Global.System.Data.DataColumn("I_LLI_2_Irradiation_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_2_Irradiation_Fact)
            Me.columnI_LLI_2_Date_Start = New Global.System.Data.DataColumn("I_LLI_2_Date_Start", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_2_Date_Start)
            Me.columnI_LLI_2_Time_Start = New Global.System.Data.DataColumn("I_LLI_2_Time_Start", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_2_Time_Start)
            Me.columnI_LLI_2_Date_Finish = New Global.System.Data.DataColumn("I_LLI_2_Date_Finish", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_2_Date_Finish)
            Me.columnI_LLI_2_Time_Finish = New Global.System.Data.DataColumn("I_LLI_2_Time_Finish", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_2_Time_Finish)
            Me.columnI_LLI_2_Channel_Irradiation = New Global.System.Data.DataColumn("I_LLI_2_Channel_Irradiation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_2_Channel_Irradiation)
            Me.columnI_LLI_2_Detector_Number = New Global.System.Data.DataColumn("I_LLI_2_Detector_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_2_Detector_Number)
            Me.columnI_LLI_2_File_First = New Global.System.Data.DataColumn("I_LLI_2_File_First", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_2_File_First)
            Me.columnI_LLI_2_File_Last = New Global.System.Data.DataColumn("I_LLI_2_File_Last", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_2_File_Last)
            Me.columnI_LLI_2_Irradiated_By = New Global.System.Data.DataColumn("I_LLI_2_Irradiated_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_2_Irradiated_By)
            Me.columnI_LLI_2_Irradiation_Log = New Global.System.Data.DataColumn("I_LLI_2_Irradiation_Log", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_LLI_2_Irradiation_Log)
            Me.columnI_SLI_Date = New Global.System.Data.DataColumn("I_SLI_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_SLI_Date)
            Me.columnI_SLI_Duration = New Global.System.Data.DataColumn("I_SLI_Duration", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_SLI_Duration)
            Me.columnI_SLI_Irradiation_Log_Number = New Global.System.Data.DataColumn("I_SLI_Irradiation_Log_Number", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_SLI_Irradiation_Log_Number)
            Me.columnI_SLI_Measured_By = New Global.System.Data.DataColumn("I_SLI_Measured_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_SLI_Measured_By)
            Me.columnI_SLI_Detector_1 = New Global.System.Data.DataColumn("I_SLI_Detector_1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_SLI_Detector_1)
            Me.columnI_SLI_Detector_2 = New Global.System.Data.DataColumn("I_SLI_Detector_2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_SLI_Detector_2)
            Me.columnI_SLI_Detector_3 = New Global.System.Data.DataColumn("I_SLI_Detector_3", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_SLI_Detector_3)
            Me.columnI_SLI_Detector_4 = New Global.System.Data.DataColumn("I_SLI_Detector_4", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_SLI_Detector_4)
            Me.columnI_SLI_File_Last = New Global.System.Data.DataColumn("I_SLI_File_Last", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_SLI_File_Last)
            Me.columnI_SLI_Duration1 = New Global.System.Data.DataColumn("I_SLI_Duration1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_SLI_Duration1)
            Me.columnF_Country_Code.AllowDBNull = false
            Me.columnF_Country_Code.MaxLength = 2
            Me.columnF_Client_ID.AllowDBNull = false
            Me.columnF_Client_ID.MaxLength = 2
            Me.columnF_Year.AllowDBNull = false
            Me.columnF_Year.MaxLength = 2
            Me.columnF_Sample_Set_ID.AllowDBNull = false
            Me.columnF_Sample_Set_ID.MaxLength = 2
            Me.columnF_Sample_Set_Index.AllowDBNull = false
            Me.columnF_Sample_Set_Index.MaxLength = 1
            Me.columnA_Sample_ID.AllowDBNull = false
            Me.columnA_Sample_ID.MaxLength = 2
            Me.columnA_Client_Sample_ID.MaxLength = 20
            Me.columnA_Sample_Type.MaxLength = 25
            Me.columnA_Sample_Subtype.MaxLength = 30
            Me.columnA_Collection_Place.MaxLength = 100
            Me.columnA_Latitude.MaxLength = 9
            Me.columnA_Longitude.MaxLength = 9
            Me.columnA_Determined_Elements.MaxLength = 20
            Me.columnA_Cupboard_Number.MaxLength = 1
            Me.columnA_Box_Number.MaxLength = 2
            Me.columnA_Received_By.MaxLength = 25
            Me.columnA_Notes.MaxLength = 40
            Me.columnP_Maked_By.MaxLength = 25
            Me.columnI_SLI_Channel_Irradiation.MaxLength = 1
            Me.columnI_SLI_File_First.MaxLength = 10
            Me.columnI_SLI_Irradiated_By.MaxLength = 25
            Me.columnI_LLI_1_Channel_Irradiation.MaxLength = 1
            Me.columnI_LLI_1_Detector_Number.MaxLength = 1
            Me.columnI_LLI_1_File_First.MaxLength = 10
            Me.columnI_LLI_1_File_Last.MaxLength = 10
            Me.columnI_LLI_1_Irradiated_By.MaxLength = 25
            Me.columnI_LLI_2_Channel_Irradiation.MaxLength = 1
            Me.columnI_LLI_2_Detector_Number.MaxLength = 1
            Me.columnI_LLI_2_File_First.MaxLength = 10
            Me.columnI_LLI_2_File_Last.MaxLength = 10
            Me.columnI_LLI_2_Irradiated_By.MaxLength = 25
            Me.columnI_SLI_Measured_By.MaxLength = 25
            Me.columnI_SLI_File_Last.MaxLength = 10
            Me.columnI_SLI_Duration1.Caption = "I_SLI_Duration"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_SampleRow() As table_SampleRow
            Return CType(Me.NewRow,table_SampleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_SampleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_SampleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_SampleRowChangedEvent) Is Nothing) Then
                RaiseEvent table_SampleRowChanged(Me, New table_SampleRowChangeEvent(CType(e.Row,table_SampleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_SampleRowChangingEvent) Is Nothing) Then
                RaiseEvent table_SampleRowChanging(Me, New table_SampleRowChangeEvent(CType(e.Row,table_SampleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_SampleRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_SampleRowDeleted(Me, New table_SampleRowChangeEvent(CType(e.Row,table_SampleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_SampleRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_SampleRowDeleting(Me, New table_SampleRowChangeEvent(CType(e.Row,table_SampleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_SampleRow(ByVal row As table_SampleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_SampleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_Sample_Sample_PreparationDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_Sample_Sample_PreparationRow)
        
        Private columnA_Sample_ID As Global.System.Data.DataColumn
        
        Private columnA_Client_Sample_ID As Global.System.Data.DataColumn
        
        Private columnP_Cleaning_Fact As Global.System.Data.DataColumn
        
        Private columnP_Drying_Fact As Global.System.Data.DataColumn
        
        Private columnP_Evaporation_Fact As Global.System.Data.DataColumn
        
        Private columnP_Freeze_Drying_Fact As Global.System.Data.DataColumn
        
        Private columnP_Homogenizing_Fact As Global.System.Data.DataColumn
        
        Private columnP_Pelletization_Fact As Global.System.Data.DataColumn
        
        Private columnP_Fragmentation_Fact As Global.System.Data.DataColumn
        
        Private columnP_Weighting_SLI As Global.System.Data.DataColumn
        
        Private columnP_Weighting_LLI As Global.System.Data.DataColumn
        
        Private columnP_Date_Sample_Preparation As Global.System.Data.DataColumn
        
        Private columnP_Maked_By As Global.System.Data.DataColumn
        
        Private columnF_Country_Code As Global.System.Data.DataColumn
        
        Private columnF_Client_ID As Global.System.Data.DataColumn
        
        Private columnF_Year As Global.System.Data.DataColumn
        
        Private columnF_Sample_Set_ID As Global.System.Data.DataColumn
        
        Private columnF_Sample_Set_Index As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_Sample_Sample_Preparation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Sample_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Sample_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Client_Sample_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Client_Sample_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Cleaning_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Cleaning_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Drying_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Drying_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Evaporation_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Evaporation_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Freeze_Drying_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Freeze_Drying_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Homogenizing_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Homogenizing_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Pelletization_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Pelletization_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Fragmentation_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Fragmentation_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Weighting_SLIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Weighting_SLI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Weighting_LLIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Weighting_LLI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Date_Sample_PreparationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Date_Sample_Preparation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property P_Maked_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_Maked_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property F_Country_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Country_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property F_Client_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Client_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property F_YearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Year
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property F_Sample_Set_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Sample_Set_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property F_Sample_Set_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Sample_Set_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_Sample_Sample_PreparationRow
            Get
                Return CType(Me.Rows(index),table_Sample_Sample_PreparationRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_Sample_PreparationRowChanging As table_Sample_Sample_PreparationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_Sample_PreparationRowChanged As table_Sample_Sample_PreparationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_Sample_PreparationRowDeleting As table_Sample_Sample_PreparationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_Sample_PreparationRowDeleted As table_Sample_Sample_PreparationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_Sample_Sample_PreparationRow(ByVal row As table_Sample_Sample_PreparationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_Sample_Sample_PreparationRow( _
                    ByVal A_Sample_ID As String,  _
                    ByVal A_Client_Sample_ID As String,  _
                    ByVal P_Cleaning_Fact As Boolean,  _
                    ByVal P_Drying_Fact As Boolean,  _
                    ByVal P_Evaporation_Fact As Boolean,  _
                    ByVal P_Freeze_Drying_Fact As Boolean,  _
                    ByVal P_Homogenizing_Fact As Boolean,  _
                    ByVal P_Pelletization_Fact As Boolean,  _
                    ByVal P_Fragmentation_Fact As Boolean,  _
                    ByVal P_Weighting_SLI As Single,  _
                    ByVal P_Weighting_LLI As Single,  _
                    ByVal P_Date_Sample_Preparation As Date,  _
                    ByVal P_Maked_By As String,  _
                    ByVal F_Country_Code As String,  _
                    ByVal F_Client_ID As String,  _
                    ByVal F_Year As String,  _
                    ByVal F_Sample_Set_ID As String,  _
                    ByVal F_Sample_Set_Index As String) As table_Sample_Sample_PreparationRow
            Dim rowtable_Sample_Sample_PreparationRow As table_Sample_Sample_PreparationRow = CType(Me.NewRow,table_Sample_Sample_PreparationRow)
            Dim columnValuesArray() As Object = New Object() {A_Sample_ID, A_Client_Sample_ID, P_Cleaning_Fact, P_Drying_Fact, P_Evaporation_Fact, P_Freeze_Drying_Fact, P_Homogenizing_Fact, P_Pelletization_Fact, P_Fragmentation_Fact, P_Weighting_SLI, P_Weighting_LLI, P_Date_Sample_Preparation, P_Maked_By, F_Country_Code, F_Client_ID, F_Year, F_Sample_Set_ID, F_Sample_Set_Index}
            rowtable_Sample_Sample_PreparationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_Sample_Sample_PreparationRow)
            Return rowtable_Sample_Sample_PreparationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByA_Sample_IDF_Country_CodeF_Client_IDF_YearF_Sample_Set_IDF_Sample_Set_Index(ByVal A_Sample_ID As String, ByVal F_Country_Code As String, ByVal F_Client_ID As String, ByVal F_Year As String, ByVal F_Sample_Set_ID As String, ByVal F_Sample_Set_Index As String) As table_Sample_Sample_PreparationRow
            Return CType(Me.Rows.Find(New Object() {A_Sample_ID, F_Country_Code, F_Client_ID, F_Year, F_Sample_Set_ID, F_Sample_Set_Index}),table_Sample_Sample_PreparationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_Sample_Sample_PreparationDataTable = CType(MyBase.Clone,table_Sample_Sample_PreparationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_Sample_Sample_PreparationDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnA_Sample_ID = MyBase.Columns("A_Sample_ID")
            Me.columnA_Client_Sample_ID = MyBase.Columns("A_Client_Sample_ID")
            Me.columnP_Cleaning_Fact = MyBase.Columns("P_Cleaning_Fact")
            Me.columnP_Drying_Fact = MyBase.Columns("P_Drying_Fact")
            Me.columnP_Evaporation_Fact = MyBase.Columns("P_Evaporation_Fact")
            Me.columnP_Freeze_Drying_Fact = MyBase.Columns("P_Freeze_Drying_Fact")
            Me.columnP_Homogenizing_Fact = MyBase.Columns("P_Homogenizing_Fact")
            Me.columnP_Pelletization_Fact = MyBase.Columns("P_Pelletization_Fact")
            Me.columnP_Fragmentation_Fact = MyBase.Columns("P_Fragmentation_Fact")
            Me.columnP_Weighting_SLI = MyBase.Columns("P_Weighting_SLI")
            Me.columnP_Weighting_LLI = MyBase.Columns("P_Weighting_LLI")
            Me.columnP_Date_Sample_Preparation = MyBase.Columns("P_Date_Sample_Preparation")
            Me.columnP_Maked_By = MyBase.Columns("P_Maked_By")
            Me.columnF_Country_Code = MyBase.Columns("F_Country_Code")
            Me.columnF_Client_ID = MyBase.Columns("F_Client_ID")
            Me.columnF_Year = MyBase.Columns("F_Year")
            Me.columnF_Sample_Set_ID = MyBase.Columns("F_Sample_Set_ID")
            Me.columnF_Sample_Set_Index = MyBase.Columns("F_Sample_Set_Index")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnA_Sample_ID = New Global.System.Data.DataColumn("A_Sample_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Sample_ID)
            Me.columnA_Client_Sample_ID = New Global.System.Data.DataColumn("A_Client_Sample_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Client_Sample_ID)
            Me.columnP_Cleaning_Fact = New Global.System.Data.DataColumn("P_Cleaning_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Cleaning_Fact)
            Me.columnP_Drying_Fact = New Global.System.Data.DataColumn("P_Drying_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Drying_Fact)
            Me.columnP_Evaporation_Fact = New Global.System.Data.DataColumn("P_Evaporation_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Evaporation_Fact)
            Me.columnP_Freeze_Drying_Fact = New Global.System.Data.DataColumn("P_Freeze_Drying_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Freeze_Drying_Fact)
            Me.columnP_Homogenizing_Fact = New Global.System.Data.DataColumn("P_Homogenizing_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Homogenizing_Fact)
            Me.columnP_Pelletization_Fact = New Global.System.Data.DataColumn("P_Pelletization_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Pelletization_Fact)
            Me.columnP_Fragmentation_Fact = New Global.System.Data.DataColumn("P_Fragmentation_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Fragmentation_Fact)
            Me.columnP_Weighting_SLI = New Global.System.Data.DataColumn("P_Weighting_SLI", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Weighting_SLI)
            Me.columnP_Weighting_LLI = New Global.System.Data.DataColumn("P_Weighting_LLI", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Weighting_LLI)
            Me.columnP_Date_Sample_Preparation = New Global.System.Data.DataColumn("P_Date_Sample_Preparation", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Date_Sample_Preparation)
            Me.columnP_Maked_By = New Global.System.Data.DataColumn("P_Maked_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_Maked_By)
            Me.columnF_Country_Code = New Global.System.Data.DataColumn("F_Country_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Country_Code)
            Me.columnF_Client_ID = New Global.System.Data.DataColumn("F_Client_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Client_ID)
            Me.columnF_Year = New Global.System.Data.DataColumn("F_Year", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Year)
            Me.columnF_Sample_Set_ID = New Global.System.Data.DataColumn("F_Sample_Set_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Sample_Set_ID)
            Me.columnF_Sample_Set_Index = New Global.System.Data.DataColumn("F_Sample_Set_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Sample_Set_Index)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnA_Sample_ID, Me.columnF_Country_Code, Me.columnF_Client_ID, Me.columnF_Year, Me.columnF_Sample_Set_ID, Me.columnF_Sample_Set_Index}, true))
            Me.columnA_Sample_ID.AllowDBNull = false
            Me.columnA_Sample_ID.MaxLength = 2
            Me.columnA_Client_Sample_ID.MaxLength = 20
            Me.columnP_Maked_By.MaxLength = 25
            Me.columnF_Country_Code.AllowDBNull = false
            Me.columnF_Country_Code.MaxLength = 2
            Me.columnF_Client_ID.AllowDBNull = false
            Me.columnF_Client_ID.MaxLength = 2
            Me.columnF_Year.AllowDBNull = false
            Me.columnF_Year.MaxLength = 2
            Me.columnF_Sample_Set_ID.AllowDBNull = false
            Me.columnF_Sample_Set_ID.MaxLength = 2
            Me.columnF_Sample_Set_Index.AllowDBNull = false
            Me.columnF_Sample_Set_Index.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_Sample_Sample_PreparationRow() As table_Sample_Sample_PreparationRow
            Return CType(Me.NewRow,table_Sample_Sample_PreparationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_Sample_Sample_PreparationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_Sample_Sample_PreparationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_Sample_Sample_PreparationRowChangedEvent) Is Nothing) Then
                RaiseEvent table_Sample_Sample_PreparationRowChanged(Me, New table_Sample_Sample_PreparationRowChangeEvent(CType(e.Row,table_Sample_Sample_PreparationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_Sample_Sample_PreparationRowChangingEvent) Is Nothing) Then
                RaiseEvent table_Sample_Sample_PreparationRowChanging(Me, New table_Sample_Sample_PreparationRowChangeEvent(CType(e.Row,table_Sample_Sample_PreparationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_Sample_Sample_PreparationRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_Sample_Sample_PreparationRowDeleted(Me, New table_Sample_Sample_PreparationRowChangeEvent(CType(e.Row,table_Sample_Sample_PreparationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_Sample_Sample_PreparationRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_Sample_Sample_PreparationRowDeleting(Me, New table_Sample_Sample_PreparationRowChangeEvent(CType(e.Row,table_Sample_Sample_PreparationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_Sample_Sample_PreparationRow(ByVal row As table_Sample_Sample_PreparationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_Sample_Sample_PreparationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_SLI_Irradiation_LogDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_SLI_Irradiation_LogRow)
        
        Private columnCountry_Code As Global.System.Data.DataColumn
        
        Private columnClient_ID As Global.System.Data.DataColumn
        
        Private columnYear As Global.System.Data.DataColumn
        
        Private columnSample_Set_ID As Global.System.Data.DataColumn
        
        Private columnSample_Set_Index As Global.System.Data.DataColumn
        
        Private columnSample_ID As Global.System.Data.DataColumn
        
        Private columnDate_Start As Global.System.Data.DataColumn
        
        Private columnTime_Start As Global.System.Data.DataColumn
        
        Private columnChannel As Global.System.Data.DataColumn
        
        Private columnDuration As Global.System.Data.DataColumn
        
        Private columnDetector_2 As Global.System.Data.DataColumn
        
        Private columnDetector_3 As Global.System.Data.DataColumn
        
        Private columnDetector_4 As Global.System.Data.DataColumn
        
        Private columnFile_Last As Global.System.Data.DataColumn
        
        Private columnIrradiated_By As Global.System.Data.DataColumn
        
        Private columnMeasured_By As Global.System.Data.DataColumn
        
        Private columnPaper_Log_Number As Global.System.Data.DataColumn
        
        Private columnPosition_Number As Global.System.Data.DataColumn
        
        Private columnDetector_1 As Global.System.Data.DataColumn
        
        Private columnFile_First As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_SLI_Irradiation_Log"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Country_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountry_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Client_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClient_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property YearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Sample_Set_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSample_Set_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Sample_Set_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSample_Set_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Sample_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSample_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Date_StartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Start
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Time_StartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTime_Start
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ChannelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChannel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DurationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDuration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Detector_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetector_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Detector_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetector_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Detector_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetector_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property File_LastColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFile_Last
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Irradiated_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIrradiated_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Measured_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasured_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Paper_Log_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaper_Log_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Position_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPosition_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Detector_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetector_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property File_FirstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFile_First
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_SLI_Irradiation_LogRow
            Get
                Return CType(Me.Rows(index),table_SLI_Irradiation_LogRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SLI_Irradiation_LogRowChanging As table_SLI_Irradiation_LogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SLI_Irradiation_LogRowChanged As table_SLI_Irradiation_LogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SLI_Irradiation_LogRowDeleting As table_SLI_Irradiation_LogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SLI_Irradiation_LogRowDeleted As table_SLI_Irradiation_LogRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_SLI_Irradiation_LogRow(ByVal row As table_SLI_Irradiation_LogRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_SLI_Irradiation_LogRow( _
                    ByVal Country_Code As String,  _
                    ByVal Client_ID As String,  _
                    ByVal Year As String,  _
                    ByVal Sample_Set_ID As String,  _
                    ByVal Sample_Set_Index As String,  _
                    ByVal Sample_ID As String,  _
                    ByVal Date_Start As Date,  _
                    ByVal Time_Start As System.TimeSpan,  _
                    ByVal Channel As Short,  _
                    ByVal Duration As Integer,  _
                    ByVal Detector_2 As Boolean,  _
                    ByVal Detector_3 As Boolean,  _
                    ByVal Detector_4 As Boolean,  _
                    ByVal File_Last As String,  _
                    ByVal Irradiated_By As String,  _
                    ByVal Measured_By As String,  _
                    ByVal Paper_Log_Number As String,  _
                    ByVal Position_Number As Short,  _
                    ByVal Detector_1 As Short,  _
                    ByVal File_First As String) As table_SLI_Irradiation_LogRow
            Dim rowtable_SLI_Irradiation_LogRow As table_SLI_Irradiation_LogRow = CType(Me.NewRow,table_SLI_Irradiation_LogRow)
            Dim columnValuesArray() As Object = New Object() {Country_Code, Client_ID, Year, Sample_Set_ID, Sample_Set_Index, Sample_ID, Date_Start, Time_Start, Channel, Duration, Detector_2, Detector_3, Detector_4, File_Last, Irradiated_By, Measured_By, Paper_Log_Number, Position_Number, Detector_1, File_First}
            rowtable_SLI_Irradiation_LogRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_SLI_Irradiation_LogRow)
            Return rowtable_SLI_Irradiation_LogRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByCountry_CodeClient_IDYearSample_Set_IDSample_Set_IndexSample_ID(ByVal Country_Code As String, ByVal Client_ID As String, ByVal Year As String, ByVal Sample_Set_ID As String, ByVal Sample_Set_Index As String, ByVal Sample_ID As String) As table_SLI_Irradiation_LogRow
            Return CType(Me.Rows.Find(New Object() {Country_Code, Client_ID, Year, Sample_Set_ID, Sample_Set_Index, Sample_ID}),table_SLI_Irradiation_LogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_SLI_Irradiation_LogDataTable = CType(MyBase.Clone,table_SLI_Irradiation_LogDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_SLI_Irradiation_LogDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCountry_Code = MyBase.Columns("Country_Code")
            Me.columnClient_ID = MyBase.Columns("Client_ID")
            Me.columnYear = MyBase.Columns("Year")
            Me.columnSample_Set_ID = MyBase.Columns("Sample_Set_ID")
            Me.columnSample_Set_Index = MyBase.Columns("Sample_Set_Index")
            Me.columnSample_ID = MyBase.Columns("Sample_ID")
            Me.columnDate_Start = MyBase.Columns("Date_Start")
            Me.columnTime_Start = MyBase.Columns("Time_Start")
            Me.columnChannel = MyBase.Columns("Channel")
            Me.columnDuration = MyBase.Columns("Duration")
            Me.columnDetector_2 = MyBase.Columns("Detector_2")
            Me.columnDetector_3 = MyBase.Columns("Detector_3")
            Me.columnDetector_4 = MyBase.Columns("Detector_4")
            Me.columnFile_Last = MyBase.Columns("File_Last")
            Me.columnIrradiated_By = MyBase.Columns("Irradiated_By")
            Me.columnMeasured_By = MyBase.Columns("Measured_By")
            Me.columnPaper_Log_Number = MyBase.Columns("Paper_Log_Number")
            Me.columnPosition_Number = MyBase.Columns("Position_Number")
            Me.columnDetector_1 = MyBase.Columns("Detector_1")
            Me.columnFile_First = MyBase.Columns("File_First")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCountry_Code = New Global.System.Data.DataColumn("Country_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountry_Code)
            Me.columnClient_ID = New Global.System.Data.DataColumn("Client_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClient_ID)
            Me.columnYear = New Global.System.Data.DataColumn("Year", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYear)
            Me.columnSample_Set_ID = New Global.System.Data.DataColumn("Sample_Set_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSample_Set_ID)
            Me.columnSample_Set_Index = New Global.System.Data.DataColumn("Sample_Set_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSample_Set_Index)
            Me.columnSample_ID = New Global.System.Data.DataColumn("Sample_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSample_ID)
            Me.columnDate_Start = New Global.System.Data.DataColumn("Date_Start", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Start)
            Me.columnTime_Start = New Global.System.Data.DataColumn("Time_Start", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTime_Start)
            Me.columnChannel = New Global.System.Data.DataColumn("Channel", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChannel)
            Me.columnDuration = New Global.System.Data.DataColumn("Duration", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDuration)
            Me.columnDetector_2 = New Global.System.Data.DataColumn("Detector_2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetector_2)
            Me.columnDetector_3 = New Global.System.Data.DataColumn("Detector_3", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetector_3)
            Me.columnDetector_4 = New Global.System.Data.DataColumn("Detector_4", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetector_4)
            Me.columnFile_Last = New Global.System.Data.DataColumn("File_Last", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFile_Last)
            Me.columnIrradiated_By = New Global.System.Data.DataColumn("Irradiated_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIrradiated_By)
            Me.columnMeasured_By = New Global.System.Data.DataColumn("Measured_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasured_By)
            Me.columnPaper_Log_Number = New Global.System.Data.DataColumn("Paper_Log_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaper_Log_Number)
            Me.columnPosition_Number = New Global.System.Data.DataColumn("Position_Number", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPosition_Number)
            Me.columnDetector_1 = New Global.System.Data.DataColumn("Detector_1", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetector_1)
            Me.columnFile_First = New Global.System.Data.DataColumn("File_First", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFile_First)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCountry_Code, Me.columnClient_ID, Me.columnYear, Me.columnSample_Set_ID, Me.columnSample_Set_Index, Me.columnSample_ID}, true))
            Me.columnCountry_Code.AllowDBNull = false
            Me.columnCountry_Code.MaxLength = 2
            Me.columnClient_ID.AllowDBNull = false
            Me.columnClient_ID.MaxLength = 2
            Me.columnYear.AllowDBNull = false
            Me.columnYear.MaxLength = 2
            Me.columnSample_Set_ID.AllowDBNull = false
            Me.columnSample_Set_ID.MaxLength = 10
            Me.columnSample_Set_Index.AllowDBNull = false
            Me.columnSample_Set_Index.MaxLength = 2
            Me.columnSample_ID.AllowDBNull = false
            Me.columnSample_ID.MaxLength = 3
            Me.columnDate_Start.AllowDBNull = false
            Me.columnFile_Last.MaxLength = 10
            Me.columnIrradiated_By.MaxLength = 25
            Me.columnMeasured_By.MaxLength = 25
            Me.columnPaper_Log_Number.MaxLength = 10
            Me.columnFile_First.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_SLI_Irradiation_LogRow() As table_SLI_Irradiation_LogRow
            Return CType(Me.NewRow,table_SLI_Irradiation_LogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_SLI_Irradiation_LogRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_SLI_Irradiation_LogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_SLI_Irradiation_LogRowChangedEvent) Is Nothing) Then
                RaiseEvent table_SLI_Irradiation_LogRowChanged(Me, New table_SLI_Irradiation_LogRowChangeEvent(CType(e.Row,table_SLI_Irradiation_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_SLI_Irradiation_LogRowChangingEvent) Is Nothing) Then
                RaiseEvent table_SLI_Irradiation_LogRowChanging(Me, New table_SLI_Irradiation_LogRowChangeEvent(CType(e.Row,table_SLI_Irradiation_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_SLI_Irradiation_LogRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_SLI_Irradiation_LogRowDeleted(Me, New table_SLI_Irradiation_LogRowChangeEvent(CType(e.Row,table_SLI_Irradiation_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_SLI_Irradiation_LogRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_SLI_Irradiation_LogRowDeleting(Me, New table_SLI_Irradiation_LogRowChangeEvent(CType(e.Row,table_SLI_Irradiation_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_SLI_Irradiation_LogRow(ByVal row As table_SLI_Irradiation_LogRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_SLI_Irradiation_LogDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_LLI_Irradiation_LogDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_LLI_Irradiation_LogRow)
        
        Private columnCountry_Code As Global.System.Data.DataColumn
        
        Private columnClient_ID As Global.System.Data.DataColumn
        
        Private columnYear As Global.System.Data.DataColumn
        
        Private columnSample_Set_ID As Global.System.Data.DataColumn
        
        Private columnSample_Set_Index As Global.System.Data.DataColumn
        
        Private columnSample_ID As Global.System.Data.DataColumn
        
        Private columnDate_Start As Global.System.Data.DataColumn
        
        Private columnTime_Start As Global.System.Data.DataColumn
        
        Private columnChannel As Global.System.Data.DataColumn
        
        Private columnDate_Finish As Global.System.Data.DataColumn
        
        Private columnTime_Finish As Global.System.Data.DataColumn
        
        Private columnPower_Relief_Date_Start_1 As Global.System.Data.DataColumn
        
        Private columnPower_Relief_Time_Start_1 As Global.System.Data.DataColumn
        
        Private columnPower_Relief_Date_Finish_1 As Global.System.Data.DataColumn
        
        Private columnPower_Relief_Time_Finish_1 As Global.System.Data.DataColumn
        
        Private columnPower_Relief_Date_Start_2 As Global.System.Data.DataColumn
        
        Private columnPower_Relief_Time_Start_2 As Global.System.Data.DataColumn
        
        Private columnPower_Relief_Date_Finish_2 As Global.System.Data.DataColumn
        
        Private columnPower_Relief_Time_Finish_2 As Global.System.Data.DataColumn
        
        Private columnContainer_Number As Global.System.Data.DataColumn
        
        Private columnPosition_Number As Global.System.Data.DataColumn
        
        Private columnIrradiated_By As Global.System.Data.DataColumn
        
        Private columnDate_Rehadle As Global.System.Data.DataColumn
        
        Private columnRehandled_By As Global.System.Data.DataColumn
        
        Private columnDate_Measurement_LLI_1 As Global.System.Data.DataColumn
        
        Private columnDetector_2_Measurement_LLI_1 As Global.System.Data.DataColumn
        
        Private columnDetector_3_Measurement_LLI_1 As Global.System.Data.DataColumn
        
        Private columnDetector_4_Measurement_LLI_1 As Global.System.Data.DataColumn
        
        Private columnPaper_Log_LLI_1_Number As Global.System.Data.DataColumn
        
        Private columnMeasured_LLI_1_By As Global.System.Data.DataColumn
        
        Private columnDate_Measurement_LLI_2 As Global.System.Data.DataColumn
        
        Private columnDetector_2_Measurement_LLI_2 As Global.System.Data.DataColumn
        
        Private columnDetector_3_Measurement_LLI_2 As Global.System.Data.DataColumn
        
        Private columnDetector_4_Measurement_LLI_2 As Global.System.Data.DataColumn
        
        Private columnPaper_Log_LLI_2_Number As Global.System.Data.DataColumn
        
        Private columnMeasured_LLI_2_By As Global.System.Data.DataColumn
        
        Private columnDetector_1_Measurement_LLI_1 As Global.System.Data.DataColumn
        
        Private columnDetector_1_Measurement_LLI_2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_LLI_Irradiation_Log"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Country_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountry_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Client_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClient_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property YearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Sample_Set_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSample_Set_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Sample_Set_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSample_Set_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Sample_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSample_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Date_StartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Start
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Time_StartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTime_Start
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ChannelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChannel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Date_FinishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Time_FinishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTime_Finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Power_Relief_Date_Start_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPower_Relief_Date_Start_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Power_Relief_Time_Start_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPower_Relief_Time_Start_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Power_Relief_Date_Finish_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPower_Relief_Date_Finish_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Power_Relief_Time_Finish_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPower_Relief_Time_Finish_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Power_Relief_Date_Start_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPower_Relief_Date_Start_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Power_Relief_Time_Start_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPower_Relief_Time_Start_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Power_Relief_Date_Finish_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPower_Relief_Date_Finish_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Power_Relief_Time_Finish_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPower_Relief_Time_Finish_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Container_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContainer_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Position_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPosition_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Irradiated_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIrradiated_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Date_RehadleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Rehadle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Rehandled_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRehandled_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Date_Measurement_LLI_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Measurement_LLI_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Detector_2_Measurement_LLI_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetector_2_Measurement_LLI_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Detector_3_Measurement_LLI_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetector_3_Measurement_LLI_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Detector_4_Measurement_LLI_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetector_4_Measurement_LLI_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Paper_Log_LLI_1_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaper_Log_LLI_1_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Measured_LLI_1_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasured_LLI_1_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Date_Measurement_LLI_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Measurement_LLI_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Detector_2_Measurement_LLI_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetector_2_Measurement_LLI_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Detector_3_Measurement_LLI_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetector_3_Measurement_LLI_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Detector_4_Measurement_LLI_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetector_4_Measurement_LLI_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Paper_Log_LLI_2_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaper_Log_LLI_2_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Measured_LLI_2_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasured_LLI_2_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Detector_1_Measurement_LLI_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetector_1_Measurement_LLI_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Detector_1_Measurement_LLI_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetector_1_Measurement_LLI_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_LLI_Irradiation_LogRow
            Get
                Return CType(Me.Rows(index),table_LLI_Irradiation_LogRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_LLI_Irradiation_LogRowChanging As table_LLI_Irradiation_LogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_LLI_Irradiation_LogRowChanged As table_LLI_Irradiation_LogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_LLI_Irradiation_LogRowDeleting As table_LLI_Irradiation_LogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_LLI_Irradiation_LogRowDeleted As table_LLI_Irradiation_LogRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_LLI_Irradiation_LogRow(ByVal row As table_LLI_Irradiation_LogRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_LLI_Irradiation_LogRow( _
                    ByVal Country_Code As String,  _
                    ByVal Client_ID As String,  _
                    ByVal Year As String,  _
                    ByVal Sample_Set_ID As String,  _
                    ByVal Sample_Set_Index As String,  _
                    ByVal Sample_ID As String,  _
                    ByVal Date_Start As Date,  _
                    ByVal Time_Start As System.TimeSpan,  _
                    ByVal Channel As Short,  _
                    ByVal Date_Finish As Date,  _
                    ByVal Time_Finish As System.TimeSpan,  _
                    ByVal Power_Relief_Date_Start_1 As Date,  _
                    ByVal Power_Relief_Time_Start_1 As System.TimeSpan,  _
                    ByVal Power_Relief_Date_Finish_1 As Date,  _
                    ByVal Power_Relief_Time_Finish_1 As System.TimeSpan,  _
                    ByVal Power_Relief_Date_Start_2 As Date,  _
                    ByVal Power_Relief_Time_Start_2 As System.TimeSpan,  _
                    ByVal Power_Relief_Date_Finish_2 As Date,  _
                    ByVal Power_Relief_Time_Finish_2 As System.TimeSpan,  _
                    ByVal Container_Number As Short,  _
                    ByVal Position_Number As Short,  _
                    ByVal Irradiated_By As String,  _
                    ByVal Date_Rehadle As Date,  _
                    ByVal Rehandled_By As String,  _
                    ByVal Date_Measurement_LLI_1 As Date,  _
                    ByVal Detector_2_Measurement_LLI_1 As Boolean,  _
                    ByVal Detector_3_Measurement_LLI_1 As Boolean,  _
                    ByVal Detector_4_Measurement_LLI_1 As Boolean,  _
                    ByVal Paper_Log_LLI_1_Number As String,  _
                    ByVal Measured_LLI_1_By As String,  _
                    ByVal Date_Measurement_LLI_2 As Date,  _
                    ByVal Detector_2_Measurement_LLI_2 As Boolean,  _
                    ByVal Detector_3_Measurement_LLI_2 As Boolean,  _
                    ByVal Detector_4_Measurement_LLI_2 As Boolean,  _
                    ByVal Paper_Log_LLI_2_Number As String,  _
                    ByVal Measured_LLI_2_By As String,  _
                    ByVal Detector_1_Measurement_LLI_1 As Short,  _
                    ByVal Detector_1_Measurement_LLI_2 As Short) As table_LLI_Irradiation_LogRow
            Dim rowtable_LLI_Irradiation_LogRow As table_LLI_Irradiation_LogRow = CType(Me.NewRow,table_LLI_Irradiation_LogRow)
            Dim columnValuesArray() As Object = New Object() {Country_Code, Client_ID, Year, Sample_Set_ID, Sample_Set_Index, Sample_ID, Date_Start, Time_Start, Channel, Date_Finish, Time_Finish, Power_Relief_Date_Start_1, Power_Relief_Time_Start_1, Power_Relief_Date_Finish_1, Power_Relief_Time_Finish_1, Power_Relief_Date_Start_2, Power_Relief_Time_Start_2, Power_Relief_Date_Finish_2, Power_Relief_Time_Finish_2, Container_Number, Position_Number, Irradiated_By, Date_Rehadle, Rehandled_By, Date_Measurement_LLI_1, Detector_2_Measurement_LLI_1, Detector_3_Measurement_LLI_1, Detector_4_Measurement_LLI_1, Paper_Log_LLI_1_Number, Measured_LLI_1_By, Date_Measurement_LLI_2, Detector_2_Measurement_LLI_2, Detector_3_Measurement_LLI_2, Detector_4_Measurement_LLI_2, Paper_Log_LLI_2_Number, Measured_LLI_2_By, Detector_1_Measurement_LLI_1, Detector_1_Measurement_LLI_2}
            rowtable_LLI_Irradiation_LogRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_LLI_Irradiation_LogRow)
            Return rowtable_LLI_Irradiation_LogRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByCountry_CodeClient_IDYearSample_Set_IDSample_Set_IndexSample_ID(ByVal Country_Code As String, ByVal Client_ID As String, ByVal Year As String, ByVal Sample_Set_ID As String, ByVal Sample_Set_Index As String, ByVal Sample_ID As String) As table_LLI_Irradiation_LogRow
            Return CType(Me.Rows.Find(New Object() {Country_Code, Client_ID, Year, Sample_Set_ID, Sample_Set_Index, Sample_ID}),table_LLI_Irradiation_LogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_LLI_Irradiation_LogDataTable = CType(MyBase.Clone,table_LLI_Irradiation_LogDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_LLI_Irradiation_LogDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCountry_Code = MyBase.Columns("Country_Code")
            Me.columnClient_ID = MyBase.Columns("Client_ID")
            Me.columnYear = MyBase.Columns("Year")
            Me.columnSample_Set_ID = MyBase.Columns("Sample_Set_ID")
            Me.columnSample_Set_Index = MyBase.Columns("Sample_Set_Index")
            Me.columnSample_ID = MyBase.Columns("Sample_ID")
            Me.columnDate_Start = MyBase.Columns("Date_Start")
            Me.columnTime_Start = MyBase.Columns("Time_Start")
            Me.columnChannel = MyBase.Columns("Channel")
            Me.columnDate_Finish = MyBase.Columns("Date_Finish")
            Me.columnTime_Finish = MyBase.Columns("Time_Finish")
            Me.columnPower_Relief_Date_Start_1 = MyBase.Columns("Power_Relief_Date_Start_1")
            Me.columnPower_Relief_Time_Start_1 = MyBase.Columns("Power_Relief_Time_Start_1")
            Me.columnPower_Relief_Date_Finish_1 = MyBase.Columns("Power_Relief_Date_Finish_1")
            Me.columnPower_Relief_Time_Finish_1 = MyBase.Columns("Power_Relief_Time_Finish_1")
            Me.columnPower_Relief_Date_Start_2 = MyBase.Columns("Power_Relief_Date_Start_2")
            Me.columnPower_Relief_Time_Start_2 = MyBase.Columns("Power_Relief_Time_Start_2")
            Me.columnPower_Relief_Date_Finish_2 = MyBase.Columns("Power_Relief_Date_Finish_2")
            Me.columnPower_Relief_Time_Finish_2 = MyBase.Columns("Power_Relief_Time_Finish_2")
            Me.columnContainer_Number = MyBase.Columns("Container_Number")
            Me.columnPosition_Number = MyBase.Columns("Position_Number")
            Me.columnIrradiated_By = MyBase.Columns("Irradiated_By")
            Me.columnDate_Rehadle = MyBase.Columns("Date_Rehadle")
            Me.columnRehandled_By = MyBase.Columns("Rehandled_By")
            Me.columnDate_Measurement_LLI_1 = MyBase.Columns("Date_Measurement_LLI_1")
            Me.columnDetector_2_Measurement_LLI_1 = MyBase.Columns("Detector_2_Measurement_LLI_1")
            Me.columnDetector_3_Measurement_LLI_1 = MyBase.Columns("Detector_3_Measurement_LLI_1")
            Me.columnDetector_4_Measurement_LLI_1 = MyBase.Columns("Detector_4_Measurement_LLI_1")
            Me.columnPaper_Log_LLI_1_Number = MyBase.Columns("Paper_Log_LLI_1_Number")
            Me.columnMeasured_LLI_1_By = MyBase.Columns("Measured_LLI_1_By")
            Me.columnDate_Measurement_LLI_2 = MyBase.Columns("Date_Measurement_LLI_2")
            Me.columnDetector_2_Measurement_LLI_2 = MyBase.Columns("Detector_2_Measurement_LLI_2")
            Me.columnDetector_3_Measurement_LLI_2 = MyBase.Columns("Detector_3_Measurement_LLI_2")
            Me.columnDetector_4_Measurement_LLI_2 = MyBase.Columns("Detector_4_Measurement_LLI_2")
            Me.columnPaper_Log_LLI_2_Number = MyBase.Columns("Paper_Log_LLI_2_Number")
            Me.columnMeasured_LLI_2_By = MyBase.Columns("Measured_LLI_2_By")
            Me.columnDetector_1_Measurement_LLI_1 = MyBase.Columns("Detector_1_Measurement_LLI_1")
            Me.columnDetector_1_Measurement_LLI_2 = MyBase.Columns("Detector_1_Measurement_LLI_2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCountry_Code = New Global.System.Data.DataColumn("Country_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountry_Code)
            Me.columnClient_ID = New Global.System.Data.DataColumn("Client_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClient_ID)
            Me.columnYear = New Global.System.Data.DataColumn("Year", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYear)
            Me.columnSample_Set_ID = New Global.System.Data.DataColumn("Sample_Set_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSample_Set_ID)
            Me.columnSample_Set_Index = New Global.System.Data.DataColumn("Sample_Set_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSample_Set_Index)
            Me.columnSample_ID = New Global.System.Data.DataColumn("Sample_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSample_ID)
            Me.columnDate_Start = New Global.System.Data.DataColumn("Date_Start", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Start)
            Me.columnTime_Start = New Global.System.Data.DataColumn("Time_Start", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTime_Start)
            Me.columnChannel = New Global.System.Data.DataColumn("Channel", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChannel)
            Me.columnDate_Finish = New Global.System.Data.DataColumn("Date_Finish", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Finish)
            Me.columnTime_Finish = New Global.System.Data.DataColumn("Time_Finish", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTime_Finish)
            Me.columnPower_Relief_Date_Start_1 = New Global.System.Data.DataColumn("Power_Relief_Date_Start_1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPower_Relief_Date_Start_1)
            Me.columnPower_Relief_Time_Start_1 = New Global.System.Data.DataColumn("Power_Relief_Time_Start_1", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPower_Relief_Time_Start_1)
            Me.columnPower_Relief_Date_Finish_1 = New Global.System.Data.DataColumn("Power_Relief_Date_Finish_1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPower_Relief_Date_Finish_1)
            Me.columnPower_Relief_Time_Finish_1 = New Global.System.Data.DataColumn("Power_Relief_Time_Finish_1", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPower_Relief_Time_Finish_1)
            Me.columnPower_Relief_Date_Start_2 = New Global.System.Data.DataColumn("Power_Relief_Date_Start_2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPower_Relief_Date_Start_2)
            Me.columnPower_Relief_Time_Start_2 = New Global.System.Data.DataColumn("Power_Relief_Time_Start_2", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPower_Relief_Time_Start_2)
            Me.columnPower_Relief_Date_Finish_2 = New Global.System.Data.DataColumn("Power_Relief_Date_Finish_2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPower_Relief_Date_Finish_2)
            Me.columnPower_Relief_Time_Finish_2 = New Global.System.Data.DataColumn("Power_Relief_Time_Finish_2", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPower_Relief_Time_Finish_2)
            Me.columnContainer_Number = New Global.System.Data.DataColumn("Container_Number", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContainer_Number)
            Me.columnPosition_Number = New Global.System.Data.DataColumn("Position_Number", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPosition_Number)
            Me.columnIrradiated_By = New Global.System.Data.DataColumn("Irradiated_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIrradiated_By)
            Me.columnDate_Rehadle = New Global.System.Data.DataColumn("Date_Rehadle", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Rehadle)
            Me.columnRehandled_By = New Global.System.Data.DataColumn("Rehandled_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRehandled_By)
            Me.columnDate_Measurement_LLI_1 = New Global.System.Data.DataColumn("Date_Measurement_LLI_1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Measurement_LLI_1)
            Me.columnDetector_2_Measurement_LLI_1 = New Global.System.Data.DataColumn("Detector_2_Measurement_LLI_1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetector_2_Measurement_LLI_1)
            Me.columnDetector_3_Measurement_LLI_1 = New Global.System.Data.DataColumn("Detector_3_Measurement_LLI_1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetector_3_Measurement_LLI_1)
            Me.columnDetector_4_Measurement_LLI_1 = New Global.System.Data.DataColumn("Detector_4_Measurement_LLI_1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetector_4_Measurement_LLI_1)
            Me.columnPaper_Log_LLI_1_Number = New Global.System.Data.DataColumn("Paper_Log_LLI_1_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaper_Log_LLI_1_Number)
            Me.columnMeasured_LLI_1_By = New Global.System.Data.DataColumn("Measured_LLI_1_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasured_LLI_1_By)
            Me.columnDate_Measurement_LLI_2 = New Global.System.Data.DataColumn("Date_Measurement_LLI_2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Measurement_LLI_2)
            Me.columnDetector_2_Measurement_LLI_2 = New Global.System.Data.DataColumn("Detector_2_Measurement_LLI_2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetector_2_Measurement_LLI_2)
            Me.columnDetector_3_Measurement_LLI_2 = New Global.System.Data.DataColumn("Detector_3_Measurement_LLI_2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetector_3_Measurement_LLI_2)
            Me.columnDetector_4_Measurement_LLI_2 = New Global.System.Data.DataColumn("Detector_4_Measurement_LLI_2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetector_4_Measurement_LLI_2)
            Me.columnPaper_Log_LLI_2_Number = New Global.System.Data.DataColumn("Paper_Log_LLI_2_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaper_Log_LLI_2_Number)
            Me.columnMeasured_LLI_2_By = New Global.System.Data.DataColumn("Measured_LLI_2_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasured_LLI_2_By)
            Me.columnDetector_1_Measurement_LLI_1 = New Global.System.Data.DataColumn("Detector_1_Measurement_LLI_1", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetector_1_Measurement_LLI_1)
            Me.columnDetector_1_Measurement_LLI_2 = New Global.System.Data.DataColumn("Detector_1_Measurement_LLI_2", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetector_1_Measurement_LLI_2)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCountry_Code, Me.columnClient_ID, Me.columnYear, Me.columnSample_Set_ID, Me.columnSample_Set_Index, Me.columnSample_ID}, true))
            Me.columnCountry_Code.AllowDBNull = false
            Me.columnCountry_Code.MaxLength = 2
            Me.columnClient_ID.AllowDBNull = false
            Me.columnClient_ID.MaxLength = 2
            Me.columnYear.AllowDBNull = false
            Me.columnYear.MaxLength = 2
            Me.columnSample_Set_ID.AllowDBNull = false
            Me.columnSample_Set_ID.MaxLength = 10
            Me.columnSample_Set_Index.AllowDBNull = false
            Me.columnSample_Set_Index.MaxLength = 2
            Me.columnSample_ID.AllowDBNull = false
            Me.columnSample_ID.MaxLength = 3
            Me.columnDate_Start.AllowDBNull = false
            Me.columnIrradiated_By.MaxLength = 25
            Me.columnRehandled_By.MaxLength = 25
            Me.columnPaper_Log_LLI_1_Number.MaxLength = 10
            Me.columnMeasured_LLI_1_By.MaxLength = 25
            Me.columnPaper_Log_LLI_2_Number.MaxLength = 10
            Me.columnMeasured_LLI_2_By.MaxLength = 25
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_LLI_Irradiation_LogRow() As table_LLI_Irradiation_LogRow
            Return CType(Me.NewRow,table_LLI_Irradiation_LogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_LLI_Irradiation_LogRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_LLI_Irradiation_LogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_LLI_Irradiation_LogRowChangedEvent) Is Nothing) Then
                RaiseEvent table_LLI_Irradiation_LogRowChanged(Me, New table_LLI_Irradiation_LogRowChangeEvent(CType(e.Row,table_LLI_Irradiation_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_LLI_Irradiation_LogRowChangingEvent) Is Nothing) Then
                RaiseEvent table_LLI_Irradiation_LogRowChanging(Me, New table_LLI_Irradiation_LogRowChangeEvent(CType(e.Row,table_LLI_Irradiation_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_LLI_Irradiation_LogRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_LLI_Irradiation_LogRowDeleted(Me, New table_LLI_Irradiation_LogRowChangeEvent(CType(e.Row,table_LLI_Irradiation_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_LLI_Irradiation_LogRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_LLI_Irradiation_LogRowDeleting(Me, New table_LLI_Irradiation_LogRowChangeEvent(CType(e.Row,table_LLI_Irradiation_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_LLI_Irradiation_LogRow(ByVal row As table_LLI_Irradiation_LogRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_LLI_Irradiation_LogDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_MonitorDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_MonitorRow)
        
        Private columnMonitor_Set_Name As Global.System.Data.DataColumn
        
        Private columnMonitor_Set_Number As Global.System.Data.DataColumn
        
        Private columnMonitor_Set_Weight As Global.System.Data.DataColumn
        
        Private columnMonitor_Number As Global.System.Data.DataColumn
        
        Private columnMonitor_SLI_Weight As Global.System.Data.DataColumn
        
        Private columnMonitor_SLI_Date_Start As Global.System.Data.DataColumn
        
        Private columnMonitor_SLI_Not_In_Use As Global.System.Data.DataColumn
        
        Private columnMonitor_LLI_Weight As Global.System.Data.DataColumn
        
        Private columnMonitor_LLI_Date_Start As Global.System.Data.DataColumn
        
        Private columnMonitor_LLI_Not_In_Use As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_Monitor"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Monitor_Set_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonitor_Set_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Monitor_Set_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonitor_Set_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Monitor_Set_WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonitor_Set_Weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Monitor_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonitor_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Monitor_SLI_WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonitor_SLI_Weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Monitor_SLI_Date_StartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonitor_SLI_Date_Start
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Monitor_SLI_Not_In_UseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonitor_SLI_Not_In_Use
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Monitor_LLI_WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonitor_LLI_Weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Monitor_LLI_Date_StartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonitor_LLI_Date_Start
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Monitor_LLI_Not_In_UseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonitor_LLI_Not_In_Use
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_MonitorRow
            Get
                Return CType(Me.Rows(index),table_MonitorRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_MonitorRowChanging As table_MonitorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_MonitorRowChanged As table_MonitorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_MonitorRowDeleting As table_MonitorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_MonitorRowDeleted As table_MonitorRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_MonitorRow(ByVal row As table_MonitorRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_MonitorRow(ByVal Monitor_Set_Name As String, ByVal Monitor_Set_Number As String, ByVal Monitor_Set_Weight As Single, ByVal Monitor_Number As String, ByVal Monitor_SLI_Weight As Single, ByVal Monitor_SLI_Date_Start As Date, ByVal Monitor_SLI_Not_In_Use As Boolean, ByVal Monitor_LLI_Weight As Single, ByVal Monitor_LLI_Date_Start As Date, ByVal Monitor_LLI_Not_In_Use As Boolean) As table_MonitorRow
            Dim rowtable_MonitorRow As table_MonitorRow = CType(Me.NewRow,table_MonitorRow)
            Dim columnValuesArray() As Object = New Object() {Monitor_Set_Name, Monitor_Set_Number, Monitor_Set_Weight, Monitor_Number, Monitor_SLI_Weight, Monitor_SLI_Date_Start, Monitor_SLI_Not_In_Use, Monitor_LLI_Weight, Monitor_LLI_Date_Start, Monitor_LLI_Not_In_Use}
            rowtable_MonitorRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_MonitorRow)
            Return rowtable_MonitorRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByMonitor_Set_NameMonitor_Set_NumberMonitor_Number(ByVal Monitor_Set_Name As String, ByVal Monitor_Set_Number As String, ByVal Monitor_Number As String) As table_MonitorRow
            Return CType(Me.Rows.Find(New Object() {Monitor_Set_Name, Monitor_Set_Number, Monitor_Number}),table_MonitorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_MonitorDataTable = CType(MyBase.Clone,table_MonitorDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_MonitorDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMonitor_Set_Name = MyBase.Columns("Monitor_Set_Name")
            Me.columnMonitor_Set_Number = MyBase.Columns("Monitor_Set_Number")
            Me.columnMonitor_Set_Weight = MyBase.Columns("Monitor_Set_Weight")
            Me.columnMonitor_Number = MyBase.Columns("Monitor_Number")
            Me.columnMonitor_SLI_Weight = MyBase.Columns("Monitor_SLI_Weight")
            Me.columnMonitor_SLI_Date_Start = MyBase.Columns("Monitor_SLI_Date_Start")
            Me.columnMonitor_SLI_Not_In_Use = MyBase.Columns("Monitor_SLI_Not_In_Use")
            Me.columnMonitor_LLI_Weight = MyBase.Columns("Monitor_LLI_Weight")
            Me.columnMonitor_LLI_Date_Start = MyBase.Columns("Monitor_LLI_Date_Start")
            Me.columnMonitor_LLI_Not_In_Use = MyBase.Columns("Monitor_LLI_Not_In_Use")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMonitor_Set_Name = New Global.System.Data.DataColumn("Monitor_Set_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonitor_Set_Name)
            Me.columnMonitor_Set_Number = New Global.System.Data.DataColumn("Monitor_Set_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonitor_Set_Number)
            Me.columnMonitor_Set_Weight = New Global.System.Data.DataColumn("Monitor_Set_Weight", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonitor_Set_Weight)
            Me.columnMonitor_Number = New Global.System.Data.DataColumn("Monitor_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonitor_Number)
            Me.columnMonitor_SLI_Weight = New Global.System.Data.DataColumn("Monitor_SLI_Weight", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonitor_SLI_Weight)
            Me.columnMonitor_SLI_Date_Start = New Global.System.Data.DataColumn("Monitor_SLI_Date_Start", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonitor_SLI_Date_Start)
            Me.columnMonitor_SLI_Not_In_Use = New Global.System.Data.DataColumn("Monitor_SLI_Not_In_Use", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonitor_SLI_Not_In_Use)
            Me.columnMonitor_LLI_Weight = New Global.System.Data.DataColumn("Monitor_LLI_Weight", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonitor_LLI_Weight)
            Me.columnMonitor_LLI_Date_Start = New Global.System.Data.DataColumn("Monitor_LLI_Date_Start", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonitor_LLI_Date_Start)
            Me.columnMonitor_LLI_Not_In_Use = New Global.System.Data.DataColumn("Monitor_LLI_Not_In_Use", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonitor_LLI_Not_In_Use)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnMonitor_Set_Name, Me.columnMonitor_Set_Number, Me.columnMonitor_Number}, true))
            Me.columnMonitor_Set_Name.AllowDBNull = false
            Me.columnMonitor_Set_Name.MaxLength = 5
            Me.columnMonitor_Set_Number.AllowDBNull = false
            Me.columnMonitor_Set_Number.MaxLength = 2
            Me.columnMonitor_Set_Weight.AllowDBNull = false
            Me.columnMonitor_Number.AllowDBNull = false
            Me.columnMonitor_Number.MaxLength = 3
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_MonitorRow() As table_MonitorRow
            Return CType(Me.NewRow,table_MonitorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_MonitorRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_MonitorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_MonitorRowChangedEvent) Is Nothing) Then
                RaiseEvent table_MonitorRowChanged(Me, New table_MonitorRowChangeEvent(CType(e.Row,table_MonitorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_MonitorRowChangingEvent) Is Nothing) Then
                RaiseEvent table_MonitorRowChanging(Me, New table_MonitorRowChangeEvent(CType(e.Row,table_MonitorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_MonitorRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_MonitorRowDeleted(Me, New table_MonitorRowChangeEvent(CType(e.Row,table_MonitorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_MonitorRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_MonitorRowDeleting(Me, New table_MonitorRowChangeEvent(CType(e.Row,table_MonitorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_MonitorRow(ByVal row As table_MonitorRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_MonitorDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_Monitor_SetDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_Monitor_SetRow)
        
        Private columnMonitor_Set_Name As Global.System.Data.DataColumn
        
        Private columnMonitor_Set_Number As Global.System.Data.DataColumn
        
        Private columnMonitor_Set_Type As Global.System.Data.DataColumn
        
        Private columnMonitor_Set_Weight As Global.System.Data.DataColumn
        
        Private columnMonitor_Set_Purchasing_Date As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_Monitor_Set"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Monitor_Set_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonitor_Set_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Monitor_Set_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonitor_Set_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Monitor_Set_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonitor_Set_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Monitor_Set_WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonitor_Set_Weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Monitor_Set_Purchasing_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonitor_Set_Purchasing_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_Monitor_SetRow
            Get
                Return CType(Me.Rows(index),table_Monitor_SetRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Monitor_SetRowChanging As table_Monitor_SetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Monitor_SetRowChanged As table_Monitor_SetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Monitor_SetRowDeleting As table_Monitor_SetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Monitor_SetRowDeleted As table_Monitor_SetRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_Monitor_SetRow(ByVal row As table_Monitor_SetRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_Monitor_SetRow(ByVal Monitor_Set_Name As String, ByVal Monitor_Set_Number As String, ByVal Monitor_Set_Type As String, ByVal Monitor_Set_Weight As Single, ByVal Monitor_Set_Purchasing_Date As Date) As table_Monitor_SetRow
            Dim rowtable_Monitor_SetRow As table_Monitor_SetRow = CType(Me.NewRow,table_Monitor_SetRow)
            Dim columnValuesArray() As Object = New Object() {Monitor_Set_Name, Monitor_Set_Number, Monitor_Set_Type, Monitor_Set_Weight, Monitor_Set_Purchasing_Date}
            rowtable_Monitor_SetRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_Monitor_SetRow)
            Return rowtable_Monitor_SetRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByMonitor_Set_NameMonitor_Set_Number(ByVal Monitor_Set_Name As String, ByVal Monitor_Set_Number As String) As table_Monitor_SetRow
            Return CType(Me.Rows.Find(New Object() {Monitor_Set_Name, Monitor_Set_Number}),table_Monitor_SetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_Monitor_SetDataTable = CType(MyBase.Clone,table_Monitor_SetDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_Monitor_SetDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMonitor_Set_Name = MyBase.Columns("Monitor_Set_Name")
            Me.columnMonitor_Set_Number = MyBase.Columns("Monitor_Set_Number")
            Me.columnMonitor_Set_Type = MyBase.Columns("Monitor_Set_Type")
            Me.columnMonitor_Set_Weight = MyBase.Columns("Monitor_Set_Weight")
            Me.columnMonitor_Set_Purchasing_Date = MyBase.Columns("Monitor_Set_Purchasing_Date")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMonitor_Set_Name = New Global.System.Data.DataColumn("Monitor_Set_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonitor_Set_Name)
            Me.columnMonitor_Set_Number = New Global.System.Data.DataColumn("Monitor_Set_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonitor_Set_Number)
            Me.columnMonitor_Set_Type = New Global.System.Data.DataColumn("Monitor_Set_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonitor_Set_Type)
            Me.columnMonitor_Set_Weight = New Global.System.Data.DataColumn("Monitor_Set_Weight", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonitor_Set_Weight)
            Me.columnMonitor_Set_Purchasing_Date = New Global.System.Data.DataColumn("Monitor_Set_Purchasing_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonitor_Set_Purchasing_Date)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnMonitor_Set_Name, Me.columnMonitor_Set_Number}, true))
            Me.columnMonitor_Set_Name.AllowDBNull = false
            Me.columnMonitor_Set_Name.MaxLength = 5
            Me.columnMonitor_Set_Number.AllowDBNull = false
            Me.columnMonitor_Set_Number.MaxLength = 2
            Me.columnMonitor_Set_Type.AllowDBNull = false
            Me.columnMonitor_Set_Type.MaxLength = 10
            Me.columnMonitor_Set_Weight.AllowDBNull = false
            Me.columnMonitor_Set_Purchasing_Date.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_Monitor_SetRow() As table_Monitor_SetRow
            Return CType(Me.NewRow,table_Monitor_SetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_Monitor_SetRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_Monitor_SetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_Monitor_SetRowChangedEvent) Is Nothing) Then
                RaiseEvent table_Monitor_SetRowChanged(Me, New table_Monitor_SetRowChangeEvent(CType(e.Row,table_Monitor_SetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_Monitor_SetRowChangingEvent) Is Nothing) Then
                RaiseEvent table_Monitor_SetRowChanging(Me, New table_Monitor_SetRowChangeEvent(CType(e.Row,table_Monitor_SetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_Monitor_SetRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_Monitor_SetRowDeleted(Me, New table_Monitor_SetRowChangeEvent(CType(e.Row,table_Monitor_SetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_Monitor_SetRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_Monitor_SetRowDeleting(Me, New table_Monitor_SetRowChangeEvent(CType(e.Row,table_Monitor_SetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_Monitor_SetRow(ByVal row As table_Monitor_SetRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_Monitor_SetDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_SRMDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_SRMRow)
        
        Private columnSRM_Set_Name As Global.System.Data.DataColumn
        
        Private columnSRM_Set_Number As Global.System.Data.DataColumn
        
        Private columnSRM_Set_Weight As Global.System.Data.DataColumn
        
        Private columnSRM_Number As Global.System.Data.DataColumn
        
        Private columnSRM_SLI_Weight As Global.System.Data.DataColumn
        
        Private columnSRM_SLI_Irradiation_Date_1 As Global.System.Data.DataColumn
        
        Private columnSRM_SLI_Irradiation_Date_2 As Global.System.Data.DataColumn
        
        Private columnSRM_SLI_Irradiation_Date_3 As Global.System.Data.DataColumn
        
        Private columnSRM_SLI_Irradiation_Date_4 As Global.System.Data.DataColumn
        
        Private columnSRM_SLI_Irradiation_Date_5 As Global.System.Data.DataColumn
        
        Private columnSRM_SLI_Irradiation_Date_6 As Global.System.Data.DataColumn
        
        Private columnSRM_SLI_Irradiation_Date_7 As Global.System.Data.DataColumn
        
        Private columnSRM_SLI_Irradiation_Date_8 As Global.System.Data.DataColumn
        
        Private columnSRM_SLI_Irradiation_Date_9 As Global.System.Data.DataColumn
        
        Private columnSRM_SLI_Irradiation_Date_10 As Global.System.Data.DataColumn
        
        Private columnSRM_SLI_Not_In_Use As Global.System.Data.DataColumn
        
        Private columnSRM_LLI_Weight As Global.System.Data.DataColumn
        
        Private columnSRM_LLI_Irradiation_Date_1 As Global.System.Data.DataColumn
        
        Private columnSRM_LLI_Irradiation_Date_2 As Global.System.Data.DataColumn
        
        Private columnSRM_LLI_Irradiation_Date_3 As Global.System.Data.DataColumn
        
        Private columnSRM_LLI_Irradiation_Date_4 As Global.System.Data.DataColumn
        
        Private columnSRM_LLI_Irradiation_Date_5 As Global.System.Data.DataColumn
        
        Private columnSRM_LLI_Irradiation_Date_6 As Global.System.Data.DataColumn
        
        Private columnSRM_LLI_Irradiation_Date_7 As Global.System.Data.DataColumn
        
        Private columnSRM_LLI_Irradiation_Date_8 As Global.System.Data.DataColumn
        
        Private columnSRM_LLI_Irradiation_Date_9 As Global.System.Data.DataColumn
        
        Private columnSRM_LLI_Irradiation_Date_10 As Global.System.Data.DataColumn
        
        Private columnSRM_LLI_Not_In_Use As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_SRM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_Set_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_Set_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_Set_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_Set_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_Set_WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_Set_Weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_SLI_WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_SLI_Weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_SLI_Irradiation_Date_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_SLI_Irradiation_Date_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_SLI_Irradiation_Date_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_SLI_Irradiation_Date_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_SLI_Irradiation_Date_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_SLI_Irradiation_Date_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_SLI_Irradiation_Date_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_SLI_Irradiation_Date_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_SLI_Irradiation_Date_5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_SLI_Irradiation_Date_5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_SLI_Irradiation_Date_6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_SLI_Irradiation_Date_6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_SLI_Irradiation_Date_7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_SLI_Irradiation_Date_7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_SLI_Irradiation_Date_8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_SLI_Irradiation_Date_8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_SLI_Irradiation_Date_9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_SLI_Irradiation_Date_9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_SLI_Irradiation_Date_10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_SLI_Irradiation_Date_10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_SLI_Not_In_UseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_SLI_Not_In_Use
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_LLI_WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_LLI_Weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_LLI_Irradiation_Date_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_LLI_Irradiation_Date_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_LLI_Irradiation_Date_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_LLI_Irradiation_Date_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_LLI_Irradiation_Date_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_LLI_Irradiation_Date_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_LLI_Irradiation_Date_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_LLI_Irradiation_Date_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_LLI_Irradiation_Date_5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_LLI_Irradiation_Date_5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_LLI_Irradiation_Date_6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_LLI_Irradiation_Date_6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_LLI_Irradiation_Date_7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_LLI_Irradiation_Date_7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_LLI_Irradiation_Date_8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_LLI_Irradiation_Date_8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_LLI_Irradiation_Date_9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_LLI_Irradiation_Date_9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_LLI_Irradiation_Date_10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_LLI_Irradiation_Date_10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_LLI_Not_In_UseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_LLI_Not_In_Use
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_SRMRow
            Get
                Return CType(Me.Rows(index),table_SRMRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SRMRowChanging As table_SRMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SRMRowChanged As table_SRMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SRMRowDeleting As table_SRMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SRMRowDeleted As table_SRMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_SRMRow(ByVal row As table_SRMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_SRMRow( _
                    ByVal SRM_Set_Name As String,  _
                    ByVal SRM_Set_Number As String,  _
                    ByVal SRM_Set_Weight As Single,  _
                    ByVal SRM_Number As String,  _
                    ByVal SRM_SLI_Weight As Single,  _
                    ByVal SRM_SLI_Irradiation_Date_1 As Date,  _
                    ByVal SRM_SLI_Irradiation_Date_2 As Date,  _
                    ByVal SRM_SLI_Irradiation_Date_3 As Date,  _
                    ByVal SRM_SLI_Irradiation_Date_4 As Date,  _
                    ByVal SRM_SLI_Irradiation_Date_5 As Date,  _
                    ByVal SRM_SLI_Irradiation_Date_6 As Date,  _
                    ByVal SRM_SLI_Irradiation_Date_7 As Date,  _
                    ByVal SRM_SLI_Irradiation_Date_8 As Date,  _
                    ByVal SRM_SLI_Irradiation_Date_9 As Date,  _
                    ByVal SRM_SLI_Irradiation_Date_10 As Date,  _
                    ByVal SRM_SLI_Not_In_Use As Boolean,  _
                    ByVal SRM_LLI_Weight As Single,  _
                    ByVal SRM_LLI_Irradiation_Date_1 As Date,  _
                    ByVal SRM_LLI_Irradiation_Date_2 As Date,  _
                    ByVal SRM_LLI_Irradiation_Date_3 As Date,  _
                    ByVal SRM_LLI_Irradiation_Date_4 As Date,  _
                    ByVal SRM_LLI_Irradiation_Date_5 As Date,  _
                    ByVal SRM_LLI_Irradiation_Date_6 As Date,  _
                    ByVal SRM_LLI_Irradiation_Date_7 As Date,  _
                    ByVal SRM_LLI_Irradiation_Date_8 As Date,  _
                    ByVal SRM_LLI_Irradiation_Date_9 As Date,  _
                    ByVal SRM_LLI_Irradiation_Date_10 As Date,  _
                    ByVal SRM_LLI_Not_In_Use As Boolean) As table_SRMRow
            Dim rowtable_SRMRow As table_SRMRow = CType(Me.NewRow,table_SRMRow)
            Dim columnValuesArray() As Object = New Object() {SRM_Set_Name, SRM_Set_Number, SRM_Set_Weight, SRM_Number, SRM_SLI_Weight, SRM_SLI_Irradiation_Date_1, SRM_SLI_Irradiation_Date_2, SRM_SLI_Irradiation_Date_3, SRM_SLI_Irradiation_Date_4, SRM_SLI_Irradiation_Date_5, SRM_SLI_Irradiation_Date_6, SRM_SLI_Irradiation_Date_7, SRM_SLI_Irradiation_Date_8, SRM_SLI_Irradiation_Date_9, SRM_SLI_Irradiation_Date_10, SRM_SLI_Not_In_Use, SRM_LLI_Weight, SRM_LLI_Irradiation_Date_1, SRM_LLI_Irradiation_Date_2, SRM_LLI_Irradiation_Date_3, SRM_LLI_Irradiation_Date_4, SRM_LLI_Irradiation_Date_5, SRM_LLI_Irradiation_Date_6, SRM_LLI_Irradiation_Date_7, SRM_LLI_Irradiation_Date_8, SRM_LLI_Irradiation_Date_9, SRM_LLI_Irradiation_Date_10, SRM_LLI_Not_In_Use}
            rowtable_SRMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_SRMRow)
            Return rowtable_SRMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBySRM_Set_NameSRM_Set_NumberSRM_Number(ByVal SRM_Set_Name As String, ByVal SRM_Set_Number As String, ByVal SRM_Number As String) As table_SRMRow
            Return CType(Me.Rows.Find(New Object() {SRM_Set_Name, SRM_Set_Number, SRM_Number}),table_SRMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_SRMDataTable = CType(MyBase.Clone,table_SRMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_SRMDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSRM_Set_Name = MyBase.Columns("SRM_Set_Name")
            Me.columnSRM_Set_Number = MyBase.Columns("SRM_Set_Number")
            Me.columnSRM_Set_Weight = MyBase.Columns("SRM_Set_Weight")
            Me.columnSRM_Number = MyBase.Columns("SRM_Number")
            Me.columnSRM_SLI_Weight = MyBase.Columns("SRM_SLI_Weight")
            Me.columnSRM_SLI_Irradiation_Date_1 = MyBase.Columns("SRM_SLI_Irradiation_Date_1")
            Me.columnSRM_SLI_Irradiation_Date_2 = MyBase.Columns("SRM_SLI_Irradiation_Date_2")
            Me.columnSRM_SLI_Irradiation_Date_3 = MyBase.Columns("SRM_SLI_Irradiation_Date_3")
            Me.columnSRM_SLI_Irradiation_Date_4 = MyBase.Columns("SRM_SLI_Irradiation_Date_4")
            Me.columnSRM_SLI_Irradiation_Date_5 = MyBase.Columns("SRM_SLI_Irradiation_Date_5")
            Me.columnSRM_SLI_Irradiation_Date_6 = MyBase.Columns("SRM_SLI_Irradiation_Date_6")
            Me.columnSRM_SLI_Irradiation_Date_7 = MyBase.Columns("SRM_SLI_Irradiation_Date_7")
            Me.columnSRM_SLI_Irradiation_Date_8 = MyBase.Columns("SRM_SLI_Irradiation_Date_8")
            Me.columnSRM_SLI_Irradiation_Date_9 = MyBase.Columns("SRM_SLI_Irradiation_Date_9")
            Me.columnSRM_SLI_Irradiation_Date_10 = MyBase.Columns("SRM_SLI_Irradiation_Date_10")
            Me.columnSRM_SLI_Not_In_Use = MyBase.Columns("SRM_SLI_Not_In_Use")
            Me.columnSRM_LLI_Weight = MyBase.Columns("SRM_LLI_Weight")
            Me.columnSRM_LLI_Irradiation_Date_1 = MyBase.Columns("SRM_LLI_Irradiation_Date_1")
            Me.columnSRM_LLI_Irradiation_Date_2 = MyBase.Columns("SRM_LLI_Irradiation_Date_2")
            Me.columnSRM_LLI_Irradiation_Date_3 = MyBase.Columns("SRM_LLI_Irradiation_Date_3")
            Me.columnSRM_LLI_Irradiation_Date_4 = MyBase.Columns("SRM_LLI_Irradiation_Date_4")
            Me.columnSRM_LLI_Irradiation_Date_5 = MyBase.Columns("SRM_LLI_Irradiation_Date_5")
            Me.columnSRM_LLI_Irradiation_Date_6 = MyBase.Columns("SRM_LLI_Irradiation_Date_6")
            Me.columnSRM_LLI_Irradiation_Date_7 = MyBase.Columns("SRM_LLI_Irradiation_Date_7")
            Me.columnSRM_LLI_Irradiation_Date_8 = MyBase.Columns("SRM_LLI_Irradiation_Date_8")
            Me.columnSRM_LLI_Irradiation_Date_9 = MyBase.Columns("SRM_LLI_Irradiation_Date_9")
            Me.columnSRM_LLI_Irradiation_Date_10 = MyBase.Columns("SRM_LLI_Irradiation_Date_10")
            Me.columnSRM_LLI_Not_In_Use = MyBase.Columns("SRM_LLI_Not_In_Use")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSRM_Set_Name = New Global.System.Data.DataColumn("SRM_Set_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_Set_Name)
            Me.columnSRM_Set_Number = New Global.System.Data.DataColumn("SRM_Set_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_Set_Number)
            Me.columnSRM_Set_Weight = New Global.System.Data.DataColumn("SRM_Set_Weight", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_Set_Weight)
            Me.columnSRM_Number = New Global.System.Data.DataColumn("SRM_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_Number)
            Me.columnSRM_SLI_Weight = New Global.System.Data.DataColumn("SRM_SLI_Weight", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_SLI_Weight)
            Me.columnSRM_SLI_Irradiation_Date_1 = New Global.System.Data.DataColumn("SRM_SLI_Irradiation_Date_1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_SLI_Irradiation_Date_1)
            Me.columnSRM_SLI_Irradiation_Date_2 = New Global.System.Data.DataColumn("SRM_SLI_Irradiation_Date_2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_SLI_Irradiation_Date_2)
            Me.columnSRM_SLI_Irradiation_Date_3 = New Global.System.Data.DataColumn("SRM_SLI_Irradiation_Date_3", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_SLI_Irradiation_Date_3)
            Me.columnSRM_SLI_Irradiation_Date_4 = New Global.System.Data.DataColumn("SRM_SLI_Irradiation_Date_4", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_SLI_Irradiation_Date_4)
            Me.columnSRM_SLI_Irradiation_Date_5 = New Global.System.Data.DataColumn("SRM_SLI_Irradiation_Date_5", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_SLI_Irradiation_Date_5)
            Me.columnSRM_SLI_Irradiation_Date_6 = New Global.System.Data.DataColumn("SRM_SLI_Irradiation_Date_6", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_SLI_Irradiation_Date_6)
            Me.columnSRM_SLI_Irradiation_Date_7 = New Global.System.Data.DataColumn("SRM_SLI_Irradiation_Date_7", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_SLI_Irradiation_Date_7)
            Me.columnSRM_SLI_Irradiation_Date_8 = New Global.System.Data.DataColumn("SRM_SLI_Irradiation_Date_8", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_SLI_Irradiation_Date_8)
            Me.columnSRM_SLI_Irradiation_Date_9 = New Global.System.Data.DataColumn("SRM_SLI_Irradiation_Date_9", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_SLI_Irradiation_Date_9)
            Me.columnSRM_SLI_Irradiation_Date_10 = New Global.System.Data.DataColumn("SRM_SLI_Irradiation_Date_10", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_SLI_Irradiation_Date_10)
            Me.columnSRM_SLI_Not_In_Use = New Global.System.Data.DataColumn("SRM_SLI_Not_In_Use", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_SLI_Not_In_Use)
            Me.columnSRM_LLI_Weight = New Global.System.Data.DataColumn("SRM_LLI_Weight", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_LLI_Weight)
            Me.columnSRM_LLI_Irradiation_Date_1 = New Global.System.Data.DataColumn("SRM_LLI_Irradiation_Date_1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_LLI_Irradiation_Date_1)
            Me.columnSRM_LLI_Irradiation_Date_2 = New Global.System.Data.DataColumn("SRM_LLI_Irradiation_Date_2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_LLI_Irradiation_Date_2)
            Me.columnSRM_LLI_Irradiation_Date_3 = New Global.System.Data.DataColumn("SRM_LLI_Irradiation_Date_3", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_LLI_Irradiation_Date_3)
            Me.columnSRM_LLI_Irradiation_Date_4 = New Global.System.Data.DataColumn("SRM_LLI_Irradiation_Date_4", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_LLI_Irradiation_Date_4)
            Me.columnSRM_LLI_Irradiation_Date_5 = New Global.System.Data.DataColumn("SRM_LLI_Irradiation_Date_5", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_LLI_Irradiation_Date_5)
            Me.columnSRM_LLI_Irradiation_Date_6 = New Global.System.Data.DataColumn("SRM_LLI_Irradiation_Date_6", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_LLI_Irradiation_Date_6)
            Me.columnSRM_LLI_Irradiation_Date_7 = New Global.System.Data.DataColumn("SRM_LLI_Irradiation_Date_7", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_LLI_Irradiation_Date_7)
            Me.columnSRM_LLI_Irradiation_Date_8 = New Global.System.Data.DataColumn("SRM_LLI_Irradiation_Date_8", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_LLI_Irradiation_Date_8)
            Me.columnSRM_LLI_Irradiation_Date_9 = New Global.System.Data.DataColumn("SRM_LLI_Irradiation_Date_9", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_LLI_Irradiation_Date_9)
            Me.columnSRM_LLI_Irradiation_Date_10 = New Global.System.Data.DataColumn("SRM_LLI_Irradiation_Date_10", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_LLI_Irradiation_Date_10)
            Me.columnSRM_LLI_Not_In_Use = New Global.System.Data.DataColumn("SRM_LLI_Not_In_Use", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_LLI_Not_In_Use)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSRM_Set_Name, Me.columnSRM_Set_Number, Me.columnSRM_Number}, true))
            Me.columnSRM_Set_Name.AllowDBNull = false
            Me.columnSRM_Set_Name.MaxLength = 5
            Me.columnSRM_Set_Number.AllowDBNull = false
            Me.columnSRM_Set_Number.MaxLength = 2
            Me.columnSRM_Set_Weight.AllowDBNull = false
            Me.columnSRM_Number.AllowDBNull = false
            Me.columnSRM_Number.MaxLength = 3
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_SRMRow() As table_SRMRow
            Return CType(Me.NewRow,table_SRMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_SRMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_SRMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_SRMRowChangedEvent) Is Nothing) Then
                RaiseEvent table_SRMRowChanged(Me, New table_SRMRowChangeEvent(CType(e.Row,table_SRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_SRMRowChangingEvent) Is Nothing) Then
                RaiseEvent table_SRMRowChanging(Me, New table_SRMRowChangeEvent(CType(e.Row,table_SRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_SRMRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_SRMRowDeleted(Me, New table_SRMRowChangeEvent(CType(e.Row,table_SRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_SRMRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_SRMRowDeleting(Me, New table_SRMRowChangeEvent(CType(e.Row,table_SRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_SRMRow(ByVal row As table_SRMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_SRMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_SRM_SetDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_SRM_SetRow)
        
        Private columnSRM_Set_Name As Global.System.Data.DataColumn
        
        Private columnSRM_Set_Number As Global.System.Data.DataColumn
        
        Private columnSRM_Set_Type As Global.System.Data.DataColumn
        
        Private columnSRM_Set_Weight As Global.System.Data.DataColumn
        
        Private columnSRM_Set_Purchasing_Date As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_SRM_Set"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_Set_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_Set_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_Set_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_Set_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_Set_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_Set_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_Set_WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_Set_Weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SRM_Set_Purchasing_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRM_Set_Purchasing_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_SRM_SetRow
            Get
                Return CType(Me.Rows(index),table_SRM_SetRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SRM_SetRowChanging As table_SRM_SetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SRM_SetRowChanged As table_SRM_SetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SRM_SetRowDeleting As table_SRM_SetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_SRM_SetRowDeleted As table_SRM_SetRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_SRM_SetRow(ByVal row As table_SRM_SetRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_SRM_SetRow(ByVal SRM_Set_Name As String, ByVal SRM_Set_Number As String, ByVal SRM_Set_Type As String, ByVal SRM_Set_Weight As Single, ByVal SRM_Set_Purchasing_Date As Date) As table_SRM_SetRow
            Dim rowtable_SRM_SetRow As table_SRM_SetRow = CType(Me.NewRow,table_SRM_SetRow)
            Dim columnValuesArray() As Object = New Object() {SRM_Set_Name, SRM_Set_Number, SRM_Set_Type, SRM_Set_Weight, SRM_Set_Purchasing_Date}
            rowtable_SRM_SetRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_SRM_SetRow)
            Return rowtable_SRM_SetRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBySRM_Set_NameSRM_Set_Number(ByVal SRM_Set_Name As String, ByVal SRM_Set_Number As String) As table_SRM_SetRow
            Return CType(Me.Rows.Find(New Object() {SRM_Set_Name, SRM_Set_Number}),table_SRM_SetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_SRM_SetDataTable = CType(MyBase.Clone,table_SRM_SetDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_SRM_SetDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSRM_Set_Name = MyBase.Columns("SRM_Set_Name")
            Me.columnSRM_Set_Number = MyBase.Columns("SRM_Set_Number")
            Me.columnSRM_Set_Type = MyBase.Columns("SRM_Set_Type")
            Me.columnSRM_Set_Weight = MyBase.Columns("SRM_Set_Weight")
            Me.columnSRM_Set_Purchasing_Date = MyBase.Columns("SRM_Set_Purchasing_Date")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSRM_Set_Name = New Global.System.Data.DataColumn("SRM_Set_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_Set_Name)
            Me.columnSRM_Set_Number = New Global.System.Data.DataColumn("SRM_Set_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_Set_Number)
            Me.columnSRM_Set_Type = New Global.System.Data.DataColumn("SRM_Set_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_Set_Type)
            Me.columnSRM_Set_Weight = New Global.System.Data.DataColumn("SRM_Set_Weight", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_Set_Weight)
            Me.columnSRM_Set_Purchasing_Date = New Global.System.Data.DataColumn("SRM_Set_Purchasing_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRM_Set_Purchasing_Date)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSRM_Set_Name, Me.columnSRM_Set_Number}, true))
            Me.columnSRM_Set_Name.AllowDBNull = false
            Me.columnSRM_Set_Name.MaxLength = 5
            Me.columnSRM_Set_Number.AllowDBNull = false
            Me.columnSRM_Set_Number.MaxLength = 2
            Me.columnSRM_Set_Type.AllowDBNull = false
            Me.columnSRM_Set_Type.MaxLength = 15
            Me.columnSRM_Set_Weight.AllowDBNull = false
            Me.columnSRM_Set_Purchasing_Date.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_SRM_SetRow() As table_SRM_SetRow
            Return CType(Me.NewRow,table_SRM_SetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_SRM_SetRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_SRM_SetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_SRM_SetRowChangedEvent) Is Nothing) Then
                RaiseEvent table_SRM_SetRowChanged(Me, New table_SRM_SetRowChangeEvent(CType(e.Row,table_SRM_SetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_SRM_SetRowChangingEvent) Is Nothing) Then
                RaiseEvent table_SRM_SetRowChanging(Me, New table_SRM_SetRowChangeEvent(CType(e.Row,table_SRM_SetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_SRM_SetRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_SRM_SetRowDeleted(Me, New table_SRM_SetRowChangeEvent(CType(e.Row,table_SRM_SetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_SRM_SetRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_SRM_SetRowDeleting(Me, New table_SRM_SetRowChangeEvent(CType(e.Row,table_SRM_SetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_SRM_SetRow(ByVal row As table_SRM_SetRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_SRM_SetDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class table_Sample_NAA_ResultsDataTable
        Inherits Global.System.Data.TypedTableBase(Of table_Sample_NAA_ResultsRow)
        
        Private columnR_U_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_U_Error As Global.System.Data.DataColumn
        
        Private columnR_U_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_U_Fact As Global.System.Data.DataColumn
        
        Private columnR_Th_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Th_Error As Global.System.Data.DataColumn
        
        Private columnR_Th_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Th_Fact As Global.System.Data.DataColumn
        
        Private columnR_Hg_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Hg_Error As Global.System.Data.DataColumn
        
        Private columnR_Hg_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Hg_Fact As Global.System.Data.DataColumn
        
        Private columnR_Au_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Au_Error As Global.System.Data.DataColumn
        
        Private columnR_Au_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Au_Fact As Global.System.Data.DataColumn
        
        Private columnR_Pt_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Pt_Error As Global.System.Data.DataColumn
        
        Private columnR_Pt_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Pt_Fact As Global.System.Data.DataColumn
        
        Private columnR_Ir_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Ir_Error As Global.System.Data.DataColumn
        
        Private columnR_Ir_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Ir_Fact As Global.System.Data.DataColumn
        
        Private columnR_Re_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Re_Error As Global.System.Data.DataColumn
        
        Private columnR_Re_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Re_Fact As Global.System.Data.DataColumn
        
        Private columnR_W_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_W_Error As Global.System.Data.DataColumn
        
        Private columnR_W_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_W_Fact As Global.System.Data.DataColumn
        
        Private columnR_Ta_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Ta_Error As Global.System.Data.DataColumn
        
        Private columnR_Ta_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Ta_Fact As Global.System.Data.DataColumn
        
        Private columnR_Hf_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Hf_Error As Global.System.Data.DataColumn
        
        Private columnR_Hf_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Hf_Fact As Global.System.Data.DataColumn
        
        Private columnR_Lu_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Lu_Error As Global.System.Data.DataColumn
        
        Private columnR_Lu_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Lu_Fact As Global.System.Data.DataColumn
        
        Private columnR_Yb_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Yb_Error As Global.System.Data.DataColumn
        
        Private columnR_Yb_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Yb_Fact As Global.System.Data.DataColumn
        
        Private columnR_Tm_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Tm_Error As Global.System.Data.DataColumn
        
        Private columnR_Tm_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Tm_Fact As Global.System.Data.DataColumn
        
        Private columnR_Er_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Er_Error As Global.System.Data.DataColumn
        
        Private columnR_Er_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Er_Fact As Global.System.Data.DataColumn
        
        Private columnR_Dy_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Dy_Error As Global.System.Data.DataColumn
        
        Private columnR_Dy_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Dy_Fact As Global.System.Data.DataColumn
        
        Private columnR_Tb_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Tb_Error As Global.System.Data.DataColumn
        
        Private columnR_Tb_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Tb_Fact As Global.System.Data.DataColumn
        
        Private columnR_Gd_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Gd_Error As Global.System.Data.DataColumn
        
        Private columnR_Gd_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Gd_Fact As Global.System.Data.DataColumn
        
        Private columnR_Eu_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Eu_Error As Global.System.Data.DataColumn
        
        Private columnR_Eu_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Eu_Fact As Global.System.Data.DataColumn
        
        Private columnR_Sm_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Sm_Error As Global.System.Data.DataColumn
        
        Private columnR_Sm_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Sm_Fact As Global.System.Data.DataColumn
        
        Private columnR_Nd_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Nd_Error As Global.System.Data.DataColumn
        
        Private columnR_Nd_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Nd_Fact As Global.System.Data.DataColumn
        
        Private columnR_Ce_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Ce_Error As Global.System.Data.DataColumn
        
        Private columnR_Ce_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Ce_Fact As Global.System.Data.DataColumn
        
        Private columnR_La_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_La_Error As Global.System.Data.DataColumn
        
        Private columnR_La_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_La_Fact As Global.System.Data.DataColumn
        
        Private columnR_Ba_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Ba_Error As Global.System.Data.DataColumn
        
        Private columnR_Ba_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Ba_Fact As Global.System.Data.DataColumn
        
        Private columnR_Cs_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Cs_Error As Global.System.Data.DataColumn
        
        Private columnR_Cs_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Cs_Fact As Global.System.Data.DataColumn
        
        Private columnR_I_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_I_Error As Global.System.Data.DataColumn
        
        Private columnR_I_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_I_Fact As Global.System.Data.DataColumn
        
        Private columnR_Sb_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Sb_Error As Global.System.Data.DataColumn
        
        Private columnR_Sb_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Sb_Fact As Global.System.Data.DataColumn
        
        Private columnR_Sn_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Sn_Error As Global.System.Data.DataColumn
        
        Private columnR_Sn_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Sn_Fact As Global.System.Data.DataColumn
        
        Private columnR_In_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_In_Error As Global.System.Data.DataColumn
        
        Private columnR_In_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_In_Fact As Global.System.Data.DataColumn
        
        Private columnR_Cd_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Cd_Error As Global.System.Data.DataColumn
        
        Private columnR_Cd_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Cd_Fact As Global.System.Data.DataColumn
        
        Private columnR_Ag_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Ag_Error As Global.System.Data.DataColumn
        
        Private columnR_Ag_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Ag_Fact As Global.System.Data.DataColumn
        
        Private columnR_Ru_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Ru_Error As Global.System.Data.DataColumn
        
        Private columnR_Ru_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Ru_Fact As Global.System.Data.DataColumn
        
        Private columnR_Mo_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Mo_Error As Global.System.Data.DataColumn
        
        Private columnR_Mo_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Mo_Fact As Global.System.Data.DataColumn
        
        Private columnR_Nb_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Nb_Error As Global.System.Data.DataColumn
        
        Private columnR_Nb_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Zr_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Nb_Fact As Global.System.Data.DataColumn
        
        Private columnR_Zr_Error As Global.System.Data.DataColumn
        
        Private columnR_Zr_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Zr_Fact As Global.System.Data.DataColumn
        
        Private columnR_Y_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Y_Error As Global.System.Data.DataColumn
        
        Private columnR_Y_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Y_Fact As Global.System.Data.DataColumn
        
        Private columnR_Sr_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Sr_Error As Global.System.Data.DataColumn
        
        Private columnR_Sr_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Rb_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Sr_Fact As Global.System.Data.DataColumn
        
        Private columnR_Rb_Error As Global.System.Data.DataColumn
        
        Private columnR_Rb_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Rb_Fact As Global.System.Data.DataColumn
        
        Private columnR_Br_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Br_Error As Global.System.Data.DataColumn
        
        Private columnR_Br_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Br_Fact As Global.System.Data.DataColumn
        
        Private columnR_Se_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Se_Error As Global.System.Data.DataColumn
        
        Private columnR_Se_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Se_Fact As Global.System.Data.DataColumn
        
        Private columnR_As_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_As_Error As Global.System.Data.DataColumn
        
        Private columnR_As_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_As_Fact As Global.System.Data.DataColumn
        
        Private columnR_Ga_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Ga_Error As Global.System.Data.DataColumn
        
        Private columnR_Ga_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Ga_Fact As Global.System.Data.DataColumn
        
        Private columnR_Zn_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Zn_Error As Global.System.Data.DataColumn
        
        Private columnR_Zn_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Zn_Fact As Global.System.Data.DataColumn
        
        Private columnR_Cu_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Cu_Error As Global.System.Data.DataColumn
        
        Private columnR_Cu_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Cu_Fact As Global.System.Data.DataColumn
        
        Private columnR_Co_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Co_Error As Global.System.Data.DataColumn
        
        Private columnR_Co_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Co_Fact As Global.System.Data.DataColumn
        
        Private columnR_Fe_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Fe_Error As Global.System.Data.DataColumn
        
        Private columnR_Fe_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Fe_Fact As Global.System.Data.DataColumn
        
        Private columnR_Mn_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Mn_Error As Global.System.Data.DataColumn
        
        Private columnR_F_Fact As Global.System.Data.DataColumn
        
        Private columnR_F_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_F_Error As Global.System.Data.DataColumn
        
        Private columnR_F_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Na_Fact As Global.System.Data.DataColumn
        
        Private columnR_Na_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Na_Error As Global.System.Data.DataColumn
        
        Private columnR_Na_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Mg_Fact As Global.System.Data.DataColumn
        
        Private columnR_Mg_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Mg_Error As Global.System.Data.DataColumn
        
        Private columnR_Mg_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Al_Fact As Global.System.Data.DataColumn
        
        Private columnR_Al_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Al_Error As Global.System.Data.DataColumn
        
        Private columnR_Si_Fact As Global.System.Data.DataColumn
        
        Private columnR_Al_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Si_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Si_Error As Global.System.Data.DataColumn
        
        Private columnR_Si_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_S_Fact As Global.System.Data.DataColumn
        
        Private columnR_S_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_S_Error As Global.System.Data.DataColumn
        
        Private columnR_S_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Cl_Fact As Global.System.Data.DataColumn
        
        Private columnR_Cl_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Cl_Error As Global.System.Data.DataColumn
        
        Private columnR_Cl_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_K_Fact As Global.System.Data.DataColumn
        
        Private columnR_K_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_K_Error As Global.System.Data.DataColumn
        
        Private columnR_K_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Ca_Fact As Global.System.Data.DataColumn
        
        Private columnR_Ca_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Ca_Error As Global.System.Data.DataColumn
        
        Private columnR_Ca_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Sc_Fact As Global.System.Data.DataColumn
        
        Private columnR_Sc_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Sc_Error As Global.System.Data.DataColumn
        
        Private columnR_Sc_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Ti_Fact As Global.System.Data.DataColumn
        
        Private columnR_Ti_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Ti_Error As Global.System.Data.DataColumn
        
        Private columnR_Ti_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_V_Fact As Global.System.Data.DataColumn
        
        Private columnR_V_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_V_Error As Global.System.Data.DataColumn
        
        Private columnR_V_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Cr_Fact As Global.System.Data.DataColumn
        
        Private columnR_Cr_Concentaration As Global.System.Data.DataColumn
        
        Private columnR_Cr_Error As Global.System.Data.DataColumn
        
        Private columnR_Cr_Detection_Limit As Global.System.Data.DataColumn
        
        Private columnR_Mn_Fact As Global.System.Data.DataColumn
        
        Private columnR_Mn_Concentaration As Global.System.Data.DataColumn
        
        Private columnA_Sample_ID As Global.System.Data.DataColumn
        
        Private columnF_Country_Code As Global.System.Data.DataColumn
        
        Private columnF_Client_ID As Global.System.Data.DataColumn
        
        Private columnF_Year As Global.System.Data.DataColumn
        
        Private columnF_Sample_Set_ID As Global.System.Data.DataColumn
        
        Private columnF_Sample_Set_Index As Global.System.Data.DataColumn
        
        Private columnR_Processed_By As Global.System.Data.DataColumn
        
        Private columnR_File_Spectrum As Global.System.Data.DataColumn
        
        Private columnA_Client_Sample_ID As Global.System.Data.DataColumn
        
        Private columnA_Latitude As Global.System.Data.DataColumn
        
        Private columnA_Longitude As Global.System.Data.DataColumn
        
        Private columnA_Collection_Place As Global.System.Data.DataColumn
        
        Private columnA_Notes As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "table_Sample_NAA_Results"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_U_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_U_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_U_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_U_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_U_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_U_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_U_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_U_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Th_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Th_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Th_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Th_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Th_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Th_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Th_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Th_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Hg_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Hg_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Hg_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Hg_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Hg_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Hg_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Hg_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Hg_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Au_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Au_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Au_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Au_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Au_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Au_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Au_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Au_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Pt_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Pt_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Pt_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Pt_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Pt_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Pt_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Pt_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Pt_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ir_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ir_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ir_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ir_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ir_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ir_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ir_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ir_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Re_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Re_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Re_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Re_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Re_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Re_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Re_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Re_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_W_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_W_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_W_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_W_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_W_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_W_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_W_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_W_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ta_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ta_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ta_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ta_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ta_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ta_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ta_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ta_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Hf_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Hf_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Hf_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Hf_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Hf_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Hf_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Hf_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Hf_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Lu_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Lu_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Lu_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Lu_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Lu_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Lu_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Lu_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Lu_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Yb_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Yb_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Yb_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Yb_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Yb_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Yb_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Yb_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Yb_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Tm_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Tm_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Tm_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Tm_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Tm_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Tm_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Tm_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Tm_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Er_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Er_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Er_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Er_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Er_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Er_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Er_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Er_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Dy_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Dy_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Dy_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Dy_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Dy_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Dy_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Dy_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Dy_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Tb_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Tb_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Tb_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Tb_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Tb_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Tb_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Tb_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Tb_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Gd_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Gd_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Gd_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Gd_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Gd_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Gd_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Gd_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Gd_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Eu_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Eu_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Eu_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Eu_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Eu_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Eu_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Eu_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Eu_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sm_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sm_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sm_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sm_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sm_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sm_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sm_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sm_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Nd_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Nd_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Nd_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Nd_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Nd_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Nd_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Nd_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Nd_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ce_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ce_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ce_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ce_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ce_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ce_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ce_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ce_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_La_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_La_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_La_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_La_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_La_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_La_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_La_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_La_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ba_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ba_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ba_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ba_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ba_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ba_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ba_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ba_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cs_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cs_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cs_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cs_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cs_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cs_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cs_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cs_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_I_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_I_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_I_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_I_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_I_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_I_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_I_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_I_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sb_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sb_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sb_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sb_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sb_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sb_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sb_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sb_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sn_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sn_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sn_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sn_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sn_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sn_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sn_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sn_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_In_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_In_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_In_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_In_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_In_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_In_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_In_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_In_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cd_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cd_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cd_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cd_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cd_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cd_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cd_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cd_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ag_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ag_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ag_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ag_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ag_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ag_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ag_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ag_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ru_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ru_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ru_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ru_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ru_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ru_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ru_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ru_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Mo_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Mo_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Mo_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Mo_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Mo_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Mo_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Mo_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Mo_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Nb_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Nb_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Nb_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Nb_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Nb_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Nb_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Zr_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Zr_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Nb_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Nb_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Zr_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Zr_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Zr_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Zr_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Zr_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Zr_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Y_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Y_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Y_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Y_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Y_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Y_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Y_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Y_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sr_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sr_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sr_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sr_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sr_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sr_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Rb_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Rb_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sr_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sr_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Rb_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Rb_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Rb_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Rb_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Rb_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Rb_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Br_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Br_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Br_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Br_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Br_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Br_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Br_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Br_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Se_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Se_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Se_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Se_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Se_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Se_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Se_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Se_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_As_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_As_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_As_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_As_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_As_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_As_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_As_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_As_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ga_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ga_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ga_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ga_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ga_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ga_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ga_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ga_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Zn_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Zn_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Zn_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Zn_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Zn_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Zn_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Zn_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Zn_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cu_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cu_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cu_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cu_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cu_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cu_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cu_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cu_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Co_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Co_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Co_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Co_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Co_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Co_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Co_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Co_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Fe_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Fe_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Fe_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Fe_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Fe_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Fe_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Fe_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Fe_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Mn_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Mn_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Mn_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Mn_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_F_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_F_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_F_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_F_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_F_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_F_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_F_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_F_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Na_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Na_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Na_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Na_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Na_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Na_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Na_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Na_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Mg_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Mg_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Mg_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Mg_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Mg_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Mg_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Mg_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Mg_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Al_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Al_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Al_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Al_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Al_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Al_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Si_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Si_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Al_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Al_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Si_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Si_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Si_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Si_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Si_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Si_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_S_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_S_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_S_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_S_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_S_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_S_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_S_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_S_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cl_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cl_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cl_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cl_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cl_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cl_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cl_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cl_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_K_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_K_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_K_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_K_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_K_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_K_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_K_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_K_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ca_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ca_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ca_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ca_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ca_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ca_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ca_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ca_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sc_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sc_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sc_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sc_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sc_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sc_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Sc_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Sc_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ti_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ti_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ti_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ti_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ti_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ti_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Ti_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Ti_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_V_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_V_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_V_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_V_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_V_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_V_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_V_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_V_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cr_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cr_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cr_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cr_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cr_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cr_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Cr_Detection_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Cr_Detection_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Mn_FactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Mn_Fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Mn_ConcentarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Mn_Concentaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Sample_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Sample_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property F_Country_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Country_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property F_Client_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Client_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property F_YearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Year
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property F_Sample_Set_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Sample_Set_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property F_Sample_Set_IndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Sample_Set_Index
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_Processed_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Processed_By
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property R_File_SpectrumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_File_Spectrum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Client_Sample_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Client_Sample_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_LatitudeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Latitude
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_LongitudeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Longitude
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_Collection_PlaceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Collection_Place
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property A_NotesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_Notes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As table_Sample_NAA_ResultsRow
            Get
                Return CType(Me.Rows(index),table_Sample_NAA_ResultsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_NAA_ResultsRowChanging As table_Sample_NAA_ResultsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_NAA_ResultsRowChanged As table_Sample_NAA_ResultsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_NAA_ResultsRowDeleting As table_Sample_NAA_ResultsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event table_Sample_NAA_ResultsRowDeleted As table_Sample_NAA_ResultsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtable_Sample_NAA_ResultsRow(ByVal row As table_Sample_NAA_ResultsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtable_Sample_NAA_ResultsRow( _
                    ByVal R_U_Detection_Limit As Single,  _
                    ByVal R_U_Error As Single,  _
                    ByVal R_U_Concentaration As Single,  _
                    ByVal R_U_Fact As Boolean,  _
                    ByVal R_Th_Detection_Limit As Single,  _
                    ByVal R_Th_Error As Single,  _
                    ByVal R_Th_Concentaration As Single,  _
                    ByVal R_Th_Fact As Boolean,  _
                    ByVal R_Hg_Detection_Limit As Single,  _
                    ByVal R_Hg_Error As Single,  _
                    ByVal R_Hg_Concentaration As Single,  _
                    ByVal R_Hg_Fact As Boolean,  _
                    ByVal R_Au_Detection_Limit As Single,  _
                    ByVal R_Au_Error As Single,  _
                    ByVal R_Au_Concentaration As Single,  _
                    ByVal R_Au_Fact As Boolean,  _
                    ByVal R_Pt_Detection_Limit As Single,  _
                    ByVal R_Pt_Error As Single,  _
                    ByVal R_Pt_Concentaration As Single,  _
                    ByVal R_Pt_Fact As Boolean,  _
                    ByVal R_Ir_Detection_Limit As Single,  _
                    ByVal R_Ir_Error As Single,  _
                    ByVal R_Ir_Concentaration As Single,  _
                    ByVal R_Ir_Fact As Boolean,  _
                    ByVal R_Re_Detection_Limit As Single,  _
                    ByVal R_Re_Error As Single,  _
                    ByVal R_Re_Concentaration As Single,  _
                    ByVal R_Re_Fact As Boolean,  _
                    ByVal R_W_Detection_Limit As Single,  _
                    ByVal R_W_Error As Single,  _
                    ByVal R_W_Concentaration As Single,  _
                    ByVal R_W_Fact As Boolean,  _
                    ByVal R_Ta_Detection_Limit As Single,  _
                    ByVal R_Ta_Error As Single,  _
                    ByVal R_Ta_Concentaration As Single,  _
                    ByVal R_Ta_Fact As Boolean,  _
                    ByVal R_Hf_Detection_Limit As Single,  _
                    ByVal R_Hf_Error As Single,  _
                    ByVal R_Hf_Concentaration As Single,  _
                    ByVal R_Hf_Fact As Boolean,  _
                    ByVal R_Lu_Detection_Limit As Single,  _
                    ByVal R_Lu_Error As Single,  _
                    ByVal R_Lu_Concentaration As Single,  _
                    ByVal R_Lu_Fact As Boolean,  _
                    ByVal R_Yb_Detection_Limit As Single,  _
                    ByVal R_Yb_Error As Single,  _
                    ByVal R_Yb_Concentaration As Single,  _
                    ByVal R_Yb_Fact As Boolean,  _
                    ByVal R_Tm_Detection_Limit As Single,  _
                    ByVal R_Tm_Error As Single,  _
                    ByVal R_Tm_Concentaration As Single,  _
                    ByVal R_Tm_Fact As Boolean,  _
                    ByVal R_Er_Detection_Limit As Single,  _
                    ByVal R_Er_Error As Single,  _
                    ByVal R_Er_Concentaration As Single,  _
                    ByVal R_Er_Fact As Boolean,  _
                    ByVal R_Dy_Detection_Limit As Single,  _
                    ByVal R_Dy_Error As Single,  _
                    ByVal R_Dy_Concentaration As Single,  _
                    ByVal R_Dy_Fact As Boolean,  _
                    ByVal R_Tb_Detection_Limit As Single,  _
                    ByVal R_Tb_Error As Single,  _
                    ByVal R_Tb_Concentaration As Single,  _
                    ByVal R_Tb_Fact As Boolean,  _
                    ByVal R_Gd_Detection_Limit As Single,  _
                    ByVal R_Gd_Error As Single,  _
                    ByVal R_Gd_Concentaration As Single,  _
                    ByVal R_Gd_Fact As Boolean,  _
                    ByVal R_Eu_Detection_Limit As Single,  _
                    ByVal R_Eu_Error As Single,  _
                    ByVal R_Eu_Concentaration As Single,  _
                    ByVal R_Eu_Fact As Boolean,  _
                    ByVal R_Sm_Detection_Limit As Single,  _
                    ByVal R_Sm_Error As Single,  _
                    ByVal R_Sm_Concentaration As Single,  _
                    ByVal R_Sm_Fact As Boolean,  _
                    ByVal R_Nd_Detection_Limit As Single,  _
                    ByVal R_Nd_Error As Single,  _
                    ByVal R_Nd_Concentaration As Single,  _
                    ByVal R_Nd_Fact As Boolean,  _
                    ByVal R_Ce_Detection_Limit As Single,  _
                    ByVal R_Ce_Error As Single,  _
                    ByVal R_Ce_Concentaration As Single,  _
                    ByVal R_Ce_Fact As Boolean,  _
                    ByVal R_La_Detection_Limit As Single,  _
                    ByVal R_La_Error As Single,  _
                    ByVal R_La_Concentaration As Single,  _
                    ByVal R_La_Fact As Boolean,  _
                    ByVal R_Ba_Detection_Limit As Single,  _
                    ByVal R_Ba_Error As Single,  _
                    ByVal R_Ba_Concentaration As Single,  _
                    ByVal R_Ba_Fact As Boolean,  _
                    ByVal R_Cs_Detection_Limit As Single,  _
                    ByVal R_Cs_Error As Single,  _
                    ByVal R_Cs_Concentaration As Single,  _
                    ByVal R_Cs_Fact As Boolean,  _
                    ByVal R_I_Detection_Limit As Single,  _
                    ByVal R_I_Error As Single,  _
                    ByVal R_I_Concentaration As Single,  _
                    ByVal R_I_Fact As Boolean,  _
                    ByVal R_Sb_Detection_Limit As Single,  _
                    ByVal R_Sb_Error As Single,  _
                    ByVal R_Sb_Concentaration As Single,  _
                    ByVal R_Sb_Fact As Boolean,  _
                    ByVal R_Sn_Detection_Limit As Single,  _
                    ByVal R_Sn_Error As Single,  _
                    ByVal R_Sn_Concentaration As Single,  _
                    ByVal R_Sn_Fact As Boolean,  _
                    ByVal R_In_Detection_Limit As Single,  _
                    ByVal R_In_Error As Single,  _
                    ByVal R_In_Concentaration As Single,  _
                    ByVal R_In_Fact As Boolean,  _
                    ByVal R_Cd_Detection_Limit As Single,  _
                    ByVal R_Cd_Error As Single,  _
                    ByVal R_Cd_Concentaration As Single,  _
                    ByVal R_Cd_Fact As Boolean,  _
                    ByVal R_Ag_Detection_Limit As Single,  _
                    ByVal R_Ag_Error As Single,  _
                    ByVal R_Ag_Concentaration As Single,  _
                    ByVal R_Ag_Fact As Boolean,  _
                    ByVal R_Ru_Detection_Limit As Single,  _
                    ByVal R_Ru_Error As Single,  _
                    ByVal R_Ru_Concentaration As Single,  _
                    ByVal R_Ru_Fact As Boolean,  _
                    ByVal R_Mo_Detection_Limit As Single,  _
                    ByVal R_Mo_Error As Single,  _
                    ByVal R_Mo_Concentaration As Single,  _
                    ByVal R_Mo_Fact As Boolean,  _
                    ByVal R_Nb_Detection_Limit As Single,  _
                    ByVal R_Nb_Error As Single,  _
                    ByVal R_Nb_Concentaration As Single,  _
                    ByVal R_Zr_Detection_Limit As Single,  _
                    ByVal R_Nb_Fact As Boolean,  _
                    ByVal R_Zr_Error As Single,  _
                    ByVal R_Zr_Concentaration As Single,  _
                    ByVal R_Zr_Fact As Boolean,  _
                    ByVal R_Y_Detection_Limit As Single,  _
                    ByVal R_Y_Error As Single,  _
                    ByVal R_Y_Concentaration As Single,  _
                    ByVal R_Y_Fact As Boolean,  _
                    ByVal R_Sr_Detection_Limit As Single,  _
                    ByVal R_Sr_Error As Single,  _
                    ByVal R_Sr_Concentaration As Single,  _
                    ByVal R_Rb_Detection_Limit As Single,  _
                    ByVal R_Sr_Fact As Boolean,  _
                    ByVal R_Rb_Error As Single,  _
                    ByVal R_Rb_Concentaration As Single,  _
                    ByVal R_Rb_Fact As Boolean,  _
                    ByVal R_Br_Detection_Limit As Single,  _
                    ByVal R_Br_Error As Single,  _
                    ByVal R_Br_Concentaration As Single,  _
                    ByVal R_Br_Fact As Boolean,  _
                    ByVal R_Se_Detection_Limit As Single,  _
                    ByVal R_Se_Error As Single,  _
                    ByVal R_Se_Concentaration As Single,  _
                    ByVal R_Se_Fact As Boolean,  _
                    ByVal R_As_Detection_Limit As Single,  _
                    ByVal R_As_Error As Single,  _
                    ByVal R_As_Concentaration As Single,  _
                    ByVal R_As_Fact As Boolean,  _
                    ByVal R_Ga_Detection_Limit As Single,  _
                    ByVal R_Ga_Error As Single,  _
                    ByVal R_Ga_Concentaration As Single,  _
                    ByVal R_Ga_Fact As Boolean,  _
                    ByVal R_Zn_Detection_Limit As Single,  _
                    ByVal R_Zn_Error As Single,  _
                    ByVal R_Zn_Concentaration As Single,  _
                    ByVal R_Zn_Fact As Boolean,  _
                    ByVal R_Cu_Detection_Limit As Single,  _
                    ByVal R_Cu_Error As Single,  _
                    ByVal R_Cu_Concentaration As Single,  _
                    ByVal R_Cu_Fact As Boolean,  _
                    ByVal R_Co_Detection_Limit As Single,  _
                    ByVal R_Co_Error As Single,  _
                    ByVal R_Co_Concentaration As Single,  _
                    ByVal R_Co_Fact As Boolean,  _
                    ByVal R_Fe_Detection_Limit As Single,  _
                    ByVal R_Fe_Error As Single,  _
                    ByVal R_Fe_Concentaration As Single,  _
                    ByVal R_Fe_Fact As Boolean,  _
                    ByVal R_Mn_Detection_Limit As Single,  _
                    ByVal R_Mn_Error As Single,  _
                    ByVal R_F_Fact As Boolean,  _
                    ByVal R_F_Concentaration As Single,  _
                    ByVal R_F_Error As Single,  _
                    ByVal R_F_Detection_Limit As Single,  _
                    ByVal R_Na_Fact As Boolean,  _
                    ByVal R_Na_Concentaration As Single,  _
                    ByVal R_Na_Error As Single,  _
                    ByVal R_Na_Detection_Limit As Single,  _
                    ByVal R_Mg_Fact As Boolean,  _
                    ByVal R_Mg_Concentaration As Single,  _
                    ByVal R_Mg_Error As Single,  _
                    ByVal R_Mg_Detection_Limit As Single,  _
                    ByVal R_Al_Fact As Boolean,  _
                    ByVal R_Al_Concentaration As Single,  _
                    ByVal R_Al_Error As Single,  _
                    ByVal R_Si_Fact As Boolean,  _
                    ByVal R_Al_Detection_Limit As Single,  _
                    ByVal R_Si_Concentaration As Single,  _
                    ByVal R_Si_Error As Single,  _
                    ByVal R_Si_Detection_Limit As Single,  _
                    ByVal R_S_Fact As Boolean,  _
                    ByVal R_S_Concentaration As Single,  _
                    ByVal R_S_Error As Single,  _
                    ByVal R_S_Detection_Limit As Single,  _
                    ByVal R_Cl_Fact As Boolean,  _
                    ByVal R_Cl_Concentaration As Single,  _
                    ByVal R_Cl_Error As Single,  _
                    ByVal R_Cl_Detection_Limit As Single,  _
                    ByVal R_K_Fact As Boolean,  _
                    ByVal R_K_Concentaration As Single,  _
                    ByVal R_K_Error As Single,  _
                    ByVal R_K_Detection_Limit As Single,  _
                    ByVal R_Ca_Fact As Boolean,  _
                    ByVal R_Ca_Concentaration As Single,  _
                    ByVal R_Ca_Error As Single,  _
                    ByVal R_Ca_Detection_Limit As Single,  _
                    ByVal R_Sc_Fact As Boolean,  _
                    ByVal R_Sc_Concentaration As Single,  _
                    ByVal R_Sc_Error As Single,  _
                    ByVal R_Sc_Detection_Limit As Single,  _
                    ByVal R_Ti_Fact As Boolean,  _
                    ByVal R_Ti_Concentaration As Single,  _
                    ByVal R_Ti_Error As Single,  _
                    ByVal R_Ti_Detection_Limit As Single,  _
                    ByVal R_V_Fact As Boolean,  _
                    ByVal R_V_Concentaration As Single,  _
                    ByVal R_V_Error As Single,  _
                    ByVal R_V_Detection_Limit As Single,  _
                    ByVal R_Cr_Fact As Boolean,  _
                    ByVal R_Cr_Concentaration As Single,  _
                    ByVal R_Cr_Error As Single,  _
                    ByVal R_Cr_Detection_Limit As Single,  _
                    ByVal R_Mn_Fact As Boolean,  _
                    ByVal R_Mn_Concentaration As Single,  _
                    ByVal A_Sample_ID As String,  _
                    ByVal F_Country_Code As String,  _
                    ByVal F_Client_ID As String,  _
                    ByVal F_Year As String,  _
                    ByVal F_Sample_Set_ID As String,  _
                    ByVal F_Sample_Set_Index As String,  _
                    ByVal R_Processed_By As String,  _
                    ByVal R_File_Spectrum As String,  _
                    ByVal A_Client_Sample_ID As String,  _
                    ByVal A_Latitude As String,  _
                    ByVal A_Longitude As String,  _
                    ByVal A_Collection_Place As String,  _
                    ByVal A_Notes As String) As table_Sample_NAA_ResultsRow
            Dim rowtable_Sample_NAA_ResultsRow As table_Sample_NAA_ResultsRow = CType(Me.NewRow,table_Sample_NAA_ResultsRow)
            Dim columnValuesArray() As Object = New Object() {R_U_Detection_Limit, R_U_Error, R_U_Concentaration, R_U_Fact, R_Th_Detection_Limit, R_Th_Error, R_Th_Concentaration, R_Th_Fact, R_Hg_Detection_Limit, R_Hg_Error, R_Hg_Concentaration, R_Hg_Fact, R_Au_Detection_Limit, R_Au_Error, R_Au_Concentaration, R_Au_Fact, R_Pt_Detection_Limit, R_Pt_Error, R_Pt_Concentaration, R_Pt_Fact, R_Ir_Detection_Limit, R_Ir_Error, R_Ir_Concentaration, R_Ir_Fact, R_Re_Detection_Limit, R_Re_Error, R_Re_Concentaration, R_Re_Fact, R_W_Detection_Limit, R_W_Error, R_W_Concentaration, R_W_Fact, R_Ta_Detection_Limit, R_Ta_Error, R_Ta_Concentaration, R_Ta_Fact, R_Hf_Detection_Limit, R_Hf_Error, R_Hf_Concentaration, R_Hf_Fact, R_Lu_Detection_Limit, R_Lu_Error, R_Lu_Concentaration, R_Lu_Fact, R_Yb_Detection_Limit, R_Yb_Error, R_Yb_Concentaration, R_Yb_Fact, R_Tm_Detection_Limit, R_Tm_Error, R_Tm_Concentaration, R_Tm_Fact, R_Er_Detection_Limit, R_Er_Error, R_Er_Concentaration, R_Er_Fact, R_Dy_Detection_Limit, R_Dy_Error, R_Dy_Concentaration, R_Dy_Fact, R_Tb_Detection_Limit, R_Tb_Error, R_Tb_Concentaration, R_Tb_Fact, R_Gd_Detection_Limit, R_Gd_Error, R_Gd_Concentaration, R_Gd_Fact, R_Eu_Detection_Limit, R_Eu_Error, R_Eu_Concentaration, R_Eu_Fact, R_Sm_Detection_Limit, R_Sm_Error, R_Sm_Concentaration, R_Sm_Fact, R_Nd_Detection_Limit, R_Nd_Error, R_Nd_Concentaration, R_Nd_Fact, R_Ce_Detection_Limit, R_Ce_Error, R_Ce_Concentaration, R_Ce_Fact, R_La_Detection_Limit, R_La_Error, R_La_Concentaration, R_La_Fact, R_Ba_Detection_Limit, R_Ba_Error, R_Ba_Concentaration, R_Ba_Fact, R_Cs_Detection_Limit, R_Cs_Error, R_Cs_Concentaration, R_Cs_Fact, R_I_Detection_Limit, R_I_Error, R_I_Concentaration, R_I_Fact, R_Sb_Detection_Limit, R_Sb_Error, R_Sb_Concentaration, R_Sb_Fact, R_Sn_Detection_Limit, R_Sn_Error, R_Sn_Concentaration, R_Sn_Fact, R_In_Detection_Limit, R_In_Error, R_In_Concentaration, R_In_Fact, R_Cd_Detection_Limit, R_Cd_Error, R_Cd_Concentaration, R_Cd_Fact, R_Ag_Detection_Limit, R_Ag_Error, R_Ag_Concentaration, R_Ag_Fact, R_Ru_Detection_Limit, R_Ru_Error, R_Ru_Concentaration, R_Ru_Fact, R_Mo_Detection_Limit, R_Mo_Error, R_Mo_Concentaration, R_Mo_Fact, R_Nb_Detection_Limit, R_Nb_Error, R_Nb_Concentaration, R_Zr_Detection_Limit, R_Nb_Fact, R_Zr_Error, R_Zr_Concentaration, R_Zr_Fact, R_Y_Detection_Limit, R_Y_Error, R_Y_Concentaration, R_Y_Fact, R_Sr_Detection_Limit, R_Sr_Error, R_Sr_Concentaration, R_Rb_Detection_Limit, R_Sr_Fact, R_Rb_Error, R_Rb_Concentaration, R_Rb_Fact, R_Br_Detection_Limit, R_Br_Error, R_Br_Concentaration, R_Br_Fact, R_Se_Detection_Limit, R_Se_Error, R_Se_Concentaration, R_Se_Fact, R_As_Detection_Limit, R_As_Error, R_As_Concentaration, R_As_Fact, R_Ga_Detection_Limit, R_Ga_Error, R_Ga_Concentaration, R_Ga_Fact, R_Zn_Detection_Limit, R_Zn_Error, R_Zn_Concentaration, R_Zn_Fact, R_Cu_Detection_Limit, R_Cu_Error, R_Cu_Concentaration, R_Cu_Fact, R_Co_Detection_Limit, R_Co_Error, R_Co_Concentaration, R_Co_Fact, R_Fe_Detection_Limit, R_Fe_Error, R_Fe_Concentaration, R_Fe_Fact, R_Mn_Detection_Limit, R_Mn_Error, R_F_Fact, R_F_Concentaration, R_F_Error, R_F_Detection_Limit, R_Na_Fact, R_Na_Concentaration, R_Na_Error, R_Na_Detection_Limit, R_Mg_Fact, R_Mg_Concentaration, R_Mg_Error, R_Mg_Detection_Limit, R_Al_Fact, R_Al_Concentaration, R_Al_Error, R_Si_Fact, R_Al_Detection_Limit, R_Si_Concentaration, R_Si_Error, R_Si_Detection_Limit, R_S_Fact, R_S_Concentaration, R_S_Error, R_S_Detection_Limit, R_Cl_Fact, R_Cl_Concentaration, R_Cl_Error, R_Cl_Detection_Limit, R_K_Fact, R_K_Concentaration, R_K_Error, R_K_Detection_Limit, R_Ca_Fact, R_Ca_Concentaration, R_Ca_Error, R_Ca_Detection_Limit, R_Sc_Fact, R_Sc_Concentaration, R_Sc_Error, R_Sc_Detection_Limit, R_Ti_Fact, R_Ti_Concentaration, R_Ti_Error, R_Ti_Detection_Limit, R_V_Fact, R_V_Concentaration, R_V_Error, R_V_Detection_Limit, R_Cr_Fact, R_Cr_Concentaration, R_Cr_Error, R_Cr_Detection_Limit, R_Mn_Fact, R_Mn_Concentaration, A_Sample_ID, F_Country_Code, F_Client_ID, F_Year, F_Sample_Set_ID, F_Sample_Set_Index, R_Processed_By, R_File_Spectrum, A_Client_Sample_ID, A_Latitude, A_Longitude, A_Collection_Place, A_Notes}
            rowtable_Sample_NAA_ResultsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtable_Sample_NAA_ResultsRow)
            Return rowtable_Sample_NAA_ResultsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByA_Sample_IDF_Country_CodeF_Client_IDF_YearF_Sample_Set_IDF_Sample_Set_Index(ByVal A_Sample_ID As String, ByVal F_Country_Code As String, ByVal F_Client_ID As String, ByVal F_Year As String, ByVal F_Sample_Set_ID As String, ByVal F_Sample_Set_Index As String) As table_Sample_NAA_ResultsRow
            Return CType(Me.Rows.Find(New Object() {A_Sample_ID, F_Country_Code, F_Client_ID, F_Year, F_Sample_Set_ID, F_Sample_Set_Index}),table_Sample_NAA_ResultsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As table_Sample_NAA_ResultsDataTable = CType(MyBase.Clone,table_Sample_NAA_ResultsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New table_Sample_NAA_ResultsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnR_U_Detection_Limit = MyBase.Columns("R_U_Detection_Limit")
            Me.columnR_U_Error = MyBase.Columns("R_U_Error")
            Me.columnR_U_Concentaration = MyBase.Columns("R_U_Concentaration")
            Me.columnR_U_Fact = MyBase.Columns("R_U_Fact")
            Me.columnR_Th_Detection_Limit = MyBase.Columns("R_Th_Detection_Limit")
            Me.columnR_Th_Error = MyBase.Columns("R_Th_Error")
            Me.columnR_Th_Concentaration = MyBase.Columns("R_Th_Concentaration")
            Me.columnR_Th_Fact = MyBase.Columns("R_Th_Fact")
            Me.columnR_Hg_Detection_Limit = MyBase.Columns("R_Hg_Detection_Limit")
            Me.columnR_Hg_Error = MyBase.Columns("R_Hg_Error")
            Me.columnR_Hg_Concentaration = MyBase.Columns("R_Hg_Concentaration")
            Me.columnR_Hg_Fact = MyBase.Columns("R_Hg_Fact")
            Me.columnR_Au_Detection_Limit = MyBase.Columns("R_Au_Detection_Limit")
            Me.columnR_Au_Error = MyBase.Columns("R_Au_Error")
            Me.columnR_Au_Concentaration = MyBase.Columns("R_Au_Concentaration")
            Me.columnR_Au_Fact = MyBase.Columns("R_Au_Fact")
            Me.columnR_Pt_Detection_Limit = MyBase.Columns("R_Pt_Detection_Limit")
            Me.columnR_Pt_Error = MyBase.Columns("R_Pt_Error")
            Me.columnR_Pt_Concentaration = MyBase.Columns("R_Pt_Concentaration")
            Me.columnR_Pt_Fact = MyBase.Columns("R_Pt_Fact")
            Me.columnR_Ir_Detection_Limit = MyBase.Columns("R_Ir_Detection_Limit")
            Me.columnR_Ir_Error = MyBase.Columns("R_Ir_Error")
            Me.columnR_Ir_Concentaration = MyBase.Columns("R_Ir_Concentaration")
            Me.columnR_Ir_Fact = MyBase.Columns("R_Ir_Fact")
            Me.columnR_Re_Detection_Limit = MyBase.Columns("R_Re_Detection_Limit")
            Me.columnR_Re_Error = MyBase.Columns("R_Re_Error")
            Me.columnR_Re_Concentaration = MyBase.Columns("R_Re_Concentaration")
            Me.columnR_Re_Fact = MyBase.Columns("R_Re_Fact")
            Me.columnR_W_Detection_Limit = MyBase.Columns("R_W_Detection_Limit")
            Me.columnR_W_Error = MyBase.Columns("R_W_Error")
            Me.columnR_W_Concentaration = MyBase.Columns("R_W_Concentaration")
            Me.columnR_W_Fact = MyBase.Columns("R_W_Fact")
            Me.columnR_Ta_Detection_Limit = MyBase.Columns("R_Ta_Detection_Limit")
            Me.columnR_Ta_Error = MyBase.Columns("R_Ta_Error")
            Me.columnR_Ta_Concentaration = MyBase.Columns("R_Ta_Concentaration")
            Me.columnR_Ta_Fact = MyBase.Columns("R_Ta_Fact")
            Me.columnR_Hf_Detection_Limit = MyBase.Columns("R_Hf_Detection_Limit")
            Me.columnR_Hf_Error = MyBase.Columns("R_Hf_Error")
            Me.columnR_Hf_Concentaration = MyBase.Columns("R_Hf_Concentaration")
            Me.columnR_Hf_Fact = MyBase.Columns("R_Hf_Fact")
            Me.columnR_Lu_Detection_Limit = MyBase.Columns("R_Lu_Detection_Limit")
            Me.columnR_Lu_Error = MyBase.Columns("R_Lu_Error")
            Me.columnR_Lu_Concentaration = MyBase.Columns("R_Lu_Concentaration")
            Me.columnR_Lu_Fact = MyBase.Columns("R_Lu_Fact")
            Me.columnR_Yb_Detection_Limit = MyBase.Columns("R_Yb_Detection_Limit")
            Me.columnR_Yb_Error = MyBase.Columns("R_Yb_Error")
            Me.columnR_Yb_Concentaration = MyBase.Columns("R_Yb_Concentaration")
            Me.columnR_Yb_Fact = MyBase.Columns("R_Yb_Fact")
            Me.columnR_Tm_Detection_Limit = MyBase.Columns("R_Tm_Detection_Limit")
            Me.columnR_Tm_Error = MyBase.Columns("R_Tm_Error")
            Me.columnR_Tm_Concentaration = MyBase.Columns("R_Tm_Concentaration")
            Me.columnR_Tm_Fact = MyBase.Columns("R_Tm_Fact")
            Me.columnR_Er_Detection_Limit = MyBase.Columns("R_Er_Detection_Limit")
            Me.columnR_Er_Error = MyBase.Columns("R_Er_Error")
            Me.columnR_Er_Concentaration = MyBase.Columns("R_Er_Concentaration")
            Me.columnR_Er_Fact = MyBase.Columns("R_Er_Fact")
            Me.columnR_Dy_Detection_Limit = MyBase.Columns("R_Dy_Detection_Limit")
            Me.columnR_Dy_Error = MyBase.Columns("R_Dy_Error")
            Me.columnR_Dy_Concentaration = MyBase.Columns("R_Dy_Concentaration")
            Me.columnR_Dy_Fact = MyBase.Columns("R_Dy_Fact")
            Me.columnR_Tb_Detection_Limit = MyBase.Columns("R_Tb_Detection_Limit")
            Me.columnR_Tb_Error = MyBase.Columns("R_Tb_Error")
            Me.columnR_Tb_Concentaration = MyBase.Columns("R_Tb_Concentaration")
            Me.columnR_Tb_Fact = MyBase.Columns("R_Tb_Fact")
            Me.columnR_Gd_Detection_Limit = MyBase.Columns("R_Gd_Detection_Limit")
            Me.columnR_Gd_Error = MyBase.Columns("R_Gd_Error")
            Me.columnR_Gd_Concentaration = MyBase.Columns("R_Gd_Concentaration")
            Me.columnR_Gd_Fact = MyBase.Columns("R_Gd_Fact")
            Me.columnR_Eu_Detection_Limit = MyBase.Columns("R_Eu_Detection_Limit")
            Me.columnR_Eu_Error = MyBase.Columns("R_Eu_Error")
            Me.columnR_Eu_Concentaration = MyBase.Columns("R_Eu_Concentaration")
            Me.columnR_Eu_Fact = MyBase.Columns("R_Eu_Fact")
            Me.columnR_Sm_Detection_Limit = MyBase.Columns("R_Sm_Detection_Limit")
            Me.columnR_Sm_Error = MyBase.Columns("R_Sm_Error")
            Me.columnR_Sm_Concentaration = MyBase.Columns("R_Sm_Concentaration")
            Me.columnR_Sm_Fact = MyBase.Columns("R_Sm_Fact")
            Me.columnR_Nd_Detection_Limit = MyBase.Columns("R_Nd_Detection_Limit")
            Me.columnR_Nd_Error = MyBase.Columns("R_Nd_Error")
            Me.columnR_Nd_Concentaration = MyBase.Columns("R_Nd_Concentaration")
            Me.columnR_Nd_Fact = MyBase.Columns("R_Nd_Fact")
            Me.columnR_Ce_Detection_Limit = MyBase.Columns("R_Ce_Detection_Limit")
            Me.columnR_Ce_Error = MyBase.Columns("R_Ce_Error")
            Me.columnR_Ce_Concentaration = MyBase.Columns("R_Ce_Concentaration")
            Me.columnR_Ce_Fact = MyBase.Columns("R_Ce_Fact")
            Me.columnR_La_Detection_Limit = MyBase.Columns("R_La_Detection_Limit")
            Me.columnR_La_Error = MyBase.Columns("R_La_Error")
            Me.columnR_La_Concentaration = MyBase.Columns("R_La_Concentaration")
            Me.columnR_La_Fact = MyBase.Columns("R_La_Fact")
            Me.columnR_Ba_Detection_Limit = MyBase.Columns("R_Ba_Detection_Limit")
            Me.columnR_Ba_Error = MyBase.Columns("R_Ba_Error")
            Me.columnR_Ba_Concentaration = MyBase.Columns("R_Ba_Concentaration")
            Me.columnR_Ba_Fact = MyBase.Columns("R_Ba_Fact")
            Me.columnR_Cs_Detection_Limit = MyBase.Columns("R_Cs_Detection_Limit")
            Me.columnR_Cs_Error = MyBase.Columns("R_Cs_Error")
            Me.columnR_Cs_Concentaration = MyBase.Columns("R_Cs_Concentaration")
            Me.columnR_Cs_Fact = MyBase.Columns("R_Cs_Fact")
            Me.columnR_I_Detection_Limit = MyBase.Columns("R_I_Detection_Limit")
            Me.columnR_I_Error = MyBase.Columns("R_I_Error")
            Me.columnR_I_Concentaration = MyBase.Columns("R_I_Concentaration")
            Me.columnR_I_Fact = MyBase.Columns("R_I_Fact")
            Me.columnR_Sb_Detection_Limit = MyBase.Columns("R_Sb_Detection_Limit")
            Me.columnR_Sb_Error = MyBase.Columns("R_Sb_Error")
            Me.columnR_Sb_Concentaration = MyBase.Columns("R_Sb_Concentaration")
            Me.columnR_Sb_Fact = MyBase.Columns("R_Sb_Fact")
            Me.columnR_Sn_Detection_Limit = MyBase.Columns("R_Sn_Detection_Limit")
            Me.columnR_Sn_Error = MyBase.Columns("R_Sn_Error")
            Me.columnR_Sn_Concentaration = MyBase.Columns("R_Sn_Concentaration")
            Me.columnR_Sn_Fact = MyBase.Columns("R_Sn_Fact")
            Me.columnR_In_Detection_Limit = MyBase.Columns("R_In_Detection_Limit")
            Me.columnR_In_Error = MyBase.Columns("R_In_Error")
            Me.columnR_In_Concentaration = MyBase.Columns("R_In_Concentaration")
            Me.columnR_In_Fact = MyBase.Columns("R_In_Fact")
            Me.columnR_Cd_Detection_Limit = MyBase.Columns("R_Cd_Detection_Limit")
            Me.columnR_Cd_Error = MyBase.Columns("R_Cd_Error")
            Me.columnR_Cd_Concentaration = MyBase.Columns("R_Cd_Concentaration")
            Me.columnR_Cd_Fact = MyBase.Columns("R_Cd_Fact")
            Me.columnR_Ag_Detection_Limit = MyBase.Columns("R_Ag_Detection_Limit")
            Me.columnR_Ag_Error = MyBase.Columns("R_Ag_Error")
            Me.columnR_Ag_Concentaration = MyBase.Columns("R_Ag_Concentaration")
            Me.columnR_Ag_Fact = MyBase.Columns("R_Ag_Fact")
            Me.columnR_Ru_Detection_Limit = MyBase.Columns("R_Ru_Detection_Limit")
            Me.columnR_Ru_Error = MyBase.Columns("R_Ru_Error")
            Me.columnR_Ru_Concentaration = MyBase.Columns("R_Ru_Concentaration")
            Me.columnR_Ru_Fact = MyBase.Columns("R_Ru_Fact")
            Me.columnR_Mo_Detection_Limit = MyBase.Columns("R_Mo_Detection_Limit")
            Me.columnR_Mo_Error = MyBase.Columns("R_Mo_Error")
            Me.columnR_Mo_Concentaration = MyBase.Columns("R_Mo_Concentaration")
            Me.columnR_Mo_Fact = MyBase.Columns("R_Mo_Fact")
            Me.columnR_Nb_Detection_Limit = MyBase.Columns("R_Nb_Detection_Limit")
            Me.columnR_Nb_Error = MyBase.Columns("R_Nb_Error")
            Me.columnR_Nb_Concentaration = MyBase.Columns("R_Nb_Concentaration")
            Me.columnR_Zr_Detection_Limit = MyBase.Columns("R_Zr_Detection_Limit")
            Me.columnR_Nb_Fact = MyBase.Columns("R_Nb_Fact")
            Me.columnR_Zr_Error = MyBase.Columns("R_Zr_Error")
            Me.columnR_Zr_Concentaration = MyBase.Columns("R_Zr_Concentaration")
            Me.columnR_Zr_Fact = MyBase.Columns("R_Zr_Fact")
            Me.columnR_Y_Detection_Limit = MyBase.Columns("R_Y_Detection_Limit")
            Me.columnR_Y_Error = MyBase.Columns("R_Y_Error")
            Me.columnR_Y_Concentaration = MyBase.Columns("R_Y_Concentaration")
            Me.columnR_Y_Fact = MyBase.Columns("R_Y_Fact")
            Me.columnR_Sr_Detection_Limit = MyBase.Columns("R_Sr_Detection_Limit")
            Me.columnR_Sr_Error = MyBase.Columns("R_Sr_Error")
            Me.columnR_Sr_Concentaration = MyBase.Columns("R_Sr_Concentaration")
            Me.columnR_Rb_Detection_Limit = MyBase.Columns("R_Rb_Detection_Limit")
            Me.columnR_Sr_Fact = MyBase.Columns("R_Sr_Fact")
            Me.columnR_Rb_Error = MyBase.Columns("R_Rb_Error")
            Me.columnR_Rb_Concentaration = MyBase.Columns("R_Rb_Concentaration")
            Me.columnR_Rb_Fact = MyBase.Columns("R_Rb_Fact")
            Me.columnR_Br_Detection_Limit = MyBase.Columns("R_Br_Detection_Limit")
            Me.columnR_Br_Error = MyBase.Columns("R_Br_Error")
            Me.columnR_Br_Concentaration = MyBase.Columns("R_Br_Concentaration")
            Me.columnR_Br_Fact = MyBase.Columns("R_Br_Fact")
            Me.columnR_Se_Detection_Limit = MyBase.Columns("R_Se_Detection_Limit")
            Me.columnR_Se_Error = MyBase.Columns("R_Se_Error")
            Me.columnR_Se_Concentaration = MyBase.Columns("R_Se_Concentaration")
            Me.columnR_Se_Fact = MyBase.Columns("R_Se_Fact")
            Me.columnR_As_Detection_Limit = MyBase.Columns("R_As_Detection_Limit")
            Me.columnR_As_Error = MyBase.Columns("R_As_Error")
            Me.columnR_As_Concentaration = MyBase.Columns("R_As_Concentaration")
            Me.columnR_As_Fact = MyBase.Columns("R_As_Fact")
            Me.columnR_Ga_Detection_Limit = MyBase.Columns("R_Ga_Detection_Limit")
            Me.columnR_Ga_Error = MyBase.Columns("R_Ga_Error")
            Me.columnR_Ga_Concentaration = MyBase.Columns("R_Ga_Concentaration")
            Me.columnR_Ga_Fact = MyBase.Columns("R_Ga_Fact")
            Me.columnR_Zn_Detection_Limit = MyBase.Columns("R_Zn_Detection_Limit")
            Me.columnR_Zn_Error = MyBase.Columns("R_Zn_Error")
            Me.columnR_Zn_Concentaration = MyBase.Columns("R_Zn_Concentaration")
            Me.columnR_Zn_Fact = MyBase.Columns("R_Zn_Fact")
            Me.columnR_Cu_Detection_Limit = MyBase.Columns("R_Cu_Detection_Limit")
            Me.columnR_Cu_Error = MyBase.Columns("R_Cu_Error")
            Me.columnR_Cu_Concentaration = MyBase.Columns("R_Cu_Concentaration")
            Me.columnR_Cu_Fact = MyBase.Columns("R_Cu_Fact")
            Me.columnR_Co_Detection_Limit = MyBase.Columns("R_Co_Detection_Limit")
            Me.columnR_Co_Error = MyBase.Columns("R_Co_Error")
            Me.columnR_Co_Concentaration = MyBase.Columns("R_Co_Concentaration")
            Me.columnR_Co_Fact = MyBase.Columns("R_Co_Fact")
            Me.columnR_Fe_Detection_Limit = MyBase.Columns("R_Fe_Detection_Limit")
            Me.columnR_Fe_Error = MyBase.Columns("R_Fe_Error")
            Me.columnR_Fe_Concentaration = MyBase.Columns("R_Fe_Concentaration")
            Me.columnR_Fe_Fact = MyBase.Columns("R_Fe_Fact")
            Me.columnR_Mn_Detection_Limit = MyBase.Columns("R_Mn_Detection_Limit")
            Me.columnR_Mn_Error = MyBase.Columns("R_Mn_Error")
            Me.columnR_F_Fact = MyBase.Columns("R_F_Fact")
            Me.columnR_F_Concentaration = MyBase.Columns("R_F_Concentaration")
            Me.columnR_F_Error = MyBase.Columns("R_F_Error")
            Me.columnR_F_Detection_Limit = MyBase.Columns("R_F_Detection_Limit")
            Me.columnR_Na_Fact = MyBase.Columns("R_Na_Fact")
            Me.columnR_Na_Concentaration = MyBase.Columns("R_Na_Concentaration")
            Me.columnR_Na_Error = MyBase.Columns("R_Na_Error")
            Me.columnR_Na_Detection_Limit = MyBase.Columns("R_Na_Detection_Limit")
            Me.columnR_Mg_Fact = MyBase.Columns("R_Mg_Fact")
            Me.columnR_Mg_Concentaration = MyBase.Columns("R_Mg_Concentaration")
            Me.columnR_Mg_Error = MyBase.Columns("R_Mg_Error")
            Me.columnR_Mg_Detection_Limit = MyBase.Columns("R_Mg_Detection_Limit")
            Me.columnR_Al_Fact = MyBase.Columns("R_Al_Fact")
            Me.columnR_Al_Concentaration = MyBase.Columns("R_Al_Concentaration")
            Me.columnR_Al_Error = MyBase.Columns("R_Al_Error")
            Me.columnR_Si_Fact = MyBase.Columns("R_Si_Fact")
            Me.columnR_Al_Detection_Limit = MyBase.Columns("R_Al_Detection_Limit")
            Me.columnR_Si_Concentaration = MyBase.Columns("R_Si_Concentaration")
            Me.columnR_Si_Error = MyBase.Columns("R_Si_Error")
            Me.columnR_Si_Detection_Limit = MyBase.Columns("R_Si_Detection_Limit")
            Me.columnR_S_Fact = MyBase.Columns("R_S_Fact")
            Me.columnR_S_Concentaration = MyBase.Columns("R_S_Concentaration")
            Me.columnR_S_Error = MyBase.Columns("R_S_Error")
            Me.columnR_S_Detection_Limit = MyBase.Columns("R_S_Detection_Limit")
            Me.columnR_Cl_Fact = MyBase.Columns("R_Cl_Fact")
            Me.columnR_Cl_Concentaration = MyBase.Columns("R_Cl_Concentaration")
            Me.columnR_Cl_Error = MyBase.Columns("R_Cl_Error")
            Me.columnR_Cl_Detection_Limit = MyBase.Columns("R_Cl_Detection_Limit")
            Me.columnR_K_Fact = MyBase.Columns("R_K_Fact")
            Me.columnR_K_Concentaration = MyBase.Columns("R_K_Concentaration")
            Me.columnR_K_Error = MyBase.Columns("R_K_Error")
            Me.columnR_K_Detection_Limit = MyBase.Columns("R_K_Detection_Limit")
            Me.columnR_Ca_Fact = MyBase.Columns("R_Ca_Fact")
            Me.columnR_Ca_Concentaration = MyBase.Columns("R_Ca_Concentaration")
            Me.columnR_Ca_Error = MyBase.Columns("R_Ca_Error")
            Me.columnR_Ca_Detection_Limit = MyBase.Columns("R_Ca_Detection_Limit")
            Me.columnR_Sc_Fact = MyBase.Columns("R_Sc_Fact")
            Me.columnR_Sc_Concentaration = MyBase.Columns("R_Sc_Concentaration")
            Me.columnR_Sc_Error = MyBase.Columns("R_Sc_Error")
            Me.columnR_Sc_Detection_Limit = MyBase.Columns("R_Sc_Detection_Limit")
            Me.columnR_Ti_Fact = MyBase.Columns("R_Ti_Fact")
            Me.columnR_Ti_Concentaration = MyBase.Columns("R_Ti_Concentaration")
            Me.columnR_Ti_Error = MyBase.Columns("R_Ti_Error")
            Me.columnR_Ti_Detection_Limit = MyBase.Columns("R_Ti_Detection_Limit")
            Me.columnR_V_Fact = MyBase.Columns("R_V_Fact")
            Me.columnR_V_Concentaration = MyBase.Columns("R_V_Concentaration")
            Me.columnR_V_Error = MyBase.Columns("R_V_Error")
            Me.columnR_V_Detection_Limit = MyBase.Columns("R_V_Detection_Limit")
            Me.columnR_Cr_Fact = MyBase.Columns("R_Cr_Fact")
            Me.columnR_Cr_Concentaration = MyBase.Columns("R_Cr_Concentaration")
            Me.columnR_Cr_Error = MyBase.Columns("R_Cr_Error")
            Me.columnR_Cr_Detection_Limit = MyBase.Columns("R_Cr_Detection_Limit")
            Me.columnR_Mn_Fact = MyBase.Columns("R_Mn_Fact")
            Me.columnR_Mn_Concentaration = MyBase.Columns("R_Mn_Concentaration")
            Me.columnA_Sample_ID = MyBase.Columns("A_Sample_ID")
            Me.columnF_Country_Code = MyBase.Columns("F_Country_Code")
            Me.columnF_Client_ID = MyBase.Columns("F_Client_ID")
            Me.columnF_Year = MyBase.Columns("F_Year")
            Me.columnF_Sample_Set_ID = MyBase.Columns("F_Sample_Set_ID")
            Me.columnF_Sample_Set_Index = MyBase.Columns("F_Sample_Set_Index")
            Me.columnR_Processed_By = MyBase.Columns("R_Processed_By")
            Me.columnR_File_Spectrum = MyBase.Columns("R_File_Spectrum")
            Me.columnA_Client_Sample_ID = MyBase.Columns("A_Client_Sample_ID")
            Me.columnA_Latitude = MyBase.Columns("A_Latitude")
            Me.columnA_Longitude = MyBase.Columns("A_Longitude")
            Me.columnA_Collection_Place = MyBase.Columns("A_Collection_Place")
            Me.columnA_Notes = MyBase.Columns("A_Notes")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnR_U_Detection_Limit = New Global.System.Data.DataColumn("R_U_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_U_Detection_Limit)
            Me.columnR_U_Error = New Global.System.Data.DataColumn("R_U_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_U_Error)
            Me.columnR_U_Concentaration = New Global.System.Data.DataColumn("R_U_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_U_Concentaration)
            Me.columnR_U_Fact = New Global.System.Data.DataColumn("R_U_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_U_Fact)
            Me.columnR_Th_Detection_Limit = New Global.System.Data.DataColumn("R_Th_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Th_Detection_Limit)
            Me.columnR_Th_Error = New Global.System.Data.DataColumn("R_Th_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Th_Error)
            Me.columnR_Th_Concentaration = New Global.System.Data.DataColumn("R_Th_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Th_Concentaration)
            Me.columnR_Th_Fact = New Global.System.Data.DataColumn("R_Th_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Th_Fact)
            Me.columnR_Hg_Detection_Limit = New Global.System.Data.DataColumn("R_Hg_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Hg_Detection_Limit)
            Me.columnR_Hg_Error = New Global.System.Data.DataColumn("R_Hg_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Hg_Error)
            Me.columnR_Hg_Concentaration = New Global.System.Data.DataColumn("R_Hg_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Hg_Concentaration)
            Me.columnR_Hg_Fact = New Global.System.Data.DataColumn("R_Hg_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Hg_Fact)
            Me.columnR_Au_Detection_Limit = New Global.System.Data.DataColumn("R_Au_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Au_Detection_Limit)
            Me.columnR_Au_Error = New Global.System.Data.DataColumn("R_Au_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Au_Error)
            Me.columnR_Au_Concentaration = New Global.System.Data.DataColumn("R_Au_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Au_Concentaration)
            Me.columnR_Au_Fact = New Global.System.Data.DataColumn("R_Au_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Au_Fact)
            Me.columnR_Pt_Detection_Limit = New Global.System.Data.DataColumn("R_Pt_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Pt_Detection_Limit)
            Me.columnR_Pt_Error = New Global.System.Data.DataColumn("R_Pt_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Pt_Error)
            Me.columnR_Pt_Concentaration = New Global.System.Data.DataColumn("R_Pt_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Pt_Concentaration)
            Me.columnR_Pt_Fact = New Global.System.Data.DataColumn("R_Pt_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Pt_Fact)
            Me.columnR_Ir_Detection_Limit = New Global.System.Data.DataColumn("R_Ir_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ir_Detection_Limit)
            Me.columnR_Ir_Error = New Global.System.Data.DataColumn("R_Ir_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ir_Error)
            Me.columnR_Ir_Concentaration = New Global.System.Data.DataColumn("R_Ir_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ir_Concentaration)
            Me.columnR_Ir_Fact = New Global.System.Data.DataColumn("R_Ir_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ir_Fact)
            Me.columnR_Re_Detection_Limit = New Global.System.Data.DataColumn("R_Re_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Re_Detection_Limit)
            Me.columnR_Re_Error = New Global.System.Data.DataColumn("R_Re_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Re_Error)
            Me.columnR_Re_Concentaration = New Global.System.Data.DataColumn("R_Re_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Re_Concentaration)
            Me.columnR_Re_Fact = New Global.System.Data.DataColumn("R_Re_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Re_Fact)
            Me.columnR_W_Detection_Limit = New Global.System.Data.DataColumn("R_W_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_W_Detection_Limit)
            Me.columnR_W_Error = New Global.System.Data.DataColumn("R_W_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_W_Error)
            Me.columnR_W_Concentaration = New Global.System.Data.DataColumn("R_W_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_W_Concentaration)
            Me.columnR_W_Fact = New Global.System.Data.DataColumn("R_W_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_W_Fact)
            Me.columnR_Ta_Detection_Limit = New Global.System.Data.DataColumn("R_Ta_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ta_Detection_Limit)
            Me.columnR_Ta_Error = New Global.System.Data.DataColumn("R_Ta_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ta_Error)
            Me.columnR_Ta_Concentaration = New Global.System.Data.DataColumn("R_Ta_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ta_Concentaration)
            Me.columnR_Ta_Fact = New Global.System.Data.DataColumn("R_Ta_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ta_Fact)
            Me.columnR_Hf_Detection_Limit = New Global.System.Data.DataColumn("R_Hf_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Hf_Detection_Limit)
            Me.columnR_Hf_Error = New Global.System.Data.DataColumn("R_Hf_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Hf_Error)
            Me.columnR_Hf_Concentaration = New Global.System.Data.DataColumn("R_Hf_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Hf_Concentaration)
            Me.columnR_Hf_Fact = New Global.System.Data.DataColumn("R_Hf_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Hf_Fact)
            Me.columnR_Lu_Detection_Limit = New Global.System.Data.DataColumn("R_Lu_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Lu_Detection_Limit)
            Me.columnR_Lu_Error = New Global.System.Data.DataColumn("R_Lu_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Lu_Error)
            Me.columnR_Lu_Concentaration = New Global.System.Data.DataColumn("R_Lu_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Lu_Concentaration)
            Me.columnR_Lu_Fact = New Global.System.Data.DataColumn("R_Lu_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Lu_Fact)
            Me.columnR_Yb_Detection_Limit = New Global.System.Data.DataColumn("R_Yb_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Yb_Detection_Limit)
            Me.columnR_Yb_Error = New Global.System.Data.DataColumn("R_Yb_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Yb_Error)
            Me.columnR_Yb_Concentaration = New Global.System.Data.DataColumn("R_Yb_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Yb_Concentaration)
            Me.columnR_Yb_Fact = New Global.System.Data.DataColumn("R_Yb_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Yb_Fact)
            Me.columnR_Tm_Detection_Limit = New Global.System.Data.DataColumn("R_Tm_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Tm_Detection_Limit)
            Me.columnR_Tm_Error = New Global.System.Data.DataColumn("R_Tm_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Tm_Error)
            Me.columnR_Tm_Concentaration = New Global.System.Data.DataColumn("R_Tm_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Tm_Concentaration)
            Me.columnR_Tm_Fact = New Global.System.Data.DataColumn("R_Tm_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Tm_Fact)
            Me.columnR_Er_Detection_Limit = New Global.System.Data.DataColumn("R_Er_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Er_Detection_Limit)
            Me.columnR_Er_Error = New Global.System.Data.DataColumn("R_Er_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Er_Error)
            Me.columnR_Er_Concentaration = New Global.System.Data.DataColumn("R_Er_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Er_Concentaration)
            Me.columnR_Er_Fact = New Global.System.Data.DataColumn("R_Er_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Er_Fact)
            Me.columnR_Dy_Detection_Limit = New Global.System.Data.DataColumn("R_Dy_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Dy_Detection_Limit)
            Me.columnR_Dy_Error = New Global.System.Data.DataColumn("R_Dy_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Dy_Error)
            Me.columnR_Dy_Concentaration = New Global.System.Data.DataColumn("R_Dy_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Dy_Concentaration)
            Me.columnR_Dy_Fact = New Global.System.Data.DataColumn("R_Dy_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Dy_Fact)
            Me.columnR_Tb_Detection_Limit = New Global.System.Data.DataColumn("R_Tb_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Tb_Detection_Limit)
            Me.columnR_Tb_Error = New Global.System.Data.DataColumn("R_Tb_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Tb_Error)
            Me.columnR_Tb_Concentaration = New Global.System.Data.DataColumn("R_Tb_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Tb_Concentaration)
            Me.columnR_Tb_Fact = New Global.System.Data.DataColumn("R_Tb_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Tb_Fact)
            Me.columnR_Gd_Detection_Limit = New Global.System.Data.DataColumn("R_Gd_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Gd_Detection_Limit)
            Me.columnR_Gd_Error = New Global.System.Data.DataColumn("R_Gd_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Gd_Error)
            Me.columnR_Gd_Concentaration = New Global.System.Data.DataColumn("R_Gd_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Gd_Concentaration)
            Me.columnR_Gd_Fact = New Global.System.Data.DataColumn("R_Gd_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Gd_Fact)
            Me.columnR_Eu_Detection_Limit = New Global.System.Data.DataColumn("R_Eu_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Eu_Detection_Limit)
            Me.columnR_Eu_Error = New Global.System.Data.DataColumn("R_Eu_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Eu_Error)
            Me.columnR_Eu_Concentaration = New Global.System.Data.DataColumn("R_Eu_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Eu_Concentaration)
            Me.columnR_Eu_Fact = New Global.System.Data.DataColumn("R_Eu_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Eu_Fact)
            Me.columnR_Sm_Detection_Limit = New Global.System.Data.DataColumn("R_Sm_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sm_Detection_Limit)
            Me.columnR_Sm_Error = New Global.System.Data.DataColumn("R_Sm_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sm_Error)
            Me.columnR_Sm_Concentaration = New Global.System.Data.DataColumn("R_Sm_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sm_Concentaration)
            Me.columnR_Sm_Fact = New Global.System.Data.DataColumn("R_Sm_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sm_Fact)
            Me.columnR_Nd_Detection_Limit = New Global.System.Data.DataColumn("R_Nd_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Nd_Detection_Limit)
            Me.columnR_Nd_Error = New Global.System.Data.DataColumn("R_Nd_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Nd_Error)
            Me.columnR_Nd_Concentaration = New Global.System.Data.DataColumn("R_Nd_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Nd_Concentaration)
            Me.columnR_Nd_Fact = New Global.System.Data.DataColumn("R_Nd_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Nd_Fact)
            Me.columnR_Ce_Detection_Limit = New Global.System.Data.DataColumn("R_Ce_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ce_Detection_Limit)
            Me.columnR_Ce_Error = New Global.System.Data.DataColumn("R_Ce_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ce_Error)
            Me.columnR_Ce_Concentaration = New Global.System.Data.DataColumn("R_Ce_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ce_Concentaration)
            Me.columnR_Ce_Fact = New Global.System.Data.DataColumn("R_Ce_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ce_Fact)
            Me.columnR_La_Detection_Limit = New Global.System.Data.DataColumn("R_La_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_La_Detection_Limit)
            Me.columnR_La_Error = New Global.System.Data.DataColumn("R_La_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_La_Error)
            Me.columnR_La_Concentaration = New Global.System.Data.DataColumn("R_La_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_La_Concentaration)
            Me.columnR_La_Fact = New Global.System.Data.DataColumn("R_La_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_La_Fact)
            Me.columnR_Ba_Detection_Limit = New Global.System.Data.DataColumn("R_Ba_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ba_Detection_Limit)
            Me.columnR_Ba_Error = New Global.System.Data.DataColumn("R_Ba_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ba_Error)
            Me.columnR_Ba_Concentaration = New Global.System.Data.DataColumn("R_Ba_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ba_Concentaration)
            Me.columnR_Ba_Fact = New Global.System.Data.DataColumn("R_Ba_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ba_Fact)
            Me.columnR_Cs_Detection_Limit = New Global.System.Data.DataColumn("R_Cs_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cs_Detection_Limit)
            Me.columnR_Cs_Error = New Global.System.Data.DataColumn("R_Cs_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cs_Error)
            Me.columnR_Cs_Concentaration = New Global.System.Data.DataColumn("R_Cs_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cs_Concentaration)
            Me.columnR_Cs_Fact = New Global.System.Data.DataColumn("R_Cs_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cs_Fact)
            Me.columnR_I_Detection_Limit = New Global.System.Data.DataColumn("R_I_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_I_Detection_Limit)
            Me.columnR_I_Error = New Global.System.Data.DataColumn("R_I_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_I_Error)
            Me.columnR_I_Concentaration = New Global.System.Data.DataColumn("R_I_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_I_Concentaration)
            Me.columnR_I_Fact = New Global.System.Data.DataColumn("R_I_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_I_Fact)
            Me.columnR_Sb_Detection_Limit = New Global.System.Data.DataColumn("R_Sb_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sb_Detection_Limit)
            Me.columnR_Sb_Error = New Global.System.Data.DataColumn("R_Sb_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sb_Error)
            Me.columnR_Sb_Concentaration = New Global.System.Data.DataColumn("R_Sb_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sb_Concentaration)
            Me.columnR_Sb_Fact = New Global.System.Data.DataColumn("R_Sb_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sb_Fact)
            Me.columnR_Sn_Detection_Limit = New Global.System.Data.DataColumn("R_Sn_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sn_Detection_Limit)
            Me.columnR_Sn_Error = New Global.System.Data.DataColumn("R_Sn_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sn_Error)
            Me.columnR_Sn_Concentaration = New Global.System.Data.DataColumn("R_Sn_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sn_Concentaration)
            Me.columnR_Sn_Fact = New Global.System.Data.DataColumn("R_Sn_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sn_Fact)
            Me.columnR_In_Detection_Limit = New Global.System.Data.DataColumn("R_In_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_In_Detection_Limit)
            Me.columnR_In_Error = New Global.System.Data.DataColumn("R_In_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_In_Error)
            Me.columnR_In_Concentaration = New Global.System.Data.DataColumn("R_In_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_In_Concentaration)
            Me.columnR_In_Fact = New Global.System.Data.DataColumn("R_In_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_In_Fact)
            Me.columnR_Cd_Detection_Limit = New Global.System.Data.DataColumn("R_Cd_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cd_Detection_Limit)
            Me.columnR_Cd_Error = New Global.System.Data.DataColumn("R_Cd_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cd_Error)
            Me.columnR_Cd_Concentaration = New Global.System.Data.DataColumn("R_Cd_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cd_Concentaration)
            Me.columnR_Cd_Fact = New Global.System.Data.DataColumn("R_Cd_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cd_Fact)
            Me.columnR_Ag_Detection_Limit = New Global.System.Data.DataColumn("R_Ag_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ag_Detection_Limit)
            Me.columnR_Ag_Error = New Global.System.Data.DataColumn("R_Ag_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ag_Error)
            Me.columnR_Ag_Concentaration = New Global.System.Data.DataColumn("R_Ag_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ag_Concentaration)
            Me.columnR_Ag_Fact = New Global.System.Data.DataColumn("R_Ag_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ag_Fact)
            Me.columnR_Ru_Detection_Limit = New Global.System.Data.DataColumn("R_Ru_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ru_Detection_Limit)
            Me.columnR_Ru_Error = New Global.System.Data.DataColumn("R_Ru_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ru_Error)
            Me.columnR_Ru_Concentaration = New Global.System.Data.DataColumn("R_Ru_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ru_Concentaration)
            Me.columnR_Ru_Fact = New Global.System.Data.DataColumn("R_Ru_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ru_Fact)
            Me.columnR_Mo_Detection_Limit = New Global.System.Data.DataColumn("R_Mo_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Mo_Detection_Limit)
            Me.columnR_Mo_Error = New Global.System.Data.DataColumn("R_Mo_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Mo_Error)
            Me.columnR_Mo_Concentaration = New Global.System.Data.DataColumn("R_Mo_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Mo_Concentaration)
            Me.columnR_Mo_Fact = New Global.System.Data.DataColumn("R_Mo_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Mo_Fact)
            Me.columnR_Nb_Detection_Limit = New Global.System.Data.DataColumn("R_Nb_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Nb_Detection_Limit)
            Me.columnR_Nb_Error = New Global.System.Data.DataColumn("R_Nb_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Nb_Error)
            Me.columnR_Nb_Concentaration = New Global.System.Data.DataColumn("R_Nb_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Nb_Concentaration)
            Me.columnR_Zr_Detection_Limit = New Global.System.Data.DataColumn("R_Zr_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Zr_Detection_Limit)
            Me.columnR_Nb_Fact = New Global.System.Data.DataColumn("R_Nb_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Nb_Fact)
            Me.columnR_Zr_Error = New Global.System.Data.DataColumn("R_Zr_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Zr_Error)
            Me.columnR_Zr_Concentaration = New Global.System.Data.DataColumn("R_Zr_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Zr_Concentaration)
            Me.columnR_Zr_Fact = New Global.System.Data.DataColumn("R_Zr_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Zr_Fact)
            Me.columnR_Y_Detection_Limit = New Global.System.Data.DataColumn("R_Y_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Y_Detection_Limit)
            Me.columnR_Y_Error = New Global.System.Data.DataColumn("R_Y_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Y_Error)
            Me.columnR_Y_Concentaration = New Global.System.Data.DataColumn("R_Y_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Y_Concentaration)
            Me.columnR_Y_Fact = New Global.System.Data.DataColumn("R_Y_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Y_Fact)
            Me.columnR_Sr_Detection_Limit = New Global.System.Data.DataColumn("R_Sr_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sr_Detection_Limit)
            Me.columnR_Sr_Error = New Global.System.Data.DataColumn("R_Sr_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sr_Error)
            Me.columnR_Sr_Concentaration = New Global.System.Data.DataColumn("R_Sr_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sr_Concentaration)
            Me.columnR_Rb_Detection_Limit = New Global.System.Data.DataColumn("R_Rb_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Rb_Detection_Limit)
            Me.columnR_Sr_Fact = New Global.System.Data.DataColumn("R_Sr_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sr_Fact)
            Me.columnR_Rb_Error = New Global.System.Data.DataColumn("R_Rb_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Rb_Error)
            Me.columnR_Rb_Concentaration = New Global.System.Data.DataColumn("R_Rb_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Rb_Concentaration)
            Me.columnR_Rb_Fact = New Global.System.Data.DataColumn("R_Rb_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Rb_Fact)
            Me.columnR_Br_Detection_Limit = New Global.System.Data.DataColumn("R_Br_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Br_Detection_Limit)
            Me.columnR_Br_Error = New Global.System.Data.DataColumn("R_Br_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Br_Error)
            Me.columnR_Br_Concentaration = New Global.System.Data.DataColumn("R_Br_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Br_Concentaration)
            Me.columnR_Br_Fact = New Global.System.Data.DataColumn("R_Br_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Br_Fact)
            Me.columnR_Se_Detection_Limit = New Global.System.Data.DataColumn("R_Se_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Se_Detection_Limit)
            Me.columnR_Se_Error = New Global.System.Data.DataColumn("R_Se_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Se_Error)
            Me.columnR_Se_Concentaration = New Global.System.Data.DataColumn("R_Se_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Se_Concentaration)
            Me.columnR_Se_Fact = New Global.System.Data.DataColumn("R_Se_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Se_Fact)
            Me.columnR_As_Detection_Limit = New Global.System.Data.DataColumn("R_As_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_As_Detection_Limit)
            Me.columnR_As_Error = New Global.System.Data.DataColumn("R_As_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_As_Error)
            Me.columnR_As_Concentaration = New Global.System.Data.DataColumn("R_As_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_As_Concentaration)
            Me.columnR_As_Fact = New Global.System.Data.DataColumn("R_As_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_As_Fact)
            Me.columnR_Ga_Detection_Limit = New Global.System.Data.DataColumn("R_Ga_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ga_Detection_Limit)
            Me.columnR_Ga_Error = New Global.System.Data.DataColumn("R_Ga_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ga_Error)
            Me.columnR_Ga_Concentaration = New Global.System.Data.DataColumn("R_Ga_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ga_Concentaration)
            Me.columnR_Ga_Fact = New Global.System.Data.DataColumn("R_Ga_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ga_Fact)
            Me.columnR_Zn_Detection_Limit = New Global.System.Data.DataColumn("R_Zn_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Zn_Detection_Limit)
            Me.columnR_Zn_Error = New Global.System.Data.DataColumn("R_Zn_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Zn_Error)
            Me.columnR_Zn_Concentaration = New Global.System.Data.DataColumn("R_Zn_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Zn_Concentaration)
            Me.columnR_Zn_Fact = New Global.System.Data.DataColumn("R_Zn_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Zn_Fact)
            Me.columnR_Cu_Detection_Limit = New Global.System.Data.DataColumn("R_Cu_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cu_Detection_Limit)
            Me.columnR_Cu_Error = New Global.System.Data.DataColumn("R_Cu_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cu_Error)
            Me.columnR_Cu_Concentaration = New Global.System.Data.DataColumn("R_Cu_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cu_Concentaration)
            Me.columnR_Cu_Fact = New Global.System.Data.DataColumn("R_Cu_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cu_Fact)
            Me.columnR_Co_Detection_Limit = New Global.System.Data.DataColumn("R_Co_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Co_Detection_Limit)
            Me.columnR_Co_Error = New Global.System.Data.DataColumn("R_Co_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Co_Error)
            Me.columnR_Co_Concentaration = New Global.System.Data.DataColumn("R_Co_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Co_Concentaration)
            Me.columnR_Co_Fact = New Global.System.Data.DataColumn("R_Co_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Co_Fact)
            Me.columnR_Fe_Detection_Limit = New Global.System.Data.DataColumn("R_Fe_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Fe_Detection_Limit)
            Me.columnR_Fe_Error = New Global.System.Data.DataColumn("R_Fe_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Fe_Error)
            Me.columnR_Fe_Concentaration = New Global.System.Data.DataColumn("R_Fe_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Fe_Concentaration)
            Me.columnR_Fe_Fact = New Global.System.Data.DataColumn("R_Fe_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Fe_Fact)
            Me.columnR_Mn_Detection_Limit = New Global.System.Data.DataColumn("R_Mn_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Mn_Detection_Limit)
            Me.columnR_Mn_Error = New Global.System.Data.DataColumn("R_Mn_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Mn_Error)
            Me.columnR_F_Fact = New Global.System.Data.DataColumn("R_F_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_F_Fact)
            Me.columnR_F_Concentaration = New Global.System.Data.DataColumn("R_F_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_F_Concentaration)
            Me.columnR_F_Error = New Global.System.Data.DataColumn("R_F_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_F_Error)
            Me.columnR_F_Detection_Limit = New Global.System.Data.DataColumn("R_F_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_F_Detection_Limit)
            Me.columnR_Na_Fact = New Global.System.Data.DataColumn("R_Na_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Na_Fact)
            Me.columnR_Na_Concentaration = New Global.System.Data.DataColumn("R_Na_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Na_Concentaration)
            Me.columnR_Na_Error = New Global.System.Data.DataColumn("R_Na_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Na_Error)
            Me.columnR_Na_Detection_Limit = New Global.System.Data.DataColumn("R_Na_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Na_Detection_Limit)
            Me.columnR_Mg_Fact = New Global.System.Data.DataColumn("R_Mg_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Mg_Fact)
            Me.columnR_Mg_Concentaration = New Global.System.Data.DataColumn("R_Mg_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Mg_Concentaration)
            Me.columnR_Mg_Error = New Global.System.Data.DataColumn("R_Mg_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Mg_Error)
            Me.columnR_Mg_Detection_Limit = New Global.System.Data.DataColumn("R_Mg_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Mg_Detection_Limit)
            Me.columnR_Al_Fact = New Global.System.Data.DataColumn("R_Al_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Al_Fact)
            Me.columnR_Al_Concentaration = New Global.System.Data.DataColumn("R_Al_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Al_Concentaration)
            Me.columnR_Al_Error = New Global.System.Data.DataColumn("R_Al_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Al_Error)
            Me.columnR_Si_Fact = New Global.System.Data.DataColumn("R_Si_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Si_Fact)
            Me.columnR_Al_Detection_Limit = New Global.System.Data.DataColumn("R_Al_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Al_Detection_Limit)
            Me.columnR_Si_Concentaration = New Global.System.Data.DataColumn("R_Si_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Si_Concentaration)
            Me.columnR_Si_Error = New Global.System.Data.DataColumn("R_Si_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Si_Error)
            Me.columnR_Si_Detection_Limit = New Global.System.Data.DataColumn("R_Si_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Si_Detection_Limit)
            Me.columnR_S_Fact = New Global.System.Data.DataColumn("R_S_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_S_Fact)
            Me.columnR_S_Concentaration = New Global.System.Data.DataColumn("R_S_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_S_Concentaration)
            Me.columnR_S_Error = New Global.System.Data.DataColumn("R_S_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_S_Error)
            Me.columnR_S_Detection_Limit = New Global.System.Data.DataColumn("R_S_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_S_Detection_Limit)
            Me.columnR_Cl_Fact = New Global.System.Data.DataColumn("R_Cl_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cl_Fact)
            Me.columnR_Cl_Concentaration = New Global.System.Data.DataColumn("R_Cl_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cl_Concentaration)
            Me.columnR_Cl_Error = New Global.System.Data.DataColumn("R_Cl_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cl_Error)
            Me.columnR_Cl_Detection_Limit = New Global.System.Data.DataColumn("R_Cl_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cl_Detection_Limit)
            Me.columnR_K_Fact = New Global.System.Data.DataColumn("R_K_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_K_Fact)
            Me.columnR_K_Concentaration = New Global.System.Data.DataColumn("R_K_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_K_Concentaration)
            Me.columnR_K_Error = New Global.System.Data.DataColumn("R_K_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_K_Error)
            Me.columnR_K_Detection_Limit = New Global.System.Data.DataColumn("R_K_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_K_Detection_Limit)
            Me.columnR_Ca_Fact = New Global.System.Data.DataColumn("R_Ca_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ca_Fact)
            Me.columnR_Ca_Concentaration = New Global.System.Data.DataColumn("R_Ca_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ca_Concentaration)
            Me.columnR_Ca_Error = New Global.System.Data.DataColumn("R_Ca_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ca_Error)
            Me.columnR_Ca_Detection_Limit = New Global.System.Data.DataColumn("R_Ca_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ca_Detection_Limit)
            Me.columnR_Sc_Fact = New Global.System.Data.DataColumn("R_Sc_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sc_Fact)
            Me.columnR_Sc_Concentaration = New Global.System.Data.DataColumn("R_Sc_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sc_Concentaration)
            Me.columnR_Sc_Error = New Global.System.Data.DataColumn("R_Sc_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sc_Error)
            Me.columnR_Sc_Detection_Limit = New Global.System.Data.DataColumn("R_Sc_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Sc_Detection_Limit)
            Me.columnR_Ti_Fact = New Global.System.Data.DataColumn("R_Ti_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ti_Fact)
            Me.columnR_Ti_Concentaration = New Global.System.Data.DataColumn("R_Ti_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ti_Concentaration)
            Me.columnR_Ti_Error = New Global.System.Data.DataColumn("R_Ti_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ti_Error)
            Me.columnR_Ti_Detection_Limit = New Global.System.Data.DataColumn("R_Ti_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Ti_Detection_Limit)
            Me.columnR_V_Fact = New Global.System.Data.DataColumn("R_V_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_V_Fact)
            Me.columnR_V_Concentaration = New Global.System.Data.DataColumn("R_V_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_V_Concentaration)
            Me.columnR_V_Error = New Global.System.Data.DataColumn("R_V_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_V_Error)
            Me.columnR_V_Detection_Limit = New Global.System.Data.DataColumn("R_V_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_V_Detection_Limit)
            Me.columnR_Cr_Fact = New Global.System.Data.DataColumn("R_Cr_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cr_Fact)
            Me.columnR_Cr_Concentaration = New Global.System.Data.DataColumn("R_Cr_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cr_Concentaration)
            Me.columnR_Cr_Error = New Global.System.Data.DataColumn("R_Cr_Error", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cr_Error)
            Me.columnR_Cr_Detection_Limit = New Global.System.Data.DataColumn("R_Cr_Detection_Limit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Cr_Detection_Limit)
            Me.columnR_Mn_Fact = New Global.System.Data.DataColumn("R_Mn_Fact", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Mn_Fact)
            Me.columnR_Mn_Concentaration = New Global.System.Data.DataColumn("R_Mn_Concentaration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Mn_Concentaration)
            Me.columnA_Sample_ID = New Global.System.Data.DataColumn("A_Sample_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Sample_ID)
            Me.columnF_Country_Code = New Global.System.Data.DataColumn("F_Country_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Country_Code)
            Me.columnF_Client_ID = New Global.System.Data.DataColumn("F_Client_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Client_ID)
            Me.columnF_Year = New Global.System.Data.DataColumn("F_Year", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Year)
            Me.columnF_Sample_Set_ID = New Global.System.Data.DataColumn("F_Sample_Set_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Sample_Set_ID)
            Me.columnF_Sample_Set_Index = New Global.System.Data.DataColumn("F_Sample_Set_Index", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Sample_Set_Index)
            Me.columnR_Processed_By = New Global.System.Data.DataColumn("R_Processed_By", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Processed_By)
            Me.columnR_File_Spectrum = New Global.System.Data.DataColumn("R_File_Spectrum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_File_Spectrum)
            Me.columnA_Client_Sample_ID = New Global.System.Data.DataColumn("A_Client_Sample_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Client_Sample_ID)
            Me.columnA_Latitude = New Global.System.Data.DataColumn("A_Latitude", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Latitude)
            Me.columnA_Longitude = New Global.System.Data.DataColumn("A_Longitude", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Longitude)
            Me.columnA_Collection_Place = New Global.System.Data.DataColumn("A_Collection_Place", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Collection_Place)
            Me.columnA_Notes = New Global.System.Data.DataColumn("A_Notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_Notes)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnA_Sample_ID, Me.columnF_Country_Code, Me.columnF_Client_ID, Me.columnF_Year, Me.columnF_Sample_Set_ID, Me.columnF_Sample_Set_Index}, true))
            Me.columnA_Sample_ID.AllowDBNull = false
            Me.columnA_Sample_ID.MaxLength = 3
            Me.columnF_Country_Code.AllowDBNull = false
            Me.columnF_Country_Code.MaxLength = 2
            Me.columnF_Client_ID.AllowDBNull = false
            Me.columnF_Client_ID.MaxLength = 2
            Me.columnF_Year.AllowDBNull = false
            Me.columnF_Year.MaxLength = 2
            Me.columnF_Sample_Set_ID.AllowDBNull = false
            Me.columnF_Sample_Set_ID.MaxLength = 5
            Me.columnF_Sample_Set_Index.AllowDBNull = false
            Me.columnF_Sample_Set_Index.MaxLength = 2
            Me.columnR_Processed_By.MaxLength = 25
            Me.columnR_File_Spectrum.MaxLength = 36
            Me.columnA_Client_Sample_ID.MaxLength = 20
            Me.columnA_Latitude.MaxLength = 9
            Me.columnA_Longitude.MaxLength = 9
            Me.columnA_Collection_Place.MaxLength = 200
            Me.columnA_Notes.MaxLength = 150
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtable_Sample_NAA_ResultsRow() As table_Sample_NAA_ResultsRow
            Return CType(Me.NewRow,table_Sample_NAA_ResultsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New table_Sample_NAA_ResultsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(table_Sample_NAA_ResultsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.table_Sample_NAA_ResultsRowChangedEvent) Is Nothing) Then
                RaiseEvent table_Sample_NAA_ResultsRowChanged(Me, New table_Sample_NAA_ResultsRowChangeEvent(CType(e.Row,table_Sample_NAA_ResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.table_Sample_NAA_ResultsRowChangingEvent) Is Nothing) Then
                RaiseEvent table_Sample_NAA_ResultsRowChanging(Me, New table_Sample_NAA_ResultsRowChangeEvent(CType(e.Row,table_Sample_NAA_ResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.table_Sample_NAA_ResultsRowDeletedEvent) Is Nothing) Then
                RaiseEvent table_Sample_NAA_ResultsRowDeleted(Me, New table_Sample_NAA_ResultsRowChangeEvent(CType(e.Row,table_Sample_NAA_ResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.table_Sample_NAA_ResultsRowDeletingEvent) Is Nothing) Then
                RaiseEvent table_Sample_NAA_ResultsRowDeleting(Me, New table_Sample_NAA_ResultsRowChangeEvent(CType(e.Row,table_Sample_NAA_ResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetable_Sample_NAA_ResultsRow(ByVal row As table_Sample_NAA_ResultsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NAA_DB_EXPDataSet = New NAA_DB_EXPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "table_Sample_NAA_ResultsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_ClientRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_Client As table_ClientDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_Client = CType(Me.Table,table_ClientDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Client_ID() As String
            Get
                Return CType(Me(Me.tabletable_Client.Client_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_Client.Client_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Country_Code() As String
            Get
                Return CType(Me(Me.tabletable_Client.Country_CodeColumn),String)
            End Get
            Set
                Me(Me.tabletable_Client.Country_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Country() As String
            Get
                Return CType(Me(Me.tabletable_Client.CountryColumn),String)
            End Get
            Set
                Me(Me.tabletable_Client.CountryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Postal_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.Postal_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Postal_Code' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.Postal_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Republic() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.RepublicColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Republic' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.RepublicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property _Region() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.RegionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Region' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.RegionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Area() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.AreaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.AreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property City() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.CityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'City' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.CityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Street() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.StreetColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Street' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.StreetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property House() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.HouseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'House' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.HouseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Building() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.BuildingColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Building' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.BuildingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Organization() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.OrganizationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Organization' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.OrganizationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Title' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Gender() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.GenderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Gender' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.GenderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Last_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.Last_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Last_Name' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.Last_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property First_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.First_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'First_Name' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.First_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Middle_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.Middle_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Middle_Name' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.Middle_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Phone_Country_Code_Phone_1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.Phone_Country_Code_Phone_1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Phone_Country_Code_Phone_1' in table 'table_Client' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.Phone_Country_Code_Phone_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Code_Phone_1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.Code_Phone_1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code_Phone_1' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.Code_Phone_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Phone_1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.Phone_1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Phone_1' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.Phone_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Phone_Country_Code_Phone_2() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.Phone_Country_Code_Phone_2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Phone_Country_Code_Phone_2' in table 'table_Client' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.Phone_Country_Code_Phone_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Code_Phone_2() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.Code_Phone_2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code_Phone_2' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.Code_Phone_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Phone_2() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.Phone_2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Phone_2' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.Phone_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Phone_Country_Code_Fax_1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.Phone_Country_Code_Fax_1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Phone_Country_Code_Fax_1' in table 'table_Client' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.Phone_Country_Code_Fax_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Code_Fax_1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.Code_Fax_1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code_Fax_1' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.Code_Fax_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Fax_1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.Fax_1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fax_1' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.Fax_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Phone_Country_Code_Mobile_Phone_1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.Phone_Country_Code_Mobile_Phone_1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Phone_Country_Code_Mobile_Phone_1' in table 'table_Client' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.Phone_Country_Code_Mobile_Phone_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Code_Mobile_Phone_1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.Code_Mobile_Phone_1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code_Mobile_Phone_1' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.Code_Mobile_Phone_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Mobile_Phone_1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.Mobile_Phone_1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mobile_Phone_1' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.Mobile_Phone_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property E_mail_1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.E_mail_1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'E_mail_1' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.E_mail_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property E_mail_2() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.E_mail_2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'E_mail_2' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.E_mail_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Notes() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Client.NotesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Notes' in table 'table_Client' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Client.NotesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPostal_CodeNull() As Boolean
            Return Me.IsNull(Me.tabletable_Client.Postal_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPostal_CodeNull()
            Me(Me.tabletable_Client.Postal_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRepublicNull() As Boolean
            Return Me.IsNull(Me.tabletable_Client.RepublicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRepublicNull()
            Me(Me.tabletable_Client.RepublicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Is_RegionNull() As Boolean
            Return Me.IsNull(Me.tabletable_Client.RegionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Set_RegionNull()
            Me(Me.tabletable_Client.RegionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAreaNull() As Boolean
            Return Me.IsNull(Me.tabletable_Client.AreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAreaNull()
            Me(Me.tabletable_Client.AreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCityNull() As Boolean
            Return Me.IsNull(Me.tabletable_Client.CityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCityNull()
            Me(Me.tabletable_Client.CityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStreetNull() As Boolean
            Return Me.IsNull(Me.tabletable_Client.StreetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStreetNull()
            Me(Me.tabletable_Client.StreetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHouseNull() As Boolean
            Return Me.IsNull(Me.tabletable_Client.HouseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHouseNull()
            Me(Me.tabletable_Client.HouseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBuildingNull() As Boolean
            Return Me.IsNull(Me.tabletable_Client.BuildingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBuildingNull()
            Me(Me.tabletable_Client.BuildingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOrganizationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Client.OrganizationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOrganizationNull()
            Me(Me.tabletable_Client.OrganizationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tabletable_Client.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTitleNull()
            Me(Me.tabletable_Client.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsGenderNull() As Boolean
            Return Me.IsNull(Me.tabletable_Client.GenderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetGenderNull()
            Me(Me.tabletable_Client.GenderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLast_NameNull() As Boolean
            Return Me.IsNull(Me.tabletable_Client.Last_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLast_NameNull()
            Me(Me.tabletable_Client.Last_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFirst_NameNull() As Boolean
            Return Me.IsNull(Me.tabletable_Client.First_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFirst_NameNull()
            Me(Me.tabletable_Client.First_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMiddle_NameNull() As Boolean
            Return Me.IsNull(Me.tabletable_Client.Middle_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMiddle_NameNull()
            Me(Me.tabletable_Client.Middle_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPhone_Country_Code_Phone_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_Client.Phone_Country_Code_Phone_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPhone_Country_Code_Phone_1Null()
            Me(Me.tabletable_Client.Phone_Country_Code_Phone_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCode_Phone_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_Client.Code_Phone_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCode_Phone_1Null()
            Me(Me.tabletable_Client.Code_Phone_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPhone_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_Client.Phone_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPhone_1Null()
            Me(Me.tabletable_Client.Phone_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPhone_Country_Code_Phone_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_Client.Phone_Country_Code_Phone_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPhone_Country_Code_Phone_2Null()
            Me(Me.tabletable_Client.Phone_Country_Code_Phone_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCode_Phone_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_Client.Code_Phone_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCode_Phone_2Null()
            Me(Me.tabletable_Client.Code_Phone_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPhone_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_Client.Phone_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPhone_2Null()
            Me(Me.tabletable_Client.Phone_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPhone_Country_Code_Fax_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_Client.Phone_Country_Code_Fax_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPhone_Country_Code_Fax_1Null()
            Me(Me.tabletable_Client.Phone_Country_Code_Fax_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCode_Fax_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_Client.Code_Fax_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCode_Fax_1Null()
            Me(Me.tabletable_Client.Code_Fax_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFax_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_Client.Fax_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFax_1Null()
            Me(Me.tabletable_Client.Fax_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPhone_Country_Code_Mobile_Phone_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_Client.Phone_Country_Code_Mobile_Phone_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPhone_Country_Code_Mobile_Phone_1Null()
            Me(Me.tabletable_Client.Phone_Country_Code_Mobile_Phone_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCode_Mobile_Phone_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_Client.Code_Mobile_Phone_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCode_Mobile_Phone_1Null()
            Me(Me.tabletable_Client.Code_Mobile_Phone_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMobile_Phone_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_Client.Mobile_Phone_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMobile_Phone_1Null()
            Me(Me.tabletable_Client.Mobile_Phone_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsE_mail_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_Client.E_mail_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetE_mail_1Null()
            Me(Me.tabletable_Client.E_mail_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsE_mail_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_Client.E_mail_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetE_mail_2Null()
            Me(Me.tabletable_Client.E_mail_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNotesNull() As Boolean
            Return Me.IsNull(Me.tabletable_Client.NotesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNotesNull()
            Me(Me.tabletable_Client.NotesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettable_Sample_SetRows() As table_Sample_SetRow()
            If (Me.Table.ChildRelations("FK_table_Sample_Set_table_Client") Is Nothing) Then
                Return New table_Sample_SetRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_table_Sample_Set_table_Client")),table_Sample_SetRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_CountryRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_Country As table_CountryDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_Country = CType(Me.Table,table_CountryDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Country() As String
            Get
                Return CType(Me(Me.tabletable_Country.CountryColumn),String)
            End Get
            Set
                Me(Me.tabletable_Country.CountryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Country_Code() As String
            Get
                Return CType(Me(Me.tabletable_Country.Country_CodeColumn),String)
            End Get
            Set
                Me(Me.tabletable_Country.Country_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Phone_Country_Code() As String
            Get
                Return CType(Me(Me.tabletable_Country.Phone_Country_CodeColumn),String)
            End Get
            Set
                Me(Me.tabletable_Country.Phone_Country_CodeColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_Determined_ElementsRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_Determined_Elements As table_Determined_ElementsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_Determined_Elements = CType(Me.Table,table_Determined_ElementsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DeterminedElements() As String
            Get
                Return CType(Me(Me.tabletable_Determined_Elements.DeterminedElementsColumn),String)
            End Get
            Set
                Me(Me.tabletable_Determined_Elements.DeterminedElementsColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_Physical_EnvironmentRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_Physical_Environment As table_Physical_EnvironmentDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_Physical_Environment = CType(Me.Table,table_Physical_EnvironmentDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Data() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_Physical_Environment.DataColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Data' in table 'table_Physical_Environment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Physical_Environment.DataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Time() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tabletable_Physical_Environment.TimeColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Time' in table 'table_Physical_Environment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Physical_Environment.TimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Relative_Humidity() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Physical_Environment.Relative_HumidityColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Relative_Humidity' in table 'table_Physical_Environment' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Physical_Environment.Relative_HumidityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Temperature() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Physical_Environment.TemperatureColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Temperature' in table 'table_Physical_Environment' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Physical_Environment.TemperatureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDataNull() As Boolean
            Return Me.IsNull(Me.tabletable_Physical_Environment.DataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDataNull()
            Me(Me.tabletable_Physical_Environment.DataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTimeNull() As Boolean
            Return Me.IsNull(Me.tabletable_Physical_Environment.TimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTimeNull()
            Me(Me.tabletable_Physical_Environment.TimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRelative_HumidityNull() As Boolean
            Return Me.IsNull(Me.tabletable_Physical_Environment.Relative_HumidityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRelative_HumidityNull()
            Me(Me.tabletable_Physical_Environment.Relative_HumidityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTemperatureNull() As Boolean
            Return Me.IsNull(Me.tabletable_Physical_Environment.TemperatureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTemperatureNull()
            Me(Me.tabletable_Physical_Environment.TemperatureColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_Received_ByRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_Received_By As table_Received_ByDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_Received_By = CType(Me.Table,table_Received_ByDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Received_By() As String
            Get
                Return CType(Me(Me.tabletable_Received_By.Received_ByColumn),String)
            End Get
            Set
                Me(Me.tabletable_Received_By.Received_ByColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_Sample_PreparationRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_Sample_Preparation As table_Sample_PreparationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_Sample_Preparation = CType(Me.Table,table_Sample_PreparationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Cleaning() As Boolean
            Get
                Return CType(Me(Me.tabletable_Sample_Preparation.CleaningColumn),Boolean)
            End Get
            Set
                Me(Me.tabletable_Sample_Preparation.CleaningColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Drying() As Boolean
            Get
                Return CType(Me(Me.tabletable_Sample_Preparation.DryingColumn),Boolean)
            End Get
            Set
                Me(Me.tabletable_Sample_Preparation.DryingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Evaporation() As Boolean
            Get
                Return CType(Me(Me.tabletable_Sample_Preparation.EvaporationColumn),Boolean)
            End Get
            Set
                Me(Me.tabletable_Sample_Preparation.EvaporationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Freeze_Drying() As Boolean
            Get
                Return CType(Me(Me.tabletable_Sample_Preparation.Freeze_DryingColumn),Boolean)
            End Get
            Set
                Me(Me.tabletable_Sample_Preparation.Freeze_DryingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Homogenizing() As Boolean
            Get
                Return CType(Me(Me.tabletable_Sample_Preparation.HomogenizingColumn),Boolean)
            End Get
            Set
                Me(Me.tabletable_Sample_Preparation.HomogenizingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Pelletization() As Boolean
            Get
                Return CType(Me(Me.tabletable_Sample_Preparation.PelletizationColumn),Boolean)
            End Get
            Set
                Me(Me.tabletable_Sample_Preparation.PelletizationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Fragmentation() As Boolean
            Get
                Return CType(Me(Me.tabletable_Sample_Preparation.FragmentationColumn),Boolean)
            End Get
            Set
                Me(Me.tabletable_Sample_Preparation.FragmentationColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_Sample_SetRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_Sample_Set As table_Sample_SetDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_Sample_Set = CType(Me.Table,table_Sample_SetDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Country_Code() As String
            Get
                Return CType(Me(Me.tabletable_Sample_Set.Country_CodeColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_Set.Country_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Client_ID() As String
            Get
                Return CType(Me(Me.tabletable_Sample_Set.Client_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_Set.Client_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Year() As String
            Get
                Return CType(Me(Me.tabletable_Sample_Set.YearColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_Set.YearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Sample_Set_ID() As String
            Get
                Return CType(Me(Me.tabletable_Sample_Set.Sample_Set_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_Set.Sample_Set_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Sample_Set_Index() As String
            Get
                Return CType(Me(Me.tabletable_Sample_Set.Sample_Set_IndexColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_Set.Sample_Set_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Sample_Set_Receipt_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_Set.Sample_Set_Receipt_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sample_Set_Receipt_Date' in table 'table_Sample_Set' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_Set.Sample_Set_Receipt_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Sample_Set_Report_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_Set.Sample_Set_Report_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sample_Set_Report_Date' in table 'table_Sample_Set' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_Set.Sample_Set_Report_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Received_By() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_Set.Received_ByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Received_By' in table 'table_Sample_Set' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_Set.Received_ByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property table_ClientRowParent() As table_ClientRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_table_Sample_Set_table_Client")),table_ClientRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_table_Sample_Set_table_Client"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSample_Set_Receipt_DateNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_Set.Sample_Set_Receipt_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSample_Set_Receipt_DateNull()
            Me(Me.tabletable_Sample_Set.Sample_Set_Receipt_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSample_Set_Report_DateNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_Set.Sample_Set_Report_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSample_Set_Report_DateNull()
            Me(Me.tabletable_Sample_Set.Sample_Set_Report_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReceived_ByNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_Set.Received_ByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReceived_ByNull()
            Me(Me.tabletable_Sample_Set.Received_ByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettable_SampleRows() As table_SampleRow()
            If (Me.Table.ChildRelations("FK_table_Sample_table_Sample_Set") Is Nothing) Then
                Return New table_SampleRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_table_Sample_table_Sample_Set")),table_SampleRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettable_Sample_Sample_PreparationRows() As table_Sample_Sample_PreparationRow()
            If (Me.Table.ChildRelations("FK_table_Sample_table_Sample_Set1") Is Nothing) Then
                Return New table_Sample_Sample_PreparationRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_table_Sample_table_Sample_Set1")),table_Sample_Sample_PreparationRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettable_Sample_NAA_ResultsRows() As table_Sample_NAA_ResultsRow()
            If (Me.Table.ChildRelations("FK_table_Sample_table_Sample_Set2") Is Nothing) Then
                Return New table_Sample_NAA_ResultsRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_table_Sample_table_Sample_Set2")),table_Sample_NAA_ResultsRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_Sample_TypeRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_Sample_Type As table_Sample_TypeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_Sample_Type = CType(Me.Table,table_Sample_TypeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SampleType() As String
            Get
                Return CType(Me(Me.tabletable_Sample_Type.SampleTypeColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_Type.SampleTypeColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_SampleRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_Sample As table_SampleDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_Sample = CType(Me.Table,table_SampleDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property F_Country_Code() As String
            Get
                Return CType(Me(Me.tabletable_Sample.F_Country_CodeColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample.F_Country_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property F_Client_ID() As String
            Get
                Return CType(Me(Me.tabletable_Sample.F_Client_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample.F_Client_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property F_Year() As String
            Get
                Return CType(Me(Me.tabletable_Sample.F_YearColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample.F_YearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property F_Sample_Set_ID() As String
            Get
                Return CType(Me(Me.tabletable_Sample.F_Sample_Set_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample.F_Sample_Set_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property F_Sample_Set_Index() As String
            Get
                Return CType(Me(Me.tabletable_Sample.F_Sample_Set_IndexColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample.F_Sample_Set_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Sample_ID() As String
            Get
                Return CType(Me(Me.tabletable_Sample.A_Sample_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample.A_Sample_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Client_Sample_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Client_Sample_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Client_Sample_ID' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Client_Sample_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Sample_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Sample_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Sample_Type' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Sample_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Sample_Subtype() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Sample_SubtypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Sample_Subtype' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Sample_SubtypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Collection_Place() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Collection_PlaceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Collection_Place' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Collection_PlaceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Latitude() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_LatitudeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Latitude' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_LatitudeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Longitude() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_LongitudeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Longitude' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_LongitudeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Cleaning_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Cleaning_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Cleaning_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Cleaning_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Drying_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Drying_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Drying_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Drying_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Evaporation_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Evaporation_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Evaporation_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Evaporation_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Freeze_Drying_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Freeze_Drying_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Freeze_Drying_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Freeze_Drying_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Homogenizing_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Homogenizing_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Homogenizing_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Homogenizing_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Pelletization_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Pelletization_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Pelletization_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Pelletization_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Fragmentation_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Fragmentation_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Fragmentation_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Fragmentation_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Determined_Elements() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Determined_ElementsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Determined_Elements' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Determined_ElementsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Halogens_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Halogens_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Halogens_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Halogens_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Heavy_Metals_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Heavy_Metals_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Heavy_Metals_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Heavy_Metals_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Short_Lived_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Short_Lived_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Short_Lived_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Short_Lived_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Long_Lived_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Long_Lived_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Long_Lived_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Long_Lived_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_F_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_F_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_F_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_F_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Na_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Na_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Na_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Na_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Mg_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Mg_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Mg_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Mg_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Al_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Al_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Al_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Al_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Si_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Si_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Si_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Si_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_S_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_S_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_S_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_S_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Cl_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Cl_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Cl_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Cl_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_K_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_K_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_K_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_K_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Ca_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Ca_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Ca_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Ca_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Sc_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Sc_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Sc_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Sc_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Ti_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Ti_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Ti_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Ti_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_V_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_V_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_V_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_V_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Cr_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Cr_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Cr_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Cr_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Mn_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Mn_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Mn_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Mn_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Fe_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Fe_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Fe_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Fe_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Co_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Co_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Co_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Co_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Cu_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Cu_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Cu_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Cu_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Zn_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Zn_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Zn_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Zn_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Ga_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Ga_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Ga_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Ga_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_As_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_As_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_As_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_As_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Se_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Se_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Se_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Se_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Br_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Br_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Br_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Br_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Rb_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Rb_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Rb_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Rb_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Sr_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Sr_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Sr_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Sr_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Y_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Y_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Y_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Y_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Zr_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Zr_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Zr_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Zr_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Nb_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Nb_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Nb_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Nb_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Mo_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Mo_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Mo_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Mo_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Ru_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Ru_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Ru_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Ru_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Ag_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Ag_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Ag_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Ag_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Cd_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Cd_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Cd_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Cd_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_In_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_In_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_In_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_In_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Sn_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Sn_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Sn_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Sn_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Sb_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Sb_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Sb_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Sb_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_I_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_I_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_I_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_I_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Cs_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Cs_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Cs_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Cs_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Ba_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Ba_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Ba_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Ba_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_La_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_La_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_La_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_La_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Ce_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Ce_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Ce_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Ce_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Nd_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Nd_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Nd_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Nd_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Sm_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Sm_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Sm_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Sm_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Eu_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Eu_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Eu_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Eu_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Gd_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Gd_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Gd_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Gd_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Tb_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Tb_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Tb_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Tb_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Dy_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Dy_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Dy_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Dy_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Er_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Er_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Er_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Er_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Tm_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Tm_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Tm_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Tm_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Yb_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Yb_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Yb_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Yb_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Lu_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Lu_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Lu_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Lu_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Hf_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Hf_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Hf_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Hf_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Ta_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Ta_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Ta_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Ta_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_W_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_W_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_W_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_W_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Re_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Re_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Re_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Re_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Ir_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Ir_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Ir_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Ir_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Pt_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Pt_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Pt_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Pt_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Au_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Au_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Au_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Au_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Hg_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Hg_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Hg_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Hg_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Th_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Th_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Th_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Th_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_U_Plan() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_U_PlanColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_U_Plan' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_U_PlanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Cupboard_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Cupboard_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Cupboard_Number' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Cupboard_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Box_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Box_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Box_Number' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Box_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Received_By() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_Received_ByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Received_By' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_Received_ByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Notes() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.A_NotesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Notes' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.A_NotesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Cleaning_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.P_Cleaning_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Cleaning_Fact' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.P_Cleaning_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Drying_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.P_Drying_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Drying_Fact' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.P_Drying_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Evaporation_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.P_Evaporation_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Evaporation_Fact' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.P_Evaporation_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Freeze_Drying_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.P_Freeze_Drying_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Freeze_Drying_Fact' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.P_Freeze_Drying_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Homogenizing_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.P_Homogenizing_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Homogenizing_Fact' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.P_Homogenizing_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Pelletization_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.P_Pelletization_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Pelletization_Fact' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.P_Pelletization_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Fragmentation_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.P_Fragmentation_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Fragmentation_Fact' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.P_Fragmentation_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Weighting_SLI() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.P_Weighting_SLIColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Weighting_SLI' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.P_Weighting_SLIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Weighting_LLI() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.P_Weighting_LLIColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Weighting_LLI' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.P_Weighting_LLIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Date_Sample_Preparation() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.P_Date_Sample_PreparationColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Date_Sample_Preparation' in table 'table_Sample' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.P_Date_Sample_PreparationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Maked_By() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.P_Maked_ByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Maked_By' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.P_Maked_ByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_SLI_Time_Start() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_SLI_Time_StartColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_SLI_Time_Start' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_SLI_Time_StartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_SLI_Channel_Irradiation() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_SLI_Channel_IrradiationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_SLI_Channel_Irradiation' in table 'table_Sample' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_SLI_Channel_IrradiationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_SLI_File_First() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_SLI_File_FirstColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_SLI_File_First' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_SLI_File_FirstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_SLI_Irradiated_By() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_SLI_Irradiated_ByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_SLI_Irradiated_By' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_SLI_Irradiated_ByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_1_Irradiation_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_1_Irradiation_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_1_Irradiation_Fact' in table 'table_Sample' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_1_Irradiation_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_1_Date_Start() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_1_Date_StartColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_1_Date_Start' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_1_Date_StartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_1_Time_Start() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_1_Time_StartColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_1_Time_Start' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_1_Time_StartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_1_Date_Finish() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_1_Date_FinishColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_1_Date_Finish' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_1_Date_FinishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_1_Time_Finish() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_1_Time_FinishColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_1_Time_Finish' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_1_Time_FinishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_1_Channel_Irradiation() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_1_Channel_IrradiationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_1_Channel_Irradiation' in table 'table_Sample' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_1_Channel_IrradiationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_1_Detector_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_1_Detector_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_1_Detector_Number' in table 'table_Sample' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_1_Detector_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_1_File_First() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_1_File_FirstColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_1_File_First' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_1_File_FirstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_1_File_Last() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_1_File_LastColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_1_File_Last' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_1_File_LastColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_1_Irradiated_By() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_1_Irradiated_ByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_1_Irradiated_By' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_1_Irradiated_ByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_1_Irradiation_Log() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_1_Irradiation_LogColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_1_Irradiation_Log' in table 'table_Sample' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_1_Irradiation_LogColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_2_Irradiation_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_2_Irradiation_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_2_Irradiation_Fact' in table 'table_Sample' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_2_Irradiation_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_2_Date_Start() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_2_Date_StartColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_2_Date_Start' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_2_Date_StartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_2_Time_Start() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_2_Time_StartColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_2_Time_Start' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_2_Time_StartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_2_Date_Finish() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_2_Date_FinishColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_2_Date_Finish' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_2_Date_FinishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_2_Time_Finish() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_2_Time_FinishColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_2_Time_Finish' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_2_Time_FinishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_2_Channel_Irradiation() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_2_Channel_IrradiationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_2_Channel_Irradiation' in table 'table_Sample' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_2_Channel_IrradiationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_2_Detector_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_2_Detector_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_2_Detector_Number' in table 'table_Sample' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_2_Detector_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_2_File_First() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_2_File_FirstColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_2_File_First' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_2_File_FirstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_2_File_Last() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_2_File_LastColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_2_File_Last' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_2_File_LastColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_2_Irradiated_By() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_2_Irradiated_ByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_2_Irradiated_By' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_2_Irradiated_ByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_LLI_2_Irradiation_Log() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_LLI_2_Irradiation_LogColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_LLI_2_Irradiation_Log' in table 'table_Sample' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_LLI_2_Irradiation_LogColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_SLI_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_SLI_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_SLI_Date' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_SLI_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_SLI_Duration() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_SLI_DurationColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_SLI_Duration' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_SLI_DurationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_SLI_Irradiation_Log_Number() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_SLI_Irradiation_Log_NumberColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_SLI_Irradiation_Log_Number' in table 'table_Sample' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_SLI_Irradiation_Log_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_SLI_Measured_By() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_SLI_Measured_ByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_SLI_Measured_By' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_SLI_Measured_ByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_SLI_Detector_1() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_SLI_Detector_1Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_SLI_Detector_1' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_SLI_Detector_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_SLI_Detector_2() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_SLI_Detector_2Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_SLI_Detector_2' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_SLI_Detector_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_SLI_Detector_3() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_SLI_Detector_3Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_SLI_Detector_3' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_SLI_Detector_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_SLI_Detector_4() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_SLI_Detector_4Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_SLI_Detector_4' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_SLI_Detector_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_SLI_File_Last() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_SLI_File_LastColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_SLI_File_Last' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_SLI_File_LastColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property I_SLI_Duration1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample.I_SLI_Duration1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_SLI_Duration1' in table 'table_Sample' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample.I_SLI_Duration1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property table_Sample_SetRowParent() As table_Sample_SetRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_table_Sample_table_Sample_Set")),table_Sample_SetRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_table_Sample_table_Sample_Set"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Client_Sample_IDNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Client_Sample_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Client_Sample_IDNull()
            Me(Me.tabletable_Sample.A_Client_Sample_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Sample_TypeNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Sample_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Sample_TypeNull()
            Me(Me.tabletable_Sample.A_Sample_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Sample_SubtypeNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Sample_SubtypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Sample_SubtypeNull()
            Me(Me.tabletable_Sample.A_Sample_SubtypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Collection_PlaceNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Collection_PlaceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Collection_PlaceNull()
            Me(Me.tabletable_Sample.A_Collection_PlaceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_LatitudeNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_LatitudeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_LatitudeNull()
            Me(Me.tabletable_Sample.A_LatitudeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_LongitudeNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_LongitudeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_LongitudeNull()
            Me(Me.tabletable_Sample.A_LongitudeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Cleaning_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Cleaning_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Cleaning_PlanNull()
            Me(Me.tabletable_Sample.A_Cleaning_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Drying_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Drying_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Drying_PlanNull()
            Me(Me.tabletable_Sample.A_Drying_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Evaporation_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Evaporation_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Evaporation_PlanNull()
            Me(Me.tabletable_Sample.A_Evaporation_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Freeze_Drying_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Freeze_Drying_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Freeze_Drying_PlanNull()
            Me(Me.tabletable_Sample.A_Freeze_Drying_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Homogenizing_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Homogenizing_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Homogenizing_PlanNull()
            Me(Me.tabletable_Sample.A_Homogenizing_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Pelletization_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Pelletization_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Pelletization_PlanNull()
            Me(Me.tabletable_Sample.A_Pelletization_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Fragmentation_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Fragmentation_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Fragmentation_PlanNull()
            Me(Me.tabletable_Sample.A_Fragmentation_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Determined_ElementsNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Determined_ElementsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Determined_ElementsNull()
            Me(Me.tabletable_Sample.A_Determined_ElementsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Halogens_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Halogens_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Halogens_PlanNull()
            Me(Me.tabletable_Sample.A_Halogens_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Heavy_Metals_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Heavy_Metals_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Heavy_Metals_PlanNull()
            Me(Me.tabletable_Sample.A_Heavy_Metals_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Short_Lived_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Short_Lived_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Short_Lived_PlanNull()
            Me(Me.tabletable_Sample.A_Short_Lived_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Long_Lived_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Long_Lived_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Long_Lived_PlanNull()
            Me(Me.tabletable_Sample.A_Long_Lived_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_F_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_F_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_F_PlanNull()
            Me(Me.tabletable_Sample.A_F_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Na_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Na_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Na_PlanNull()
            Me(Me.tabletable_Sample.A_Na_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Mg_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Mg_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Mg_PlanNull()
            Me(Me.tabletable_Sample.A_Mg_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Al_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Al_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Al_PlanNull()
            Me(Me.tabletable_Sample.A_Al_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Si_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Si_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Si_PlanNull()
            Me(Me.tabletable_Sample.A_Si_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_S_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_S_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_S_PlanNull()
            Me(Me.tabletable_Sample.A_S_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Cl_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Cl_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Cl_PlanNull()
            Me(Me.tabletable_Sample.A_Cl_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_K_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_K_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_K_PlanNull()
            Me(Me.tabletable_Sample.A_K_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Ca_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Ca_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Ca_PlanNull()
            Me(Me.tabletable_Sample.A_Ca_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Sc_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Sc_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Sc_PlanNull()
            Me(Me.tabletable_Sample.A_Sc_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Ti_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Ti_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Ti_PlanNull()
            Me(Me.tabletable_Sample.A_Ti_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_V_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_V_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_V_PlanNull()
            Me(Me.tabletable_Sample.A_V_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Cr_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Cr_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Cr_PlanNull()
            Me(Me.tabletable_Sample.A_Cr_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Mn_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Mn_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Mn_PlanNull()
            Me(Me.tabletable_Sample.A_Mn_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Fe_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Fe_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Fe_PlanNull()
            Me(Me.tabletable_Sample.A_Fe_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Co_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Co_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Co_PlanNull()
            Me(Me.tabletable_Sample.A_Co_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Cu_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Cu_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Cu_PlanNull()
            Me(Me.tabletable_Sample.A_Cu_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Zn_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Zn_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Zn_PlanNull()
            Me(Me.tabletable_Sample.A_Zn_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Ga_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Ga_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Ga_PlanNull()
            Me(Me.tabletable_Sample.A_Ga_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_As_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_As_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_As_PlanNull()
            Me(Me.tabletable_Sample.A_As_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Se_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Se_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Se_PlanNull()
            Me(Me.tabletable_Sample.A_Se_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Br_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Br_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Br_PlanNull()
            Me(Me.tabletable_Sample.A_Br_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Rb_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Rb_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Rb_PlanNull()
            Me(Me.tabletable_Sample.A_Rb_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Sr_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Sr_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Sr_PlanNull()
            Me(Me.tabletable_Sample.A_Sr_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Y_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Y_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Y_PlanNull()
            Me(Me.tabletable_Sample.A_Y_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Zr_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Zr_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Zr_PlanNull()
            Me(Me.tabletable_Sample.A_Zr_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Nb_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Nb_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Nb_PlanNull()
            Me(Me.tabletable_Sample.A_Nb_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Mo_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Mo_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Mo_PlanNull()
            Me(Me.tabletable_Sample.A_Mo_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Ru_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Ru_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Ru_PlanNull()
            Me(Me.tabletable_Sample.A_Ru_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Ag_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Ag_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Ag_PlanNull()
            Me(Me.tabletable_Sample.A_Ag_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Cd_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Cd_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Cd_PlanNull()
            Me(Me.tabletable_Sample.A_Cd_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_In_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_In_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_In_PlanNull()
            Me(Me.tabletable_Sample.A_In_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Sn_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Sn_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Sn_PlanNull()
            Me(Me.tabletable_Sample.A_Sn_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Sb_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Sb_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Sb_PlanNull()
            Me(Me.tabletable_Sample.A_Sb_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_I_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_I_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_I_PlanNull()
            Me(Me.tabletable_Sample.A_I_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Cs_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Cs_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Cs_PlanNull()
            Me(Me.tabletable_Sample.A_Cs_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Ba_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Ba_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Ba_PlanNull()
            Me(Me.tabletable_Sample.A_Ba_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_La_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_La_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_La_PlanNull()
            Me(Me.tabletable_Sample.A_La_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Ce_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Ce_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Ce_PlanNull()
            Me(Me.tabletable_Sample.A_Ce_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Nd_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Nd_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Nd_PlanNull()
            Me(Me.tabletable_Sample.A_Nd_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Sm_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Sm_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Sm_PlanNull()
            Me(Me.tabletable_Sample.A_Sm_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Eu_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Eu_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Eu_PlanNull()
            Me(Me.tabletable_Sample.A_Eu_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Gd_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Gd_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Gd_PlanNull()
            Me(Me.tabletable_Sample.A_Gd_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Tb_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Tb_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Tb_PlanNull()
            Me(Me.tabletable_Sample.A_Tb_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Dy_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Dy_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Dy_PlanNull()
            Me(Me.tabletable_Sample.A_Dy_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Er_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Er_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Er_PlanNull()
            Me(Me.tabletable_Sample.A_Er_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Tm_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Tm_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Tm_PlanNull()
            Me(Me.tabletable_Sample.A_Tm_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Yb_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Yb_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Yb_PlanNull()
            Me(Me.tabletable_Sample.A_Yb_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Lu_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Lu_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Lu_PlanNull()
            Me(Me.tabletable_Sample.A_Lu_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Hf_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Hf_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Hf_PlanNull()
            Me(Me.tabletable_Sample.A_Hf_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Ta_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Ta_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Ta_PlanNull()
            Me(Me.tabletable_Sample.A_Ta_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_W_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_W_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_W_PlanNull()
            Me(Me.tabletable_Sample.A_W_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Re_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Re_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Re_PlanNull()
            Me(Me.tabletable_Sample.A_Re_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Ir_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Ir_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Ir_PlanNull()
            Me(Me.tabletable_Sample.A_Ir_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Pt_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Pt_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Pt_PlanNull()
            Me(Me.tabletable_Sample.A_Pt_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Au_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Au_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Au_PlanNull()
            Me(Me.tabletable_Sample.A_Au_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Hg_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Hg_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Hg_PlanNull()
            Me(Me.tabletable_Sample.A_Hg_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Th_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Th_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Th_PlanNull()
            Me(Me.tabletable_Sample.A_Th_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_U_PlanNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_U_PlanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_U_PlanNull()
            Me(Me.tabletable_Sample.A_U_PlanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Cupboard_NumberNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Cupboard_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Cupboard_NumberNull()
            Me(Me.tabletable_Sample.A_Cupboard_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Box_NumberNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Box_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Box_NumberNull()
            Me(Me.tabletable_Sample.A_Box_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Received_ByNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_Received_ByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Received_ByNull()
            Me(Me.tabletable_Sample.A_Received_ByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_NotesNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.A_NotesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_NotesNull()
            Me(Me.tabletable_Sample.A_NotesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Cleaning_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.P_Cleaning_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Cleaning_FactNull()
            Me(Me.tabletable_Sample.P_Cleaning_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Drying_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.P_Drying_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Drying_FactNull()
            Me(Me.tabletable_Sample.P_Drying_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Evaporation_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.P_Evaporation_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Evaporation_FactNull()
            Me(Me.tabletable_Sample.P_Evaporation_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Freeze_Drying_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.P_Freeze_Drying_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Freeze_Drying_FactNull()
            Me(Me.tabletable_Sample.P_Freeze_Drying_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Homogenizing_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.P_Homogenizing_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Homogenizing_FactNull()
            Me(Me.tabletable_Sample.P_Homogenizing_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Pelletization_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.P_Pelletization_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Pelletization_FactNull()
            Me(Me.tabletable_Sample.P_Pelletization_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Fragmentation_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.P_Fragmentation_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Fragmentation_FactNull()
            Me(Me.tabletable_Sample.P_Fragmentation_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Weighting_SLINull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.P_Weighting_SLIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Weighting_SLINull()
            Me(Me.tabletable_Sample.P_Weighting_SLIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Weighting_LLINull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.P_Weighting_LLIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Weighting_LLINull()
            Me(Me.tabletable_Sample.P_Weighting_LLIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Date_Sample_PreparationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.P_Date_Sample_PreparationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Date_Sample_PreparationNull()
            Me(Me.tabletable_Sample.P_Date_Sample_PreparationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Maked_ByNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.P_Maked_ByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Maked_ByNull()
            Me(Me.tabletable_Sample.P_Maked_ByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_SLI_Time_StartNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_SLI_Time_StartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_SLI_Time_StartNull()
            Me(Me.tabletable_Sample.I_SLI_Time_StartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_SLI_Channel_IrradiationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_SLI_Channel_IrradiationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_SLI_Channel_IrradiationNull()
            Me(Me.tabletable_Sample.I_SLI_Channel_IrradiationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_SLI_File_FirstNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_SLI_File_FirstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_SLI_File_FirstNull()
            Me(Me.tabletable_Sample.I_SLI_File_FirstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_SLI_Irradiated_ByNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_SLI_Irradiated_ByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_SLI_Irradiated_ByNull()
            Me(Me.tabletable_Sample.I_SLI_Irradiated_ByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_1_Irradiation_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_1_Irradiation_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_1_Irradiation_FactNull()
            Me(Me.tabletable_Sample.I_LLI_1_Irradiation_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_1_Date_StartNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_1_Date_StartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_1_Date_StartNull()
            Me(Me.tabletable_Sample.I_LLI_1_Date_StartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_1_Time_StartNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_1_Time_StartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_1_Time_StartNull()
            Me(Me.tabletable_Sample.I_LLI_1_Time_StartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_1_Date_FinishNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_1_Date_FinishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_1_Date_FinishNull()
            Me(Me.tabletable_Sample.I_LLI_1_Date_FinishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_1_Time_FinishNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_1_Time_FinishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_1_Time_FinishNull()
            Me(Me.tabletable_Sample.I_LLI_1_Time_FinishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_1_Channel_IrradiationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_1_Channel_IrradiationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_1_Channel_IrradiationNull()
            Me(Me.tabletable_Sample.I_LLI_1_Channel_IrradiationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_1_Detector_NumberNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_1_Detector_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_1_Detector_NumberNull()
            Me(Me.tabletable_Sample.I_LLI_1_Detector_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_1_File_FirstNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_1_File_FirstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_1_File_FirstNull()
            Me(Me.tabletable_Sample.I_LLI_1_File_FirstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_1_File_LastNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_1_File_LastColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_1_File_LastNull()
            Me(Me.tabletable_Sample.I_LLI_1_File_LastColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_1_Irradiated_ByNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_1_Irradiated_ByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_1_Irradiated_ByNull()
            Me(Me.tabletable_Sample.I_LLI_1_Irradiated_ByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_1_Irradiation_LogNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_1_Irradiation_LogColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_1_Irradiation_LogNull()
            Me(Me.tabletable_Sample.I_LLI_1_Irradiation_LogColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_2_Irradiation_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_2_Irradiation_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_2_Irradiation_FactNull()
            Me(Me.tabletable_Sample.I_LLI_2_Irradiation_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_2_Date_StartNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_2_Date_StartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_2_Date_StartNull()
            Me(Me.tabletable_Sample.I_LLI_2_Date_StartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_2_Time_StartNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_2_Time_StartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_2_Time_StartNull()
            Me(Me.tabletable_Sample.I_LLI_2_Time_StartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_2_Date_FinishNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_2_Date_FinishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_2_Date_FinishNull()
            Me(Me.tabletable_Sample.I_LLI_2_Date_FinishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_2_Time_FinishNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_2_Time_FinishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_2_Time_FinishNull()
            Me(Me.tabletable_Sample.I_LLI_2_Time_FinishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_2_Channel_IrradiationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_2_Channel_IrradiationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_2_Channel_IrradiationNull()
            Me(Me.tabletable_Sample.I_LLI_2_Channel_IrradiationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_2_Detector_NumberNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_2_Detector_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_2_Detector_NumberNull()
            Me(Me.tabletable_Sample.I_LLI_2_Detector_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_2_File_FirstNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_2_File_FirstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_2_File_FirstNull()
            Me(Me.tabletable_Sample.I_LLI_2_File_FirstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_2_File_LastNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_2_File_LastColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_2_File_LastNull()
            Me(Me.tabletable_Sample.I_LLI_2_File_LastColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_2_Irradiated_ByNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_2_Irradiated_ByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_2_Irradiated_ByNull()
            Me(Me.tabletable_Sample.I_LLI_2_Irradiated_ByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_LLI_2_Irradiation_LogNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_LLI_2_Irradiation_LogColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_LLI_2_Irradiation_LogNull()
            Me(Me.tabletable_Sample.I_LLI_2_Irradiation_LogColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_SLI_DateNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_SLI_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_SLI_DateNull()
            Me(Me.tabletable_Sample.I_SLI_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_SLI_DurationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_SLI_DurationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_SLI_DurationNull()
            Me(Me.tabletable_Sample.I_SLI_DurationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_SLI_Irradiation_Log_NumberNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_SLI_Irradiation_Log_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_SLI_Irradiation_Log_NumberNull()
            Me(Me.tabletable_Sample.I_SLI_Irradiation_Log_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_SLI_Measured_ByNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_SLI_Measured_ByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_SLI_Measured_ByNull()
            Me(Me.tabletable_Sample.I_SLI_Measured_ByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_SLI_Detector_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_SLI_Detector_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_SLI_Detector_1Null()
            Me(Me.tabletable_Sample.I_SLI_Detector_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_SLI_Detector_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_SLI_Detector_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_SLI_Detector_2Null()
            Me(Me.tabletable_Sample.I_SLI_Detector_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_SLI_Detector_3Null() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_SLI_Detector_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_SLI_Detector_3Null()
            Me(Me.tabletable_Sample.I_SLI_Detector_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_SLI_Detector_4Null() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_SLI_Detector_4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_SLI_Detector_4Null()
            Me(Me.tabletable_Sample.I_SLI_Detector_4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_SLI_File_LastNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_SLI_File_LastColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_SLI_File_LastNull()
            Me(Me.tabletable_Sample.I_SLI_File_LastColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsI_SLI_Duration1Null() As Boolean
            Return Me.IsNull(Me.tabletable_Sample.I_SLI_Duration1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetI_SLI_Duration1Null()
            Me(Me.tabletable_Sample.I_SLI_Duration1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettable_SLI_Irradiation_LogRows() As table_SLI_Irradiation_LogRow()
            If (Me.Table.ChildRelations("FK_table_SLI_Irradiation_Log_table_Sample") Is Nothing) Then
                Return New table_SLI_Irradiation_LogRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_table_SLI_Irradiation_Log_table_Sample")),table_SLI_Irradiation_LogRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettable_LLI_Irradiation_LogRows() As table_LLI_Irradiation_LogRow()
            If (Me.Table.ChildRelations("FK_table_LLI_Irradiation_Log_table_Sample") Is Nothing) Then
                Return New table_LLI_Irradiation_LogRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_table_LLI_Irradiation_Log_table_Sample")),table_LLI_Irradiation_LogRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_Sample_Sample_PreparationRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_Sample_Sample_Preparation As table_Sample_Sample_PreparationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_Sample_Sample_Preparation = CType(Me.Table,table_Sample_Sample_PreparationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Sample_ID() As String
            Get
                Return CType(Me(Me.tabletable_Sample_Sample_Preparation.A_Sample_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.A_Sample_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Client_Sample_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_Sample_Preparation.A_Client_Sample_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Client_Sample_ID' in table 'table_Sample_Sample_Preparati"& _ 
                            "on' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.A_Client_Sample_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Cleaning_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_Sample_Preparation.P_Cleaning_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Cleaning_Fact' in table 'table_Sample_Sample_Preparation'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.P_Cleaning_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Drying_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_Sample_Preparation.P_Drying_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Drying_Fact' in table 'table_Sample_Sample_Preparation' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.P_Drying_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Evaporation_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_Sample_Preparation.P_Evaporation_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Evaporation_Fact' in table 'table_Sample_Sample_Preparati"& _ 
                            "on' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.P_Evaporation_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Freeze_Drying_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_Sample_Preparation.P_Freeze_Drying_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Freeze_Drying_Fact' in table 'table_Sample_Sample_Prepara"& _ 
                            "tion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.P_Freeze_Drying_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Homogenizing_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_Sample_Preparation.P_Homogenizing_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Homogenizing_Fact' in table 'table_Sample_Sample_Preparat"& _ 
                            "ion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.P_Homogenizing_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Pelletization_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_Sample_Preparation.P_Pelletization_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Pelletization_Fact' in table 'table_Sample_Sample_Prepara"& _ 
                            "tion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.P_Pelletization_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Fragmentation_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_Sample_Preparation.P_Fragmentation_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Fragmentation_Fact' in table 'table_Sample_Sample_Prepara"& _ 
                            "tion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.P_Fragmentation_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Weighting_SLI() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_Sample_Preparation.P_Weighting_SLIColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Weighting_SLI' in table 'table_Sample_Sample_Preparation'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.P_Weighting_SLIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Weighting_LLI() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_Sample_Preparation.P_Weighting_LLIColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Weighting_LLI' in table 'table_Sample_Sample_Preparation'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.P_Weighting_LLIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Date_Sample_Preparation() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_Sample_Preparation.P_Date_Sample_PreparationColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Date_Sample_Preparation' in table 'table_Sample_Sample_Pr"& _ 
                            "eparation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.P_Date_Sample_PreparationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property P_Maked_By() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_Sample_Preparation.P_Maked_ByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_Maked_By' in table 'table_Sample_Sample_Preparation' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.P_Maked_ByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property F_Country_Code() As String
            Get
                Return CType(Me(Me.tabletable_Sample_Sample_Preparation.F_Country_CodeColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.F_Country_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property F_Client_ID() As String
            Get
                Return CType(Me(Me.tabletable_Sample_Sample_Preparation.F_Client_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.F_Client_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property F_Year() As String
            Get
                Return CType(Me(Me.tabletable_Sample_Sample_Preparation.F_YearColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.F_YearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property F_Sample_Set_ID() As String
            Get
                Return CType(Me(Me.tabletable_Sample_Sample_Preparation.F_Sample_Set_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.F_Sample_Set_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property F_Sample_Set_Index() As String
            Get
                Return CType(Me(Me.tabletable_Sample_Sample_Preparation.F_Sample_Set_IndexColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_Sample_Preparation.F_Sample_Set_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property table_Sample_SetRowParent() As table_Sample_SetRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_table_Sample_table_Sample_Set1")),table_Sample_SetRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_table_Sample_table_Sample_Set1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Client_Sample_IDNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_Sample_Preparation.A_Client_Sample_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Client_Sample_IDNull()
            Me(Me.tabletable_Sample_Sample_Preparation.A_Client_Sample_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Cleaning_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_Sample_Preparation.P_Cleaning_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Cleaning_FactNull()
            Me(Me.tabletable_Sample_Sample_Preparation.P_Cleaning_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Drying_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_Sample_Preparation.P_Drying_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Drying_FactNull()
            Me(Me.tabletable_Sample_Sample_Preparation.P_Drying_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Evaporation_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_Sample_Preparation.P_Evaporation_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Evaporation_FactNull()
            Me(Me.tabletable_Sample_Sample_Preparation.P_Evaporation_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Freeze_Drying_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_Sample_Preparation.P_Freeze_Drying_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Freeze_Drying_FactNull()
            Me(Me.tabletable_Sample_Sample_Preparation.P_Freeze_Drying_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Homogenizing_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_Sample_Preparation.P_Homogenizing_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Homogenizing_FactNull()
            Me(Me.tabletable_Sample_Sample_Preparation.P_Homogenizing_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Pelletization_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_Sample_Preparation.P_Pelletization_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Pelletization_FactNull()
            Me(Me.tabletable_Sample_Sample_Preparation.P_Pelletization_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Fragmentation_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_Sample_Preparation.P_Fragmentation_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Fragmentation_FactNull()
            Me(Me.tabletable_Sample_Sample_Preparation.P_Fragmentation_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Weighting_SLINull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_Sample_Preparation.P_Weighting_SLIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Weighting_SLINull()
            Me(Me.tabletable_Sample_Sample_Preparation.P_Weighting_SLIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Weighting_LLINull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_Sample_Preparation.P_Weighting_LLIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Weighting_LLINull()
            Me(Me.tabletable_Sample_Sample_Preparation.P_Weighting_LLIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Date_Sample_PreparationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_Sample_Preparation.P_Date_Sample_PreparationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Date_Sample_PreparationNull()
            Me(Me.tabletable_Sample_Sample_Preparation.P_Date_Sample_PreparationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsP_Maked_ByNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_Sample_Preparation.P_Maked_ByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetP_Maked_ByNull()
            Me(Me.tabletable_Sample_Sample_Preparation.P_Maked_ByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettable_SLI_Irradiation_LogRows() As table_SLI_Irradiation_LogRow()
            If (Me.Table.ChildRelations("FK_table_SLI_Irradiation_Log_table_Sample1") Is Nothing) Then
                Return New table_SLI_Irradiation_LogRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_table_SLI_Irradiation_Log_table_Sample1")),table_SLI_Irradiation_LogRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettable_LLI_Irradiation_LogRows() As table_LLI_Irradiation_LogRow()
            If (Me.Table.ChildRelations("FK_table_LLI_Irradiation_Log_table_Sample1") Is Nothing) Then
                Return New table_LLI_Irradiation_LogRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_table_LLI_Irradiation_Log_table_Sample1")),table_LLI_Irradiation_LogRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_SLI_Irradiation_LogRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_SLI_Irradiation_Log As table_SLI_Irradiation_LogDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_SLI_Irradiation_Log = CType(Me.Table,table_SLI_Irradiation_LogDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Country_Code() As String
            Get
                Return CType(Me(Me.tabletable_SLI_Irradiation_Log.Country_CodeColumn),String)
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.Country_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Client_ID() As String
            Get
                Return CType(Me(Me.tabletable_SLI_Irradiation_Log.Client_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.Client_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Year() As String
            Get
                Return CType(Me(Me.tabletable_SLI_Irradiation_Log.YearColumn),String)
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.YearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Sample_Set_ID() As String
            Get
                Return CType(Me(Me.tabletable_SLI_Irradiation_Log.Sample_Set_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.Sample_Set_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Sample_Set_Index() As String
            Get
                Return CType(Me(Me.tabletable_SLI_Irradiation_Log.Sample_Set_IndexColumn),String)
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.Sample_Set_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Sample_ID() As String
            Get
                Return CType(Me(Me.tabletable_SLI_Irradiation_Log.Sample_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.Sample_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Date_Start() As Date
            Get
                Return CType(Me(Me.tabletable_SLI_Irradiation_Log.Date_StartColumn),Date)
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.Date_StartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Time_Start() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tabletable_SLI_Irradiation_Log.Time_StartColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Time_Start' in table 'table_SLI_Irradiation_Log' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.Time_StartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Channel() As Short
            Get
                Try 
                    Return CType(Me(Me.tabletable_SLI_Irradiation_Log.ChannelColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Channel' in table 'table_SLI_Irradiation_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.ChannelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Duration() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletable_SLI_Irradiation_Log.DurationColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Duration' in table 'table_SLI_Irradiation_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.DurationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Detector_2() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_SLI_Irradiation_Log.Detector_2Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Detector_2' in table 'table_SLI_Irradiation_Log' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.Detector_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Detector_3() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_SLI_Irradiation_Log.Detector_3Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Detector_3' in table 'table_SLI_Irradiation_Log' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.Detector_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Detector_4() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_SLI_Irradiation_Log.Detector_4Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Detector_4' in table 'table_SLI_Irradiation_Log' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.Detector_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property File_Last() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_SLI_Irradiation_Log.File_LastColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'File_Last' in table 'table_SLI_Irradiation_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.File_LastColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Irradiated_By() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_SLI_Irradiation_Log.Irradiated_ByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Irradiated_By' in table 'table_SLI_Irradiation_Log' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.Irradiated_ByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Measured_By() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_SLI_Irradiation_Log.Measured_ByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Measured_By' in table 'table_SLI_Irradiation_Log' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.Measured_ByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Paper_Log_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_SLI_Irradiation_Log.Paper_Log_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Paper_Log_Number' in table 'table_SLI_Irradiation_Log' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.Paper_Log_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Position_Number() As Short
            Get
                Try 
                    Return CType(Me(Me.tabletable_SLI_Irradiation_Log.Position_NumberColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Position_Number' in table 'table_SLI_Irradiation_Log' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.Position_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Detector_1() As Short
            Get
                Try 
                    Return CType(Me(Me.tabletable_SLI_Irradiation_Log.Detector_1Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Detector_1' in table 'table_SLI_Irradiation_Log' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.Detector_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property File_First() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_SLI_Irradiation_Log.File_FirstColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'File_First' in table 'table_SLI_Irradiation_Log' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SLI_Irradiation_Log.File_FirstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property table_SampleRowParent() As table_SampleRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_table_SLI_Irradiation_Log_table_Sample")),table_SampleRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_table_SLI_Irradiation_Log_table_Sample"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property table_Sample_Sample_PreparationRowParent() As table_Sample_Sample_PreparationRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_table_SLI_Irradiation_Log_table_Sample1")),table_Sample_Sample_PreparationRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_table_SLI_Irradiation_Log_table_Sample1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property table_MonitorRowParent() As table_MonitorRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_table_SLI_Irradiation_Log_table_Monitor")),table_MonitorRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_table_SLI_Irradiation_Log_table_Monitor"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property table_SRMRowParent() As table_SRMRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_table_SLI_Irradiation_Log_table_SRM")),table_SRMRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_table_SLI_Irradiation_Log_table_SRM"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTime_StartNull() As Boolean
            Return Me.IsNull(Me.tabletable_SLI_Irradiation_Log.Time_StartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTime_StartNull()
            Me(Me.tabletable_SLI_Irradiation_Log.Time_StartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsChannelNull() As Boolean
            Return Me.IsNull(Me.tabletable_SLI_Irradiation_Log.ChannelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetChannelNull()
            Me(Me.tabletable_SLI_Irradiation_Log.ChannelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDurationNull() As Boolean
            Return Me.IsNull(Me.tabletable_SLI_Irradiation_Log.DurationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDurationNull()
            Me(Me.tabletable_SLI_Irradiation_Log.DurationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDetector_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_SLI_Irradiation_Log.Detector_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDetector_2Null()
            Me(Me.tabletable_SLI_Irradiation_Log.Detector_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDetector_3Null() As Boolean
            Return Me.IsNull(Me.tabletable_SLI_Irradiation_Log.Detector_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDetector_3Null()
            Me(Me.tabletable_SLI_Irradiation_Log.Detector_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDetector_4Null() As Boolean
            Return Me.IsNull(Me.tabletable_SLI_Irradiation_Log.Detector_4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDetector_4Null()
            Me(Me.tabletable_SLI_Irradiation_Log.Detector_4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFile_LastNull() As Boolean
            Return Me.IsNull(Me.tabletable_SLI_Irradiation_Log.File_LastColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFile_LastNull()
            Me(Me.tabletable_SLI_Irradiation_Log.File_LastColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIrradiated_ByNull() As Boolean
            Return Me.IsNull(Me.tabletable_SLI_Irradiation_Log.Irradiated_ByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIrradiated_ByNull()
            Me(Me.tabletable_SLI_Irradiation_Log.Irradiated_ByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMeasured_ByNull() As Boolean
            Return Me.IsNull(Me.tabletable_SLI_Irradiation_Log.Measured_ByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMeasured_ByNull()
            Me(Me.tabletable_SLI_Irradiation_Log.Measured_ByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPaper_Log_NumberNull() As Boolean
            Return Me.IsNull(Me.tabletable_SLI_Irradiation_Log.Paper_Log_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPaper_Log_NumberNull()
            Me(Me.tabletable_SLI_Irradiation_Log.Paper_Log_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPosition_NumberNull() As Boolean
            Return Me.IsNull(Me.tabletable_SLI_Irradiation_Log.Position_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPosition_NumberNull()
            Me(Me.tabletable_SLI_Irradiation_Log.Position_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDetector_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_SLI_Irradiation_Log.Detector_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDetector_1Null()
            Me(Me.tabletable_SLI_Irradiation_Log.Detector_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFile_FirstNull() As Boolean
            Return Me.IsNull(Me.tabletable_SLI_Irradiation_Log.File_FirstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFile_FirstNull()
            Me(Me.tabletable_SLI_Irradiation_Log.File_FirstColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_LLI_Irradiation_LogRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_LLI_Irradiation_Log As table_LLI_Irradiation_LogDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_LLI_Irradiation_Log = CType(Me.Table,table_LLI_Irradiation_LogDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Country_Code() As String
            Get
                Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Country_CodeColumn),String)
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Country_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Client_ID() As String
            Get
                Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Client_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Client_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Year() As String
            Get
                Return CType(Me(Me.tabletable_LLI_Irradiation_Log.YearColumn),String)
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.YearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Sample_Set_ID() As String
            Get
                Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Sample_Set_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Sample_Set_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Sample_Set_Index() As String
            Get
                Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Sample_Set_IndexColumn),String)
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Sample_Set_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Sample_ID() As String
            Get
                Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Sample_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Sample_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Date_Start() As Date
            Get
                Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Date_StartColumn),Date)
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Date_StartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Time_Start() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Time_StartColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Time_Start' in table 'table_LLI_Irradiation_Log' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Time_StartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Channel() As Short
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.ChannelColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Channel' in table 'table_LLI_Irradiation_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.ChannelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Date_Finish() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Date_FinishColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date_Finish' in table 'table_LLI_Irradiation_Log' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Date_FinishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Time_Finish() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Time_FinishColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Time_Finish' in table 'table_LLI_Irradiation_Log' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Time_FinishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Power_Relief_Date_Start_1() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Start_1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Power_Relief_Date_Start_1' in table 'table_LLI_Irradiation_"& _ 
                            "Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Start_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Power_Relief_Time_Start_1() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Start_1Column),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Power_Relief_Time_Start_1' in table 'table_LLI_Irradiation_"& _ 
                            "Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Start_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Power_Relief_Date_Finish_1() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Finish_1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Power_Relief_Date_Finish_1' in table 'table_LLI_Irradiation"& _ 
                            "_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Finish_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Power_Relief_Time_Finish_1() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Finish_1Column),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Power_Relief_Time_Finish_1' in table 'table_LLI_Irradiation"& _ 
                            "_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Finish_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Power_Relief_Date_Start_2() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Start_2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Power_Relief_Date_Start_2' in table 'table_LLI_Irradiation_"& _ 
                            "Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Start_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Power_Relief_Time_Start_2() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Start_2Column),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Power_Relief_Time_Start_2' in table 'table_LLI_Irradiation_"& _ 
                            "Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Start_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Power_Relief_Date_Finish_2() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Finish_2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Power_Relief_Date_Finish_2' in table 'table_LLI_Irradiation"& _ 
                            "_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Finish_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Power_Relief_Time_Finish_2() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Finish_2Column),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Power_Relief_Time_Finish_2' in table 'table_LLI_Irradiation"& _ 
                            "_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Finish_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Container_Number() As Short
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Container_NumberColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Container_Number' in table 'table_LLI_Irradiation_Log' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Container_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Position_Number() As Short
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Position_NumberColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Position_Number' in table 'table_LLI_Irradiation_Log' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Position_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Irradiated_By() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Irradiated_ByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Irradiated_By' in table 'table_LLI_Irradiation_Log' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Irradiated_ByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Date_Rehadle() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Date_RehadleColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date_Rehadle' in table 'table_LLI_Irradiation_Log' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Date_RehadleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Rehandled_By() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Rehandled_ByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rehandled_By' in table 'table_LLI_Irradiation_Log' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Rehandled_ByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Date_Measurement_LLI_1() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Date_Measurement_LLI_1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date_Measurement_LLI_1' in table 'table_LLI_Irradiation_Log"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Date_Measurement_LLI_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Detector_2_Measurement_LLI_1() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Detector_2_Measurement_LLI_1Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Detector_2_Measurement_LLI_1' in table 'table_LLI_Irradiati"& _ 
                            "on_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Detector_2_Measurement_LLI_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Detector_3_Measurement_LLI_1() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Detector_3_Measurement_LLI_1Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Detector_3_Measurement_LLI_1' in table 'table_LLI_Irradiati"& _ 
                            "on_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Detector_3_Measurement_LLI_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Detector_4_Measurement_LLI_1() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Detector_4_Measurement_LLI_1Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Detector_4_Measurement_LLI_1' in table 'table_LLI_Irradiati"& _ 
                            "on_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Detector_4_Measurement_LLI_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Paper_Log_LLI_1_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Paper_Log_LLI_1_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Paper_Log_LLI_1_Number' in table 'table_LLI_Irradiation_Log"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Paper_Log_LLI_1_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Measured_LLI_1_By() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Measured_LLI_1_ByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Measured_LLI_1_By' in table 'table_LLI_Irradiation_Log' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Measured_LLI_1_ByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Date_Measurement_LLI_2() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Date_Measurement_LLI_2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date_Measurement_LLI_2' in table 'table_LLI_Irradiation_Log"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Date_Measurement_LLI_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Detector_2_Measurement_LLI_2() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Detector_2_Measurement_LLI_2Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Detector_2_Measurement_LLI_2' in table 'table_LLI_Irradiati"& _ 
                            "on_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Detector_2_Measurement_LLI_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Detector_3_Measurement_LLI_2() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Detector_3_Measurement_LLI_2Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Detector_3_Measurement_LLI_2' in table 'table_LLI_Irradiati"& _ 
                            "on_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Detector_3_Measurement_LLI_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Detector_4_Measurement_LLI_2() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Detector_4_Measurement_LLI_2Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Detector_4_Measurement_LLI_2' in table 'table_LLI_Irradiati"& _ 
                            "on_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Detector_4_Measurement_LLI_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Paper_Log_LLI_2_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Paper_Log_LLI_2_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Paper_Log_LLI_2_Number' in table 'table_LLI_Irradiation_Log"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Paper_Log_LLI_2_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Measured_LLI_2_By() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Measured_LLI_2_ByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Measured_LLI_2_By' in table 'table_LLI_Irradiation_Log' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Measured_LLI_2_ByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Detector_1_Measurement_LLI_1() As Short
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Detector_1_Measurement_LLI_1Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Detector_1_Measurement_LLI_1' in table 'table_LLI_Irradiati"& _ 
                            "on_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Detector_1_Measurement_LLI_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Detector_1_Measurement_LLI_2() As Short
            Get
                Try 
                    Return CType(Me(Me.tabletable_LLI_Irradiation_Log.Detector_1_Measurement_LLI_2Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Detector_1_Measurement_LLI_2' in table 'table_LLI_Irradiati"& _ 
                            "on_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_LLI_Irradiation_Log.Detector_1_Measurement_LLI_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property table_SampleRowParent() As table_SampleRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_table_LLI_Irradiation_Log_table_Sample")),table_SampleRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_table_LLI_Irradiation_Log_table_Sample"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property table_Sample_Sample_PreparationRowParent() As table_Sample_Sample_PreparationRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_table_LLI_Irradiation_Log_table_Sample1")),table_Sample_Sample_PreparationRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_table_LLI_Irradiation_Log_table_Sample1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property table_MonitorRowParent() As table_MonitorRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_table_LLI_Irradiation_Log_table_Monitor")),table_MonitorRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_table_LLI_Irradiation_Log_table_Monitor"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property table_SRMRowParent() As table_SRMRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_table_LLI_Irradiation_Log_table_SRM")),table_SRMRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_table_LLI_Irradiation_Log_table_SRM"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTime_StartNull() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Time_StartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTime_StartNull()
            Me(Me.tabletable_LLI_Irradiation_Log.Time_StartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsChannelNull() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.ChannelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetChannelNull()
            Me(Me.tabletable_LLI_Irradiation_Log.ChannelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDate_FinishNull() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Date_FinishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDate_FinishNull()
            Me(Me.tabletable_LLI_Irradiation_Log.Date_FinishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTime_FinishNull() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Time_FinishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTime_FinishNull()
            Me(Me.tabletable_LLI_Irradiation_Log.Time_FinishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPower_Relief_Date_Start_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Start_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPower_Relief_Date_Start_1Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Start_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPower_Relief_Time_Start_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Start_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPower_Relief_Time_Start_1Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Start_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPower_Relief_Date_Finish_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Finish_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPower_Relief_Date_Finish_1Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Finish_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPower_Relief_Time_Finish_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Finish_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPower_Relief_Time_Finish_1Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Finish_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPower_Relief_Date_Start_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Start_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPower_Relief_Date_Start_2Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Start_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPower_Relief_Time_Start_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Start_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPower_Relief_Time_Start_2Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Start_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPower_Relief_Date_Finish_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Finish_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPower_Relief_Date_Finish_2Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Date_Finish_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPower_Relief_Time_Finish_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Finish_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPower_Relief_Time_Finish_2Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Power_Relief_Time_Finish_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsContainer_NumberNull() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Container_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetContainer_NumberNull()
            Me(Me.tabletable_LLI_Irradiation_Log.Container_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPosition_NumberNull() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Position_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPosition_NumberNull()
            Me(Me.tabletable_LLI_Irradiation_Log.Position_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIrradiated_ByNull() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Irradiated_ByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIrradiated_ByNull()
            Me(Me.tabletable_LLI_Irradiation_Log.Irradiated_ByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDate_RehadleNull() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Date_RehadleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDate_RehadleNull()
            Me(Me.tabletable_LLI_Irradiation_Log.Date_RehadleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRehandled_ByNull() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Rehandled_ByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRehandled_ByNull()
            Me(Me.tabletable_LLI_Irradiation_Log.Rehandled_ByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDate_Measurement_LLI_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Date_Measurement_LLI_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDate_Measurement_LLI_1Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Date_Measurement_LLI_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDetector_2_Measurement_LLI_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Detector_2_Measurement_LLI_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDetector_2_Measurement_LLI_1Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Detector_2_Measurement_LLI_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDetector_3_Measurement_LLI_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Detector_3_Measurement_LLI_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDetector_3_Measurement_LLI_1Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Detector_3_Measurement_LLI_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDetector_4_Measurement_LLI_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Detector_4_Measurement_LLI_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDetector_4_Measurement_LLI_1Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Detector_4_Measurement_LLI_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPaper_Log_LLI_1_NumberNull() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Paper_Log_LLI_1_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPaper_Log_LLI_1_NumberNull()
            Me(Me.tabletable_LLI_Irradiation_Log.Paper_Log_LLI_1_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMeasured_LLI_1_ByNull() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Measured_LLI_1_ByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMeasured_LLI_1_ByNull()
            Me(Me.tabletable_LLI_Irradiation_Log.Measured_LLI_1_ByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDate_Measurement_LLI_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Date_Measurement_LLI_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDate_Measurement_LLI_2Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Date_Measurement_LLI_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDetector_2_Measurement_LLI_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Detector_2_Measurement_LLI_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDetector_2_Measurement_LLI_2Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Detector_2_Measurement_LLI_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDetector_3_Measurement_LLI_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Detector_3_Measurement_LLI_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDetector_3_Measurement_LLI_2Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Detector_3_Measurement_LLI_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDetector_4_Measurement_LLI_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Detector_4_Measurement_LLI_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDetector_4_Measurement_LLI_2Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Detector_4_Measurement_LLI_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPaper_Log_LLI_2_NumberNull() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Paper_Log_LLI_2_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPaper_Log_LLI_2_NumberNull()
            Me(Me.tabletable_LLI_Irradiation_Log.Paper_Log_LLI_2_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMeasured_LLI_2_ByNull() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Measured_LLI_2_ByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMeasured_LLI_2_ByNull()
            Me(Me.tabletable_LLI_Irradiation_Log.Measured_LLI_2_ByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDetector_1_Measurement_LLI_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Detector_1_Measurement_LLI_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDetector_1_Measurement_LLI_1Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Detector_1_Measurement_LLI_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDetector_1_Measurement_LLI_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_LLI_Irradiation_Log.Detector_1_Measurement_LLI_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDetector_1_Measurement_LLI_2Null()
            Me(Me.tabletable_LLI_Irradiation_Log.Detector_1_Measurement_LLI_2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_MonitorRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_Monitor As table_MonitorDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_Monitor = CType(Me.Table,table_MonitorDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Monitor_Set_Name() As String
            Get
                Return CType(Me(Me.tabletable_Monitor.Monitor_Set_NameColumn),String)
            End Get
            Set
                Me(Me.tabletable_Monitor.Monitor_Set_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Monitor_Set_Number() As String
            Get
                Return CType(Me(Me.tabletable_Monitor.Monitor_Set_NumberColumn),String)
            End Get
            Set
                Me(Me.tabletable_Monitor.Monitor_Set_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Monitor_Set_Weight() As Single
            Get
                Return CType(Me(Me.tabletable_Monitor.Monitor_Set_WeightColumn),Single)
            End Get
            Set
                Me(Me.tabletable_Monitor.Monitor_Set_WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Monitor_Number() As String
            Get
                Return CType(Me(Me.tabletable_Monitor.Monitor_NumberColumn),String)
            End Get
            Set
                Me(Me.tabletable_Monitor.Monitor_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Monitor_SLI_Weight() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Monitor.Monitor_SLI_WeightColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monitor_SLI_Weight' in table 'table_Monitor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Monitor.Monitor_SLI_WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Monitor_SLI_Date_Start() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_Monitor.Monitor_SLI_Date_StartColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monitor_SLI_Date_Start' in table 'table_Monitor' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Monitor.Monitor_SLI_Date_StartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Monitor_SLI_Not_In_Use() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Monitor.Monitor_SLI_Not_In_UseColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monitor_SLI_Not_In_Use' in table 'table_Monitor' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Monitor.Monitor_SLI_Not_In_UseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Monitor_LLI_Weight() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Monitor.Monitor_LLI_WeightColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monitor_LLI_Weight' in table 'table_Monitor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Monitor.Monitor_LLI_WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Monitor_LLI_Date_Start() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_Monitor.Monitor_LLI_Date_StartColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monitor_LLI_Date_Start' in table 'table_Monitor' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Monitor.Monitor_LLI_Date_StartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Monitor_LLI_Not_In_Use() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Monitor.Monitor_LLI_Not_In_UseColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monitor_LLI_Not_In_Use' in table 'table_Monitor' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Monitor.Monitor_LLI_Not_In_UseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property table_Monitor_SetRowParent() As table_Monitor_SetRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_table_Monitor_table_Monitor_Set")),table_Monitor_SetRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_table_Monitor_table_Monitor_Set"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMonitor_SLI_WeightNull() As Boolean
            Return Me.IsNull(Me.tabletable_Monitor.Monitor_SLI_WeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMonitor_SLI_WeightNull()
            Me(Me.tabletable_Monitor.Monitor_SLI_WeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMonitor_SLI_Date_StartNull() As Boolean
            Return Me.IsNull(Me.tabletable_Monitor.Monitor_SLI_Date_StartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMonitor_SLI_Date_StartNull()
            Me(Me.tabletable_Monitor.Monitor_SLI_Date_StartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMonitor_SLI_Not_In_UseNull() As Boolean
            Return Me.IsNull(Me.tabletable_Monitor.Monitor_SLI_Not_In_UseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMonitor_SLI_Not_In_UseNull()
            Me(Me.tabletable_Monitor.Monitor_SLI_Not_In_UseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMonitor_LLI_WeightNull() As Boolean
            Return Me.IsNull(Me.tabletable_Monitor.Monitor_LLI_WeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMonitor_LLI_WeightNull()
            Me(Me.tabletable_Monitor.Monitor_LLI_WeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMonitor_LLI_Date_StartNull() As Boolean
            Return Me.IsNull(Me.tabletable_Monitor.Monitor_LLI_Date_StartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMonitor_LLI_Date_StartNull()
            Me(Me.tabletable_Monitor.Monitor_LLI_Date_StartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMonitor_LLI_Not_In_UseNull() As Boolean
            Return Me.IsNull(Me.tabletable_Monitor.Monitor_LLI_Not_In_UseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMonitor_LLI_Not_In_UseNull()
            Me(Me.tabletable_Monitor.Monitor_LLI_Not_In_UseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettable_SLI_Irradiation_LogRows() As table_SLI_Irradiation_LogRow()
            If (Me.Table.ChildRelations("FK_table_SLI_Irradiation_Log_table_Monitor") Is Nothing) Then
                Return New table_SLI_Irradiation_LogRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_table_SLI_Irradiation_Log_table_Monitor")),table_SLI_Irradiation_LogRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettable_LLI_Irradiation_LogRows() As table_LLI_Irradiation_LogRow()
            If (Me.Table.ChildRelations("FK_table_LLI_Irradiation_Log_table_Monitor") Is Nothing) Then
                Return New table_LLI_Irradiation_LogRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_table_LLI_Irradiation_Log_table_Monitor")),table_LLI_Irradiation_LogRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_Monitor_SetRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_Monitor_Set As table_Monitor_SetDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_Monitor_Set = CType(Me.Table,table_Monitor_SetDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Monitor_Set_Name() As String
            Get
                Return CType(Me(Me.tabletable_Monitor_Set.Monitor_Set_NameColumn),String)
            End Get
            Set
                Me(Me.tabletable_Monitor_Set.Monitor_Set_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Monitor_Set_Number() As String
            Get
                Return CType(Me(Me.tabletable_Monitor_Set.Monitor_Set_NumberColumn),String)
            End Get
            Set
                Me(Me.tabletable_Monitor_Set.Monitor_Set_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Monitor_Set_Type() As String
            Get
                Return CType(Me(Me.tabletable_Monitor_Set.Monitor_Set_TypeColumn),String)
            End Get
            Set
                Me(Me.tabletable_Monitor_Set.Monitor_Set_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Monitor_Set_Weight() As Single
            Get
                Return CType(Me(Me.tabletable_Monitor_Set.Monitor_Set_WeightColumn),Single)
            End Get
            Set
                Me(Me.tabletable_Monitor_Set.Monitor_Set_WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Monitor_Set_Purchasing_Date() As Date
            Get
                Return CType(Me(Me.tabletable_Monitor_Set.Monitor_Set_Purchasing_DateColumn),Date)
            End Get
            Set
                Me(Me.tabletable_Monitor_Set.Monitor_Set_Purchasing_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettable_MonitorRows() As table_MonitorRow()
            If (Me.Table.ChildRelations("FK_table_Monitor_table_Monitor_Set") Is Nothing) Then
                Return New table_MonitorRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_table_Monitor_table_Monitor_Set")),table_MonitorRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_SRMRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_SRM As table_SRMDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_SRM = CType(Me.Table,table_SRMDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_Set_Name() As String
            Get
                Return CType(Me(Me.tabletable_SRM.SRM_Set_NameColumn),String)
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_Set_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_Set_Number() As String
            Get
                Return CType(Me(Me.tabletable_SRM.SRM_Set_NumberColumn),String)
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_Set_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_Set_Weight() As Single
            Get
                Return CType(Me(Me.tabletable_SRM.SRM_Set_WeightColumn),Single)
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_Set_WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_Number() As String
            Get
                Return CType(Me(Me.tabletable_SRM.SRM_NumberColumn),String)
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_SLI_Weight() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_SLI_WeightColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_SLI_Weight' in table 'table_SRM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_SLI_WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_SLI_Irradiation_Date_1() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_SLI_Irradiation_Date_1' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_SLI_Irradiation_Date_2() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_SLI_Irradiation_Date_2' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_SLI_Irradiation_Date_3() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_3Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_SLI_Irradiation_Date_3' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_SLI_Irradiation_Date_4() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_4Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_SLI_Irradiation_Date_4' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_SLI_Irradiation_Date_5() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_5Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_SLI_Irradiation_Date_5' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_SLI_Irradiation_Date_6() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_6Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_SLI_Irradiation_Date_6' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_SLI_Irradiation_Date_7() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_7Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_SLI_Irradiation_Date_7' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_SLI_Irradiation_Date_8() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_8Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_SLI_Irradiation_Date_8' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_SLI_Irradiation_Date_9() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_9Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_SLI_Irradiation_Date_9' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_SLI_Irradiation_Date_10() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_10Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_SLI_Irradiation_Date_10' in table 'table_SRM' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_SLI_Not_In_Use() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_SLI_Not_In_UseColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_SLI_Not_In_Use' in table 'table_SRM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_SLI_Not_In_UseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_LLI_Weight() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_LLI_WeightColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_LLI_Weight' in table 'table_SRM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_LLI_WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_LLI_Irradiation_Date_1() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_LLI_Irradiation_Date_1' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_LLI_Irradiation_Date_2() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_LLI_Irradiation_Date_2' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_LLI_Irradiation_Date_3() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_3Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_LLI_Irradiation_Date_3' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_LLI_Irradiation_Date_4() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_4Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_LLI_Irradiation_Date_4' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_LLI_Irradiation_Date_5() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_5Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_LLI_Irradiation_Date_5' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_LLI_Irradiation_Date_6() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_6Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_LLI_Irradiation_Date_6' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_LLI_Irradiation_Date_7() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_7Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_LLI_Irradiation_Date_7' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_LLI_Irradiation_Date_8() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_8Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_LLI_Irradiation_Date_8' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_LLI_Irradiation_Date_9() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_9Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_LLI_Irradiation_Date_9' in table 'table_SRM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_LLI_Irradiation_Date_10() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_10Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_LLI_Irradiation_Date_10' in table 'table_SRM' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_LLI_Not_In_Use() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_SRM.SRM_LLI_Not_In_UseColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRM_LLI_Not_In_Use' in table 'table_SRM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_SRM.SRM_LLI_Not_In_UseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property table_SRM_SetRowParent() As table_SRM_SetRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_table_SRM_table_SRM_Set")),table_SRM_SetRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_table_SRM_table_SRM_Set"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_SLI_WeightNull() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_SLI_WeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_SLI_WeightNull()
            Me(Me.tabletable_SRM.SRM_SLI_WeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_SLI_Irradiation_Date_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_SLI_Irradiation_Date_1Null()
            Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_SLI_Irradiation_Date_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_SLI_Irradiation_Date_2Null()
            Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_SLI_Irradiation_Date_3Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_SLI_Irradiation_Date_3Null()
            Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_SLI_Irradiation_Date_4Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_SLI_Irradiation_Date_4Null()
            Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_SLI_Irradiation_Date_5Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_SLI_Irradiation_Date_5Null()
            Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_SLI_Irradiation_Date_6Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_SLI_Irradiation_Date_6Null()
            Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_SLI_Irradiation_Date_7Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_SLI_Irradiation_Date_7Null()
            Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_SLI_Irradiation_Date_8Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_SLI_Irradiation_Date_8Null()
            Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_SLI_Irradiation_Date_9Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_SLI_Irradiation_Date_9Null()
            Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_SLI_Irradiation_Date_10Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_SLI_Irradiation_Date_10Null()
            Me(Me.tabletable_SRM.SRM_SLI_Irradiation_Date_10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_SLI_Not_In_UseNull() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_SLI_Not_In_UseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_SLI_Not_In_UseNull()
            Me(Me.tabletable_SRM.SRM_SLI_Not_In_UseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_LLI_WeightNull() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_LLI_WeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_LLI_WeightNull()
            Me(Me.tabletable_SRM.SRM_LLI_WeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_LLI_Irradiation_Date_1Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_LLI_Irradiation_Date_1Null()
            Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_LLI_Irradiation_Date_2Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_LLI_Irradiation_Date_2Null()
            Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_LLI_Irradiation_Date_3Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_LLI_Irradiation_Date_3Null()
            Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_LLI_Irradiation_Date_4Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_LLI_Irradiation_Date_4Null()
            Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_LLI_Irradiation_Date_5Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_LLI_Irradiation_Date_5Null()
            Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_LLI_Irradiation_Date_6Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_LLI_Irradiation_Date_6Null()
            Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_LLI_Irradiation_Date_7Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_LLI_Irradiation_Date_7Null()
            Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_LLI_Irradiation_Date_8Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_LLI_Irradiation_Date_8Null()
            Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_LLI_Irradiation_Date_9Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_LLI_Irradiation_Date_9Null()
            Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_LLI_Irradiation_Date_10Null() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_LLI_Irradiation_Date_10Null()
            Me(Me.tabletable_SRM.SRM_LLI_Irradiation_Date_10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSRM_LLI_Not_In_UseNull() As Boolean
            Return Me.IsNull(Me.tabletable_SRM.SRM_LLI_Not_In_UseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSRM_LLI_Not_In_UseNull()
            Me(Me.tabletable_SRM.SRM_LLI_Not_In_UseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettable_SLI_Irradiation_LogRows() As table_SLI_Irradiation_LogRow()
            If (Me.Table.ChildRelations("FK_table_SLI_Irradiation_Log_table_SRM") Is Nothing) Then
                Return New table_SLI_Irradiation_LogRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_table_SLI_Irradiation_Log_table_SRM")),table_SLI_Irradiation_LogRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettable_LLI_Irradiation_LogRows() As table_LLI_Irradiation_LogRow()
            If (Me.Table.ChildRelations("FK_table_LLI_Irradiation_Log_table_SRM") Is Nothing) Then
                Return New table_LLI_Irradiation_LogRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_table_LLI_Irradiation_Log_table_SRM")),table_LLI_Irradiation_LogRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_SRM_SetRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_SRM_Set As table_SRM_SetDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_SRM_Set = CType(Me.Table,table_SRM_SetDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_Set_Name() As String
            Get
                Return CType(Me(Me.tabletable_SRM_Set.SRM_Set_NameColumn),String)
            End Get
            Set
                Me(Me.tabletable_SRM_Set.SRM_Set_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_Set_Number() As String
            Get
                Return CType(Me(Me.tabletable_SRM_Set.SRM_Set_NumberColumn),String)
            End Get
            Set
                Me(Me.tabletable_SRM_Set.SRM_Set_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_Set_Type() As String
            Get
                Return CType(Me(Me.tabletable_SRM_Set.SRM_Set_TypeColumn),String)
            End Get
            Set
                Me(Me.tabletable_SRM_Set.SRM_Set_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_Set_Weight() As Single
            Get
                Return CType(Me(Me.tabletable_SRM_Set.SRM_Set_WeightColumn),Single)
            End Get
            Set
                Me(Me.tabletable_SRM_Set.SRM_Set_WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SRM_Set_Purchasing_Date() As Date
            Get
                Return CType(Me(Me.tabletable_SRM_Set.SRM_Set_Purchasing_DateColumn),Date)
            End Get
            Set
                Me(Me.tabletable_SRM_Set.SRM_Set_Purchasing_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettable_SRMRows() As table_SRMRow()
            If (Me.Table.ChildRelations("FK_table_SRM_table_SRM_Set") Is Nothing) Then
                Return New table_SRMRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_table_SRM_table_SRM_Set")),table_SRMRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class table_Sample_NAA_ResultsRow
        Inherits Global.System.Data.DataRow
        
        Private tabletable_Sample_NAA_Results As table_Sample_NAA_ResultsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletable_Sample_NAA_Results = CType(Me.Table,table_Sample_NAA_ResultsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_U_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_U_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_U_Detection_Limit' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_U_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_U_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_U_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_U_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_U_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_U_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_U_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_U_Concentaration' in table 'table_Sample_NAA_Results' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_U_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_U_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_U_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_U_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_U_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Th_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Th_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Th_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Th_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Th_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Th_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Th_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Th_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Th_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Th_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Th_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Th_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Th_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Th_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Th_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Th_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Hg_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Hg_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Hg_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Hg_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Hg_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Hg_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Hg_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Hg_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Hg_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Hg_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Hg_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Hg_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Hg_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Hg_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Hg_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Hg_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Au_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Au_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Au_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Au_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Au_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Au_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Au_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Au_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Au_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Au_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Au_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Au_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Au_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Au_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Au_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Au_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Pt_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Pt_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Pt_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Pt_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Pt_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Pt_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Pt_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Pt_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Pt_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Pt_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Pt_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Pt_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Pt_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Pt_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Pt_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Pt_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ir_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ir_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ir_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ir_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ir_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ir_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ir_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ir_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ir_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ir_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ir_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ir_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ir_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ir_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ir_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ir_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Re_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Re_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Re_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Re_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Re_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Re_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Re_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Re_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Re_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Re_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Re_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Re_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Re_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Re_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Re_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Re_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_W_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_W_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_W_Detection_Limit' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_W_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_W_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_W_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_W_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_W_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_W_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_W_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_W_Concentaration' in table 'table_Sample_NAA_Results' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_W_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_W_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_W_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_W_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_W_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ta_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ta_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ta_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ta_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ta_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ta_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ta_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ta_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ta_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ta_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ta_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ta_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ta_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ta_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ta_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ta_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Hf_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Hf_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Hf_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Hf_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Hf_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Hf_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Hf_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Hf_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Hf_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Hf_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Hf_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Hf_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Hf_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Hf_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Hf_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Hf_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Lu_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Lu_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Lu_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Lu_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Lu_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Lu_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Lu_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Lu_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Lu_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Lu_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Lu_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Lu_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Lu_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Lu_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Lu_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Lu_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Yb_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Yb_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Yb_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Yb_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Yb_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Yb_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Yb_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Yb_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Yb_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Yb_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Yb_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Yb_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Yb_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Yb_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Yb_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Yb_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Tm_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Tm_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Tm_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Tm_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Tm_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Tm_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Tm_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Tm_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Tm_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Tm_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Tm_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Tm_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Tm_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Tm_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Tm_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Tm_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Er_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Er_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Er_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Er_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Er_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Er_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Er_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Er_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Er_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Er_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Er_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Er_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Er_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Er_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Er_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Er_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Dy_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Dy_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Dy_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Dy_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Dy_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Dy_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Dy_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Dy_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Dy_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Dy_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Dy_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Dy_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Dy_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Dy_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Dy_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Dy_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Tb_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Tb_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Tb_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Tb_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Tb_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Tb_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Tb_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Tb_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Tb_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Tb_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Tb_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Tb_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Tb_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Tb_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Tb_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Tb_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Gd_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Gd_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Gd_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Gd_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Gd_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Gd_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Gd_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Gd_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Gd_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Gd_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Gd_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Gd_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Gd_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Gd_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Gd_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Gd_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Eu_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Eu_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Eu_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Eu_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Eu_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Eu_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Eu_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Eu_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Eu_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Eu_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Eu_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Eu_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Eu_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Eu_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Eu_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Eu_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sm_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sm_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sm_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sm_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sm_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sm_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sm_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sm_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sm_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sm_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sm_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sm_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sm_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sm_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sm_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sm_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Nd_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Nd_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Nd_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Nd_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Nd_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Nd_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Nd_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Nd_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Nd_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Nd_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Nd_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Nd_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Nd_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Nd_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Nd_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Nd_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ce_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ce_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ce_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ce_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ce_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ce_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ce_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ce_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ce_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ce_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ce_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ce_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ce_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ce_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ce_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ce_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_La_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_La_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_La_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_La_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_La_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_La_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_La_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_La_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_La_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_La_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_La_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_La_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_La_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_La_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_La_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_La_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ba_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ba_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ba_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ba_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ba_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ba_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ba_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ba_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ba_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ba_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ba_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ba_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ba_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ba_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ba_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ba_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cs_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cs_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cs_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cs_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cs_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cs_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cs_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cs_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cs_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cs_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cs_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cs_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cs_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cs_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cs_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cs_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_I_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_I_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_I_Detection_Limit' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_I_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_I_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_I_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_I_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_I_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_I_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_I_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_I_Concentaration' in table 'table_Sample_NAA_Results' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_I_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_I_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_I_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_I_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_I_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sb_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sb_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sb_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sb_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sb_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sb_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sb_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sb_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sb_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sb_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sb_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sb_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sb_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sb_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sb_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sb_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sn_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sn_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sn_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sn_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sn_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sn_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sn_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sn_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sn_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sn_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sn_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sn_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sn_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sn_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sn_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sn_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_In_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_In_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_In_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_In_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_In_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_In_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_In_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_In_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_In_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_In_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_In_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_In_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_In_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_In_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_In_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_In_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cd_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cd_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cd_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cd_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cd_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cd_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cd_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cd_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cd_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cd_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cd_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cd_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cd_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cd_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cd_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cd_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ag_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ag_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ag_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ag_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ag_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ag_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ag_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ag_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ag_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ag_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ag_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ag_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ag_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ag_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ag_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ag_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ru_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ru_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ru_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ru_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ru_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ru_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ru_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ru_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ru_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ru_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ru_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ru_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ru_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ru_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ru_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ru_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Mo_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Mo_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Mo_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Mo_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Mo_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Mo_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Mo_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Mo_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Mo_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Mo_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Mo_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Mo_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Mo_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Mo_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Mo_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Mo_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Nb_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Nb_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Nb_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Nb_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Nb_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Nb_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Nb_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Nb_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Nb_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Nb_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Nb_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Nb_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Zr_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Zr_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Zr_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Zr_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Nb_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Nb_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Nb_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Nb_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Zr_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Zr_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Zr_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Zr_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Zr_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Zr_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Zr_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Zr_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Zr_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Zr_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Zr_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Zr_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Y_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Y_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Y_Detection_Limit' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Y_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Y_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Y_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Y_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Y_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Y_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Y_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Y_Concentaration' in table 'table_Sample_NAA_Results' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Y_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Y_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Y_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Y_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Y_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sr_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sr_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sr_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sr_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sr_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sr_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sr_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sr_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sr_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sr_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sr_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sr_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Rb_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Rb_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Rb_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Rb_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sr_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sr_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sr_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sr_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Rb_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Rb_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Rb_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Rb_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Rb_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Rb_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Rb_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Rb_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Rb_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Rb_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Rb_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Rb_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Br_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Br_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Br_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Br_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Br_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Br_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Br_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Br_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Br_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Br_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Br_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Br_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Br_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Br_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Br_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Br_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Se_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Se_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Se_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Se_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Se_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Se_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Se_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Se_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Se_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Se_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Se_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Se_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Se_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Se_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Se_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Se_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_As_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_As_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_As_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_As_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_As_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_As_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_As_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_As_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_As_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_As_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_As_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_As_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_As_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_As_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_As_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_As_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ga_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ga_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ga_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ga_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ga_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ga_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ga_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ga_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ga_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ga_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ga_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ga_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ga_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ga_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ga_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ga_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Zn_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Zn_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Zn_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Zn_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Zn_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Zn_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Zn_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Zn_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Zn_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Zn_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Zn_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Zn_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Zn_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Zn_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Zn_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Zn_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cu_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cu_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cu_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cu_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cu_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cu_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cu_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cu_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cu_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cu_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cu_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cu_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cu_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cu_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cu_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cu_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Co_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Co_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Co_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Co_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Co_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Co_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Co_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Co_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Co_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Co_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Co_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Co_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Co_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Co_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Co_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Co_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Fe_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Fe_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Fe_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Fe_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Fe_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Fe_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Fe_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Fe_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Fe_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Fe_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Fe_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Fe_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Fe_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Fe_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Fe_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Fe_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Mn_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Mn_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Mn_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Mn_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Mn_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Mn_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Mn_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Mn_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_F_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_F_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_F_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_F_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_F_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_F_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_F_Concentaration' in table 'table_Sample_NAA_Results' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_F_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_F_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_F_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_F_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_F_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_F_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_F_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_F_Detection_Limit' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_F_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Na_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Na_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Na_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Na_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Na_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Na_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Na_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Na_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Na_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Na_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Na_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Na_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Na_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Na_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Na_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Na_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Mg_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Mg_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Mg_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Mg_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Mg_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Mg_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Mg_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Mg_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Mg_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Mg_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Mg_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Mg_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Mg_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Mg_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Mg_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Mg_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Al_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Al_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Al_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Al_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Al_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Al_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Al_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Al_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Al_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Al_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Al_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Al_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Si_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Si_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Si_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Si_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Al_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Al_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Al_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Al_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Si_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Si_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Si_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Si_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Si_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Si_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Si_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Si_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Si_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Si_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Si_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Si_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_S_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_S_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_S_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_S_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_S_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_S_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_S_Concentaration' in table 'table_Sample_NAA_Results' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_S_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_S_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_S_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_S_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_S_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_S_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_S_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_S_Detection_Limit' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_S_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cl_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cl_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cl_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cl_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cl_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cl_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cl_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cl_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cl_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cl_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cl_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cl_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cl_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cl_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cl_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cl_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_K_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_K_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_K_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_K_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_K_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_K_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_K_Concentaration' in table 'table_Sample_NAA_Results' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_K_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_K_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_K_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_K_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_K_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_K_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_K_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_K_Detection_Limit' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_K_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ca_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ca_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ca_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ca_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ca_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ca_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ca_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ca_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ca_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ca_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ca_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ca_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ca_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ca_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ca_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ca_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sc_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sc_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sc_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sc_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sc_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sc_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sc_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sc_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sc_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sc_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sc_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sc_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Sc_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Sc_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Sc_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Sc_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ti_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ti_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ti_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ti_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ti_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ti_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ti_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ti_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ti_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ti_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ti_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ti_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Ti_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Ti_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Ti_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Ti_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_V_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_V_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_V_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_V_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_V_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_V_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_V_Concentaration' in table 'table_Sample_NAA_Results' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_V_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_V_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_V_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_V_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_V_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_V_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_V_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_V_Detection_Limit' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_V_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cr_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cr_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cr_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cr_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cr_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cr_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cr_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cr_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cr_Error() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cr_ErrorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cr_Error' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cr_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Cr_Detection_Limit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Cr_Detection_LimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Cr_Detection_Limit' in table 'table_Sample_NAA_Results' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Cr_Detection_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Mn_Fact() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Mn_FactColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Mn_Fact' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Mn_FactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Mn_Concentaration() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Mn_ConcentarationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Mn_Concentaration' in table 'table_Sample_NAA_Results' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Mn_ConcentarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Sample_ID() As String
            Get
                Return CType(Me(Me.tabletable_Sample_NAA_Results.A_Sample_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.A_Sample_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property F_Country_Code() As String
            Get
                Return CType(Me(Me.tabletable_Sample_NAA_Results.F_Country_CodeColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.F_Country_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property F_Client_ID() As String
            Get
                Return CType(Me(Me.tabletable_Sample_NAA_Results.F_Client_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.F_Client_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property F_Year() As String
            Get
                Return CType(Me(Me.tabletable_Sample_NAA_Results.F_YearColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.F_YearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property F_Sample_Set_ID() As String
            Get
                Return CType(Me(Me.tabletable_Sample_NAA_Results.F_Sample_Set_IDColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.F_Sample_Set_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property F_Sample_Set_Index() As String
            Get
                Return CType(Me(Me.tabletable_Sample_NAA_Results.F_Sample_Set_IndexColumn),String)
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.F_Sample_Set_IndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_Processed_By() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_Processed_ByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Processed_By' in table 'table_Sample_NAA_Results' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_Processed_ByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property R_File_Spectrum() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.R_File_SpectrumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_File_Spectrum' in table 'table_Sample_NAA_Results' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.R_File_SpectrumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Client_Sample_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.A_Client_Sample_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Client_Sample_ID' in table 'table_Sample_NAA_Results' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.A_Client_Sample_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Latitude() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.A_LatitudeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Latitude' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.A_LatitudeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Longitude() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.A_LongitudeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Longitude' in table 'table_Sample_NAA_Results' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.A_LongitudeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Collection_Place() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.A_Collection_PlaceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Collection_Place' in table 'table_Sample_NAA_Results' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.A_Collection_PlaceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property A_Notes() As String
            Get
                Try 
                    Return CType(Me(Me.tabletable_Sample_NAA_Results.A_NotesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'A_Notes' in table 'table_Sample_NAA_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletable_Sample_NAA_Results.A_NotesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property table_Sample_SetRowParent() As table_Sample_SetRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_table_Sample_table_Sample_Set2")),table_Sample_SetRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_table_Sample_table_Sample_Set2"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_U_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_U_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_U_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_U_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_U_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_U_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_U_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_U_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_U_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_U_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_U_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_U_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_U_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_U_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_U_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_U_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Th_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Th_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Th_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Th_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Th_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Th_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Th_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Th_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Th_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Th_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Th_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Th_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Th_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Th_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Th_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Th_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Hg_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Hg_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Hg_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Hg_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Hg_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Hg_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Hg_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Hg_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Hg_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Hg_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Hg_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Hg_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Hg_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Hg_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Hg_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Hg_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Au_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Au_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Au_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Au_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Au_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Au_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Au_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Au_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Au_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Au_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Au_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Au_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Au_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Au_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Au_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Au_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Pt_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Pt_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Pt_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Pt_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Pt_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Pt_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Pt_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Pt_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Pt_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Pt_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Pt_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Pt_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Pt_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Pt_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Pt_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Pt_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ir_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ir_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ir_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ir_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ir_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ir_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ir_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ir_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ir_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ir_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ir_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ir_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ir_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ir_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ir_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ir_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Re_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Re_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Re_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Re_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Re_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Re_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Re_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Re_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Re_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Re_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Re_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Re_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Re_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Re_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Re_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Re_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_W_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_W_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_W_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_W_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_W_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_W_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_W_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_W_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_W_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_W_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_W_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_W_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_W_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_W_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_W_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_W_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ta_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ta_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ta_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ta_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ta_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ta_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ta_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ta_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ta_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ta_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ta_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ta_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ta_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ta_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ta_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ta_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Hf_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Hf_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Hf_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Hf_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Hf_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Hf_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Hf_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Hf_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Hf_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Hf_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Hf_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Hf_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Hf_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Hf_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Hf_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Hf_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Lu_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Lu_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Lu_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Lu_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Lu_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Lu_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Lu_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Lu_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Lu_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Lu_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Lu_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Lu_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Lu_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Lu_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Lu_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Lu_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Yb_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Yb_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Yb_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Yb_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Yb_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Yb_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Yb_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Yb_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Yb_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Yb_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Yb_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Yb_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Yb_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Yb_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Yb_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Yb_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Tm_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Tm_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Tm_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Tm_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Tm_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Tm_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Tm_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Tm_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Tm_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Tm_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Tm_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Tm_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Tm_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Tm_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Tm_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Tm_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Er_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Er_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Er_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Er_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Er_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Er_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Er_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Er_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Er_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Er_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Er_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Er_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Er_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Er_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Er_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Er_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Dy_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Dy_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Dy_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Dy_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Dy_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Dy_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Dy_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Dy_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Dy_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Dy_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Dy_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Dy_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Dy_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Dy_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Dy_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Dy_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Tb_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Tb_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Tb_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Tb_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Tb_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Tb_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Tb_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Tb_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Tb_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Tb_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Tb_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Tb_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Tb_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Tb_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Tb_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Tb_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Gd_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Gd_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Gd_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Gd_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Gd_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Gd_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Gd_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Gd_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Gd_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Gd_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Gd_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Gd_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Gd_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Gd_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Gd_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Gd_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Eu_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Eu_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Eu_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Eu_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Eu_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Eu_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Eu_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Eu_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Eu_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Eu_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Eu_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Eu_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Eu_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Eu_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Eu_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Eu_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sm_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sm_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sm_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sm_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sm_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sm_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sm_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sm_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sm_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sm_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sm_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sm_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sm_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sm_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sm_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sm_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Nd_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Nd_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Nd_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Nd_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Nd_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Nd_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Nd_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Nd_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Nd_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Nd_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Nd_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Nd_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Nd_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Nd_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Nd_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Nd_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ce_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ce_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ce_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ce_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ce_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ce_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ce_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ce_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ce_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ce_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ce_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ce_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ce_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ce_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ce_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ce_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_La_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_La_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_La_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_La_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_La_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_La_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_La_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_La_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_La_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_La_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_La_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_La_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_La_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_La_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_La_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_La_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ba_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ba_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ba_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ba_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ba_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ba_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ba_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ba_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ba_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ba_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ba_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ba_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ba_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ba_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ba_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ba_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cs_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cs_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cs_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cs_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cs_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cs_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cs_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cs_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cs_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cs_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cs_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cs_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cs_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cs_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cs_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cs_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_I_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_I_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_I_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_I_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_I_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_I_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_I_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_I_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_I_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_I_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_I_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_I_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_I_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_I_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_I_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_I_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sb_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sb_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sb_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sb_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sb_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sb_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sb_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sb_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sb_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sb_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sb_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sb_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sb_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sb_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sb_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sb_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sn_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sn_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sn_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sn_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sn_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sn_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sn_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sn_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sn_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sn_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sn_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sn_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sn_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sn_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sn_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sn_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_In_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_In_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_In_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_In_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_In_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_In_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_In_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_In_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_In_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_In_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_In_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_In_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_In_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_In_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_In_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_In_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cd_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cd_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cd_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cd_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cd_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cd_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cd_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cd_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cd_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cd_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cd_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cd_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cd_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cd_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cd_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cd_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ag_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ag_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ag_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ag_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ag_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ag_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ag_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ag_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ag_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ag_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ag_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ag_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ag_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ag_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ag_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ag_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ru_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ru_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ru_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ru_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ru_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ru_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ru_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ru_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ru_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ru_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ru_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ru_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ru_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ru_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ru_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ru_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Mo_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Mo_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Mo_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Mo_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Mo_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Mo_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Mo_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Mo_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Mo_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Mo_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Mo_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Mo_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Mo_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Mo_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Mo_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Mo_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Nb_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Nb_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Nb_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Nb_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Nb_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Nb_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Nb_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Nb_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Nb_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Nb_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Nb_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Nb_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Zr_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Zr_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Zr_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Zr_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Nb_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Nb_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Nb_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Nb_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Zr_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Zr_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Zr_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Zr_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Zr_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Zr_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Zr_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Zr_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Zr_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Zr_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Zr_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Zr_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Y_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Y_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Y_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Y_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Y_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Y_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Y_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Y_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Y_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Y_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Y_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Y_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Y_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Y_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Y_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Y_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sr_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sr_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sr_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sr_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sr_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sr_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sr_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sr_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sr_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sr_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sr_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sr_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Rb_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Rb_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Rb_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Rb_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sr_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sr_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sr_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sr_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Rb_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Rb_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Rb_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Rb_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Rb_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Rb_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Rb_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Rb_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Rb_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Rb_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Rb_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Rb_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Br_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Br_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Br_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Br_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Br_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Br_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Br_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Br_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Br_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Br_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Br_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Br_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Br_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Br_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Br_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Br_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Se_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Se_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Se_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Se_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Se_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Se_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Se_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Se_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Se_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Se_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Se_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Se_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Se_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Se_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Se_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Se_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_As_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_As_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_As_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_As_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_As_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_As_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_As_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_As_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_As_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_As_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_As_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_As_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_As_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_As_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_As_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_As_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ga_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ga_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ga_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ga_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ga_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ga_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ga_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ga_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ga_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ga_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ga_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ga_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ga_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ga_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ga_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ga_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Zn_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Zn_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Zn_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Zn_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Zn_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Zn_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Zn_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Zn_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Zn_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Zn_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Zn_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Zn_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Zn_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Zn_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Zn_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Zn_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cu_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cu_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cu_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cu_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cu_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cu_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cu_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cu_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cu_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cu_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cu_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cu_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cu_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cu_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cu_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cu_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Co_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Co_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Co_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Co_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Co_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Co_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Co_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Co_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Co_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Co_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Co_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Co_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Co_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Co_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Co_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Co_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Fe_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Fe_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Fe_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Fe_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Fe_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Fe_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Fe_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Fe_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Fe_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Fe_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Fe_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Fe_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Fe_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Fe_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Fe_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Fe_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Mn_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Mn_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Mn_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Mn_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Mn_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Mn_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Mn_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Mn_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_F_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_F_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_F_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_F_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_F_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_F_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_F_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_F_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_F_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_F_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_F_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_F_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_F_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_F_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_F_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_F_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Na_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Na_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Na_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Na_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Na_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Na_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Na_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Na_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Na_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Na_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Na_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Na_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Na_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Na_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Na_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Na_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Mg_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Mg_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Mg_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Mg_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Mg_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Mg_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Mg_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Mg_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Mg_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Mg_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Mg_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Mg_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Mg_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Mg_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Mg_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Mg_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Al_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Al_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Al_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Al_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Al_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Al_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Al_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Al_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Al_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Al_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Al_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Al_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Si_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Si_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Si_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Si_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Al_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Al_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Al_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Al_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Si_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Si_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Si_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Si_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Si_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Si_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Si_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Si_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Si_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Si_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Si_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Si_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_S_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_S_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_S_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_S_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_S_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_S_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_S_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_S_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_S_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_S_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_S_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_S_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_S_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_S_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_S_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_S_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cl_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cl_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cl_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cl_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cl_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cl_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cl_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cl_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cl_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cl_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cl_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cl_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cl_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cl_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cl_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cl_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_K_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_K_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_K_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_K_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_K_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_K_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_K_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_K_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_K_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_K_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_K_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_K_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_K_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_K_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_K_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_K_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ca_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ca_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ca_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ca_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ca_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ca_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ca_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ca_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ca_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ca_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ca_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ca_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ca_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ca_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ca_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ca_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sc_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sc_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sc_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sc_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sc_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sc_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sc_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sc_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sc_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sc_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sc_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sc_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Sc_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Sc_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Sc_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Sc_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ti_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ti_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ti_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ti_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ti_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ti_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ti_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ti_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ti_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ti_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ti_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ti_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Ti_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Ti_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Ti_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Ti_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_V_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_V_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_V_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_V_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_V_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_V_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_V_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_V_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_V_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_V_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_V_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_V_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_V_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_V_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_V_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_V_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cr_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cr_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cr_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cr_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cr_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cr_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cr_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cr_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cr_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cr_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cr_ErrorNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cr_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Cr_Detection_LimitNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Cr_Detection_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Cr_Detection_LimitNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Cr_Detection_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Mn_FactNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Mn_FactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Mn_FactNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Mn_FactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Mn_ConcentarationNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Mn_ConcentarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Mn_ConcentarationNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Mn_ConcentarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_Processed_ByNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_Processed_ByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_Processed_ByNull()
            Me(Me.tabletable_Sample_NAA_Results.R_Processed_ByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsR_File_SpectrumNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.R_File_SpectrumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetR_File_SpectrumNull()
            Me(Me.tabletable_Sample_NAA_Results.R_File_SpectrumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Client_Sample_IDNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.A_Client_Sample_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Client_Sample_IDNull()
            Me(Me.tabletable_Sample_NAA_Results.A_Client_Sample_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_LatitudeNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.A_LatitudeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_LatitudeNull()
            Me(Me.tabletable_Sample_NAA_Results.A_LatitudeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_LongitudeNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.A_LongitudeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_LongitudeNull()
            Me(Me.tabletable_Sample_NAA_Results.A_LongitudeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_Collection_PlaceNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.A_Collection_PlaceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_Collection_PlaceNull()
            Me(Me.tabletable_Sample_NAA_Results.A_Collection_PlaceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsA_NotesNull() As Boolean
            Return Me.IsNull(Me.tabletable_Sample_NAA_Results.A_NotesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetA_NotesNull()
            Me(Me.tabletable_Sample_NAA_Results.A_NotesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_ClientRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_ClientRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_ClientRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_ClientRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_CountryRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_CountryRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_CountryRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_CountryRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_Determined_ElementsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_Determined_ElementsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_Determined_ElementsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_Determined_ElementsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_Physical_EnvironmentRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_Physical_EnvironmentRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_Physical_EnvironmentRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_Physical_EnvironmentRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_Received_ByRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_Received_ByRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_Received_ByRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_Received_ByRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_Sample_PreparationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_Sample_PreparationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_Sample_PreparationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_Sample_PreparationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_Sample_SetRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_Sample_SetRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_Sample_SetRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_Sample_SetRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_Sample_TypeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_Sample_TypeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_Sample_TypeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_Sample_TypeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_SampleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_SampleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_SampleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_SampleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_Sample_Sample_PreparationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_Sample_Sample_PreparationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_Sample_Sample_PreparationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_Sample_Sample_PreparationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_SLI_Irradiation_LogRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_SLI_Irradiation_LogRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_SLI_Irradiation_LogRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_SLI_Irradiation_LogRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_LLI_Irradiation_LogRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_LLI_Irradiation_LogRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_LLI_Irradiation_LogRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_LLI_Irradiation_LogRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_MonitorRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_MonitorRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_MonitorRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_MonitorRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_Monitor_SetRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_Monitor_SetRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_Monitor_SetRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_Monitor_SetRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_SRMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_SRMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_SRMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_SRMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_SRM_SetRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_SRM_SetRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_SRM_SetRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_SRM_SetRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class table_Sample_NAA_ResultsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As table_Sample_NAA_ResultsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As table_Sample_NAA_ResultsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As table_Sample_NAA_ResultsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace NAA_DB_EXPDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_ClientTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_Client"
            tableMapping.ColumnMappings.Add("Client_ID", "Client_ID")
            tableMapping.ColumnMappings.Add("Country_Code", "Country_Code")
            tableMapping.ColumnMappings.Add("Country", "Country")
            tableMapping.ColumnMappings.Add("Postal_Code", "Postal_Code")
            tableMapping.ColumnMappings.Add("Republic", "Republic")
            tableMapping.ColumnMappings.Add("Region", "Region")
            tableMapping.ColumnMappings.Add("Area", "Area")
            tableMapping.ColumnMappings.Add("City", "City")
            tableMapping.ColumnMappings.Add("Street", "Street")
            tableMapping.ColumnMappings.Add("House", "House")
            tableMapping.ColumnMappings.Add("Building", "Building")
            tableMapping.ColumnMappings.Add("Organization", "Organization")
            tableMapping.ColumnMappings.Add("Title", "Title")
            tableMapping.ColumnMappings.Add("Gender", "Gender")
            tableMapping.ColumnMappings.Add("Last_Name", "Last_Name")
            tableMapping.ColumnMappings.Add("First_Name", "First_Name")
            tableMapping.ColumnMappings.Add("Middle_Name", "Middle_Name")
            tableMapping.ColumnMappings.Add("Phone_Country_Code_Phone_1", "Phone_Country_Code_Phone_1")
            tableMapping.ColumnMappings.Add("Code_Phone_1", "Code_Phone_1")
            tableMapping.ColumnMappings.Add("Phone_1", "Phone_1")
            tableMapping.ColumnMappings.Add("Phone_Country_Code_Phone_2", "Phone_Country_Code_Phone_2")
            tableMapping.ColumnMappings.Add("Code_Phone_2", "Code_Phone_2")
            tableMapping.ColumnMappings.Add("Phone_2", "Phone_2")
            tableMapping.ColumnMappings.Add("Phone_Country_Code_Fax_1", "Phone_Country_Code_Fax_1")
            tableMapping.ColumnMappings.Add("Code_Fax_1", "Code_Fax_1")
            tableMapping.ColumnMappings.Add("Fax_1", "Fax_1")
            tableMapping.ColumnMappings.Add("Phone_Country_Code_Mobile_Phone_1", "Phone_Country_Code_Mobile_Phone_1")
            tableMapping.ColumnMappings.Add("Code_Mobile_Phone_1", "Code_Mobile_Phone_1")
            tableMapping.ColumnMappings.Add("Mobile_Phone_1", "Mobile_Phone_1")
            tableMapping.ColumnMappings.Add("E_mail_1", "E_mail_1")
            tableMapping.ColumnMappings.Add("E_mail_2", "E_mail_2")
            tableMapping.ColumnMappings.Add("Notes", "Notes")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[table_Client] ([Client_ID], [Country_Code], [Country], [Postal"& _ 
                "_Code], [Republic], [Region], [Area], [City], [Street], [House], [Building], [Or"& _ 
                "ganization], [Title], [Gender], [Last_Name], [First_Name], [Middle_Name], [Phone"& _ 
                "_Country_Code_Phone_1], [Code_Phone_1], [Phone_1], [Phone_Country_Code_Phone_2],"& _ 
                " [Code_Phone_2], [Phone_2], [Phone_Country_Code_Fax_1], [Code_Fax_1], [Fax_1], ["& _ 
                "Phone_Country_Code_Mobile_Phone_1], [Code_Mobile_Phone_1], [Mobile_Phone_1], [E_"& _ 
                "mail_1], [E_mail_2], [Notes]) VALUES (@Client_ID, @Country_Code, @Country, @Post"& _ 
                "al_Code, @Republic, @Region, @Area, @City, @Street, @House, @Building, @Organiza"& _ 
                "tion, @Title, @Gender, @Last_Name, @First_Name, @Middle_Name, @Phone_Country_Cod"& _ 
                "e_Phone_1, @Code_Phone_1, @Phone_1, @Phone_Country_Code_Phone_2, @Code_Phone_2, "& _ 
                "@Phone_2, @Phone_Country_Code_Fax_1, @Code_Fax_1, @Fax_1, @Phone_Country_Code_Mo"& _ 
                "bile_Phone_1, @Code_Mobile_Phone_1, @Mobile_Phone_1, @E_mail_1, @E_mail_2, @Note"& _ 
                "s)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Country", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Postal_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Postal_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Republic", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Republic", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Region", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@City", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "City", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Street", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Street", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@House", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "House", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Building", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Building", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Organization", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Organization", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Title", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Title", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gender", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gender", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Last_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Last_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@First_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "First_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Middle_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Middle_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Phone_Country_Code_Phone_1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Phone_Country_Code_Phone_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_Phone_1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code_Phone_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Phone_1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Phone_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Phone_Country_Code_Phone_2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Phone_Country_Code_Phone_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_Phone_2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code_Phone_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Phone_2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Phone_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Phone_Country_Code_Fax_1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Phone_Country_Code_Fax_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_Fax_1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code_Fax_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fax_1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fax_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Phone_Country_Code_Mobile_Phone_1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Phone_Country_Code_Mobile_Phone_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_Mobile_Phone_1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code_Mobile_Phone_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mobile_Phone_1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mobile_Phone_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@E_mail_1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "E_mail_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@E_mail_2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "E_mail_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Notes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Notes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Client_ID, Country_Code, Country, Postal_Code, Republic, Region, Area, Cit"& _ 
                "y, Street, House, Building, Organization, Title, Gender, Last_Name, First_Name, "& _ 
                "Middle_Name, Phone_Country_Code_Phone_1, Code_Phone_1, Phone_1, Phone_Country_Co"& _ 
                "de_Phone_2, Code_Phone_2, Phone_2, Phone_Country_Code_Fax_1, Code_Fax_1, Fax_1, "& _ 
                "Phone_Country_Code_Mobile_Phone_1, Code_Mobile_Phone_1, Mobile_Phone_1, E_mail_1"& _ 
                ", E_mail_2, Notes FROM dbo.table_Client"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NAA_DB_EXPDataSet.table_ClientDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NAA_DB_EXPDataSet.table_ClientDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NAA_DB_EXPDataSet.table_ClientDataTable = New NAA_DB_EXPDataSet.table_ClientDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_ClientDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_Client")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Client_ID As String,  _
                    ByVal Country_Code As String,  _
                    ByVal Country As String,  _
                    ByVal Postal_Code As String,  _
                    ByVal Republic As String,  _
                    ByVal _Region As String,  _
                    ByVal Area As String,  _
                    ByVal City As String,  _
                    ByVal Street As String,  _
                    ByVal House As String,  _
                    ByVal Building As String,  _
                    ByVal Organization As String,  _
                    ByVal Title As String,  _
                    ByVal Gender As String,  _
                    ByVal Last_Name As String,  _
                    ByVal First_Name As String,  _
                    ByVal Middle_Name As String,  _
                    ByVal Phone_Country_Code_Phone_1 As String,  _
                    ByVal Code_Phone_1 As String,  _
                    ByVal Phone_1 As String,  _
                    ByVal Phone_Country_Code_Phone_2 As String,  _
                    ByVal Code_Phone_2 As String,  _
                    ByVal Phone_2 As String,  _
                    ByVal Phone_Country_Code_Fax_1 As String,  _
                    ByVal Code_Fax_1 As String,  _
                    ByVal Fax_1 As String,  _
                    ByVal Phone_Country_Code_Mobile_Phone_1 As String,  _
                    ByVal Code_Mobile_Phone_1 As String,  _
                    ByVal Mobile_Phone_1 As String,  _
                    ByVal E_mail_1 As String,  _
                    ByVal E_mail_2 As String,  _
                    ByVal Notes As String) As Integer
            If (Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Client_ID")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Client_ID,String)
            End If
            If (Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Country_Code")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Country_Code,String)
            End If
            If (Country Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Country")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Country,String)
            End If
            If (Postal_Code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Postal_Code,String)
            End If
            If (Republic Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Republic,String)
            End If
            If (_Region Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(_Region,String)
            End If
            If (Area Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Area,String)
            End If
            If (City Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(City,String)
            End If
            If (Street Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Street,String)
            End If
            If (House Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(House,String)
            End If
            If (Building Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Building,String)
            End If
            If (Organization Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Organization,String)
            End If
            If (Title Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Title,String)
            End If
            If (Gender Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Gender,String)
            End If
            If (Last_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Last_Name,String)
            End If
            If (First_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(First_Name,String)
            End If
            If (Middle_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Middle_Name,String)
            End If
            If (Phone_Country_Code_Phone_1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Phone_Country_Code_Phone_1,String)
            End If
            If (Code_Phone_1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Code_Phone_1,String)
            End If
            If (Phone_1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Phone_1,String)
            End If
            If (Phone_Country_Code_Phone_2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Phone_Country_Code_Phone_2,String)
            End If
            If (Code_Phone_2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Code_Phone_2,String)
            End If
            If (Phone_2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Phone_2,String)
            End If
            If (Phone_Country_Code_Fax_1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Phone_Country_Code_Fax_1,String)
            End If
            If (Code_Fax_1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Code_Fax_1,String)
            End If
            If (Fax_1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Fax_1,String)
            End If
            If (Phone_Country_Code_Mobile_Phone_1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Phone_Country_Code_Mobile_Phone_1,String)
            End If
            If (Code_Mobile_Phone_1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Code_Mobile_Phone_1,String)
            End If
            If (Mobile_Phone_1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Mobile_Phone_1,String)
            End If
            If (E_mail_1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(E_mail_1,String)
            End If
            If (E_mail_2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(E_mail_2,String)
            End If
            If (Notes Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Notes,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_CountryTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_Country"
            tableMapping.ColumnMappings.Add("Country", "Country")
            tableMapping.ColumnMappings.Add("Country_Code", "Country_Code")
            tableMapping.ColumnMappings.Add("Phone_Country_Code", "Phone_Country_Code")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[table_Country] ([Country], [Country_Code], [Phone_Country_Code"& _ 
                "]) VALUES (@Country, @Country_Code, @Phone_Country_Code)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Country", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Phone_Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Phone_Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Country, Country_Code, Phone_Country_Code FROM dbo.table_Country"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NAA_DB_EXPDataSet.table_CountryDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NAA_DB_EXPDataSet.table_CountryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NAA_DB_EXPDataSet.table_CountryDataTable = New NAA_DB_EXPDataSet.table_CountryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_CountryDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_Country")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Country As String, ByVal Country_Code As String, ByVal Phone_Country_Code As String) As Integer
            If (Country Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Country")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Country,String)
            End If
            If (Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Country_Code")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Country_Code,String)
            End If
            If (Phone_Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Phone_Country_Code")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Phone_Country_Code,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_Determined_ElementsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_Determined_Elements"
            tableMapping.ColumnMappings.Add("DeterminedElements", "DeterminedElements")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[table_Determined_Elements] ([DeterminedElements]) VALUES (@Det"& _ 
                "erminedElements)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DeterminedElements", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DeterminedElements", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DeterminedElements FROM dbo.table_Determined_Elements"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NAA_DB_EXPDataSet.table_Determined_ElementsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NAA_DB_EXPDataSet.table_Determined_ElementsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NAA_DB_EXPDataSet.table_Determined_ElementsDataTable = New NAA_DB_EXPDataSet.table_Determined_ElementsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_Determined_ElementsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_Determined_Elements")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DeterminedElements As String) As Integer
            If (DeterminedElements Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DeterminedElements")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DeterminedElements,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_Physical_EnvironmentTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_Physical_Environment"
            tableMapping.ColumnMappings.Add("Data", "Data")
            tableMapping.ColumnMappings.Add("Time", "Time")
            tableMapping.ColumnMappings.Add("Relative_Humidity", "Relative_Humidity")
            tableMapping.ColumnMappings.Add("Temperature", "Temperature")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[table_Physical_Environment] ([Data], [Time], [Relative_Humidit"& _ 
                "y], [Temperature]) VALUES (@Data, @Time, @Relative_Humidity, @Temperature)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Data", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Data", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Time", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Time", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Relative_Humidity", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Relative_Humidity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Temperature", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Temperature", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Data, Time, Relative_Humidity, Temperature FROM dbo.table_Physical_Environ"& _ 
                "ment"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NAA_DB_EXPDataSet.table_Physical_EnvironmentDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NAA_DB_EXPDataSet.table_Physical_EnvironmentDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NAA_DB_EXPDataSet.table_Physical_EnvironmentDataTable = New NAA_DB_EXPDataSet.table_Physical_EnvironmentDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_Physical_EnvironmentDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_Physical_Environment")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Data As Global.System.Nullable(Of Date), ByVal Time As Global.System.Nullable(Of Global.System.TimeSpan), ByVal Relative_Humidity As Global.System.Nullable(Of Single), ByVal Temperature As Global.System.Nullable(Of Single)) As Integer
            If (Data.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Data.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Time.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Time.Value,System.TimeSpan)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Relative_Humidity.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Relative_Humidity.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Temperature.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Temperature.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_Received_ByTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_Received_By"
            tableMapping.ColumnMappings.Add("Received_By", "Received_By")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Received_By"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         table_Received_By"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Received_By"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NAA_DB_EXPDataSet.table_Received_ByDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NAA_DB_EXPDataSet.table_Received_ByDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NAA_DB_EXPDataSet.table_Received_ByDataTable = New NAA_DB_EXPDataSet.table_Received_ByDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_Sample_PreparationTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_Sample_Preparation"
            tableMapping.ColumnMappings.Add("Cleaning", "Cleaning")
            tableMapping.ColumnMappings.Add("Drying", "Drying")
            tableMapping.ColumnMappings.Add("Evaporation", "Evaporation")
            tableMapping.ColumnMappings.Add("Freeze_Drying", "Freeze_Drying")
            tableMapping.ColumnMappings.Add("Homogenizing", "Homogenizing")
            tableMapping.ColumnMappings.Add("Pelletization", "Pelletization")
            tableMapping.ColumnMappings.Add("Fragmentation", "Fragmentation")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[table_Sample_Preparation] ([Cleaning], [Drying], [Evaporation]"& _ 
                ", [Freeze_Drying], [Homogenizing], [Pelletization], [Fragmentation]) VALUES (@Cl"& _ 
                "eaning, @Drying, @Evaporation, @Freeze_Drying, @Homogenizing, @Pelletization, @F"& _ 
                "ragmentation)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cleaning", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cleaning", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Drying", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Drying", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Evaporation", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Evaporation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Freeze_Drying", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Freeze_Drying", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Homogenizing", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Homogenizing", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pelletization", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pelletization", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fragmentation", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fragmentation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Cleaning, Drying, Evaporation, Freeze_Drying, Homogenizing, Pelletization,"& _ 
                " Fragmentation FROM dbo.table_Sample_Preparation"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NAA_DB_EXPDataSet.table_Sample_PreparationDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NAA_DB_EXPDataSet.table_Sample_PreparationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NAA_DB_EXPDataSet.table_Sample_PreparationDataTable = New NAA_DB_EXPDataSet.table_Sample_PreparationDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_Sample_PreparationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_Sample_Preparation")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Cleaning As Boolean, ByVal Drying As Boolean, ByVal Evaporation As Boolean, ByVal Freeze_Drying As Boolean, ByVal Homogenizing As Boolean, ByVal Pelletization As Boolean, ByVal Fragmentation As Boolean) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Cleaning,Boolean)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Drying,Boolean)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Evaporation,Boolean)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(Freeze_Drying,Boolean)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(Homogenizing,Boolean)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(Pelletization,Boolean)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(Fragmentation,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_Sample_SetTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_Sample_Set"
            tableMapping.ColumnMappings.Add("Country_Code", "Country_Code")
            tableMapping.ColumnMappings.Add("Client_ID", "Client_ID")
            tableMapping.ColumnMappings.Add("Year", "Year")
            tableMapping.ColumnMappings.Add("Sample_Set_ID", "Sample_Set_ID")
            tableMapping.ColumnMappings.Add("Sample_Set_Index", "Sample_Set_Index")
            tableMapping.ColumnMappings.Add("Sample_Set_Receipt_Date", "Sample_Set_Receipt_Date")
            tableMapping.ColumnMappings.Add("Sample_Set_Report_Date", "Sample_Set_Report_Date")
            tableMapping.ColumnMappings.Add("Received_By", "Received_By")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [table_Sample_Set] WHERE (([Country_Code] = @Original_Country_Code) A"& _ 
                "ND ([Client_ID] = @Original_Client_ID) AND ([Year] = @Original_Year) AND ([Sampl"& _ 
                "e_Set_ID] = @Original_Sample_Set_ID) AND ([Sample_Set_Index] = @Original_Sample_"& _ 
                "Set_Index) AND ((@IsNull_Sample_Set_Receipt_Date = 1 AND [Sample_Set_Receipt_Dat"& _ 
                "e] IS NULL) OR ([Sample_Set_Receipt_Date] = @Original_Sample_Set_Receipt_Date)) "& _ 
                "AND ((@IsNull_Sample_Set_Report_Date = 1 AND [Sample_Set_Report_Date] IS NULL) O"& _ 
                "R ([Sample_Set_Report_Date] = @Original_Sample_Set_Report_Date)) AND ((@IsNull_R"& _ 
                "eceived_By = 1 AND [Received_By] IS NULL) OR ([Received_By] = @Original_Received"& _ 
                "_By)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Year", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Index", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sample_Set_Receipt_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Receipt_Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_Receipt_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Receipt_Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sample_Set_Report_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Report_Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_Report_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Report_Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Received_By", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Received_By", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Received_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Received_By", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [table_Sample_Set] ([Country_Code], [Client_ID], [Year], [Sample_Set_"& _ 
                "ID], [Sample_Set_Index], [Sample_Set_Receipt_Date], [Sample_Set_Report_Date], [R"& _ 
                "eceived_By]) VALUES (@Country_Code, @Client_ID, @Year, @Sample_Set_ID, @Sample_S"& _ 
                "et_Index, @Sample_Set_Receipt_Date, @Sample_Set_Report_Date, @Received_By)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Index", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_Receipt_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Receipt_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_Report_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Report_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Received_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Received_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [table_Sample_Set] SET [Country_Code] = @Country_Code, [Client_ID] = @Clie"& _ 
                "nt_ID, [Year] = @Year, [Sample_Set_ID] = @Sample_Set_ID, [Sample_Set_Index] = @S"& _ 
                "ample_Set_Index, [Sample_Set_Receipt_Date] = @Sample_Set_Receipt_Date, [Sample_S"& _ 
                "et_Report_Date] = @Sample_Set_Report_Date, [Received_By] = @Received_By WHERE (("& _ 
                "[Country_Code] = @Original_Country_Code) AND ([Client_ID] = @Original_Client_ID)"& _ 
                " AND ([Year] = @Original_Year) AND ([Sample_Set_ID] = @Original_Sample_Set_ID) A"& _ 
                "ND ([Sample_Set_Index] = @Original_Sample_Set_Index) AND ((@IsNull_Sample_Set_Re"& _ 
                "ceipt_Date = 1 AND [Sample_Set_Receipt_Date] IS NULL) OR ([Sample_Set_Receipt_Da"& _ 
                "te] = @Original_Sample_Set_Receipt_Date)) AND ((@IsNull_Sample_Set_Report_Date ="& _ 
                " 1 AND [Sample_Set_Report_Date] IS NULL) OR ([Sample_Set_Report_Date] = @Origina"& _ 
                "l_Sample_Set_Report_Date)) AND ((@IsNull_Received_By = 1 AND [Received_By] IS NU"& _ 
                "LL) OR ([Received_By] = @Original_Received_By)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Index", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_Receipt_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Receipt_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_Report_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Report_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Received_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Received_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Year", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Index", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sample_Set_Receipt_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Receipt_Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_Receipt_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Receipt_Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sample_Set_Report_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Report_Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_Report_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Report_Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Received_By", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Received_By", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Received_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Received_By", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Country_Code, Client_ID, Year, Sample_Set_ID, Sample_Set_Index, Sample"& _ 
                "_Set_Receipt_Date, Sample_Set_Report_Date, Received_By"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         table_Sampl"& _ 
                "e_Set"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Year, Sample_Set_ID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT Client_ID, Country_Code, Notes_1, Notes_2, Notes_3, Received_By, Sample_Se"& _ 
                "t_ID, Sample_Set_Index, Sample_Set_Receipt_Date, Sample_Set_Report_Date, Year FR"& _ 
                "OM table_Sample_Set ORDER BY Year, Sample_Set_ID"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NAA_DB_EXPDataSet.table_Sample_SetDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NAA_DB_EXPDataSet.table_Sample_SetDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NAA_DB_EXPDataSet.table_Sample_SetDataTable = New NAA_DB_EXPDataSet.table_Sample_SetDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function Fill_Sample_Set(ByVal dataTable As NAA_DB_EXPDataSet.table_Sample_SetDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetData_Sample_Set() As NAA_DB_EXPDataSet.table_Sample_SetDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As NAA_DB_EXPDataSet.table_Sample_SetDataTable = New NAA_DB_EXPDataSet.table_Sample_SetDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_Sample_SetDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_Sample_Set")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Country_Code As String, ByVal Original_Client_ID As String, ByVal Original_Year As String, ByVal Original_Sample_Set_ID As String, ByVal Original_Sample_Set_Index As String, ByVal Original_Sample_Set_Receipt_Date As Global.System.Nullable(Of Date), ByVal Original_Sample_Set_Report_Date As Global.System.Nullable(Of Date), ByVal Original_Received_By As String) As Integer
            If (Original_Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Country_Code")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Country_Code,String)
            End If
            If (Original_Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Client_ID")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Client_ID,String)
            End If
            If (Original_Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Year")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Year,String)
            End If
            If (Original_Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sample_Set_ID")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Sample_Set_ID,String)
            End If
            If (Original_Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sample_Set_Index")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Sample_Set_Index,String)
            End If
            If (Original_Sample_Set_Receipt_Date.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Sample_Set_Receipt_Date.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_Sample_Set_Report_Date.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Sample_Set_Report_Date.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_Received_By Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Received_By,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Country_Code As String, ByVal Client_ID As String, ByVal Year As String, ByVal Sample_Set_ID As String, ByVal Sample_Set_Index As String, ByVal Sample_Set_Receipt_Date As Global.System.Nullable(Of Date), ByVal Sample_Set_Report_Date As Global.System.Nullable(Of Date), ByVal Received_By As String) As Integer
            If (Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Country_Code")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Country_Code,String)
            End If
            If (Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Client_ID")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Client_ID,String)
            End If
            If (Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Year")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Year,String)
            End If
            If (Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sample_Set_ID")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Sample_Set_ID,String)
            End If
            If (Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sample_Set_Index")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Sample_Set_Index,String)
            End If
            If (Sample_Set_Receipt_Date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Sample_Set_Receipt_Date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Sample_Set_Report_Date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Sample_Set_Report_Date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Received_By Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Received_By,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Country_Code As String,  _
                    ByVal Client_ID As String,  _
                    ByVal Year As String,  _
                    ByVal Sample_Set_ID As String,  _
                    ByVal Sample_Set_Index As String,  _
                    ByVal Sample_Set_Receipt_Date As Global.System.Nullable(Of Date),  _
                    ByVal Sample_Set_Report_Date As Global.System.Nullable(Of Date),  _
                    ByVal Received_By As String,  _
                    ByVal Original_Country_Code As String,  _
                    ByVal Original_Client_ID As String,  _
                    ByVal Original_Year As String,  _
                    ByVal Original_Sample_Set_ID As String,  _
                    ByVal Original_Sample_Set_Index As String,  _
                    ByVal Original_Sample_Set_Receipt_Date As Global.System.Nullable(Of Date),  _
                    ByVal Original_Sample_Set_Report_Date As Global.System.Nullable(Of Date),  _
                    ByVal Original_Received_By As String) As Integer
            If (Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Country_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Country_Code,String)
            End If
            If (Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Client_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Client_ID,String)
            End If
            If (Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Year")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Year,String)
            End If
            If (Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sample_Set_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Sample_Set_ID,String)
            End If
            If (Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sample_Set_Index")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Sample_Set_Index,String)
            End If
            If (Sample_Set_Receipt_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Sample_Set_Receipt_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Sample_Set_Report_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Sample_Set_Report_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Received_By Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Received_By,String)
            End If
            If (Original_Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Country_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_Country_Code,String)
            End If
            If (Original_Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Client_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Client_ID,String)
            End If
            If (Original_Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Year")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_Year,String)
            End If
            If (Original_Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sample_Set_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_Sample_Set_ID,String)
            End If
            If (Original_Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sample_Set_Index")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_Sample_Set_Index,String)
            End If
            If (Original_Sample_Set_Receipt_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_Sample_Set_Receipt_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_Sample_Set_Report_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_Sample_Set_Report_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_Received_By Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_Received_By,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Sample_Set_Receipt_Date As Global.System.Nullable(Of Date), ByVal Sample_Set_Report_Date As Global.System.Nullable(Of Date), ByVal Received_By As String, ByVal Original_Country_Code As String, ByVal Original_Client_ID As String, ByVal Original_Year As String, ByVal Original_Sample_Set_ID As String, ByVal Original_Sample_Set_Index As String, ByVal Original_Sample_Set_Receipt_Date As Global.System.Nullable(Of Date), ByVal Original_Sample_Set_Report_Date As Global.System.Nullable(Of Date), ByVal Original_Received_By As String) As Integer
            Return Me.Update(Original_Country_Code, Original_Client_ID, Original_Year, Original_Sample_Set_ID, Original_Sample_Set_Index, Sample_Set_Receipt_Date, Sample_Set_Report_Date, Received_By, Original_Country_Code, Original_Client_ID, Original_Year, Original_Sample_Set_ID, Original_Sample_Set_Index, Original_Sample_Set_Receipt_Date, Original_Sample_Set_Report_Date, Original_Received_By)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_Sample_TypeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_Sample_Type"
            tableMapping.ColumnMappings.Add("SampleType", "SampleType")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[table_Sample_Type] ([SampleType]) VALUES (@SampleType)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SampleType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SampleType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SampleType FROM dbo.table_Sample_Type"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NAA_DB_EXPDataSet.table_Sample_TypeDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NAA_DB_EXPDataSet.table_Sample_TypeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NAA_DB_EXPDataSet.table_Sample_TypeDataTable = New NAA_DB_EXPDataSet.table_Sample_TypeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_Sample_TypeDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_Sample_Type")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SampleType As String) As Integer
            If (SampleType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SampleType")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SampleType,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_Sample_TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_Sample"
            tableMapping.ColumnMappings.Add("F_Country_Code", "F_Country_Code")
            tableMapping.ColumnMappings.Add("F_Client_ID", "F_Client_ID")
            tableMapping.ColumnMappings.Add("F_Year", "F_Year")
            tableMapping.ColumnMappings.Add("F_Sample_Set_ID", "F_Sample_Set_ID")
            tableMapping.ColumnMappings.Add("F_Sample_Set_Index", "F_Sample_Set_Index")
            tableMapping.ColumnMappings.Add("A_Sample_ID", "A_Sample_ID")
            tableMapping.ColumnMappings.Add("A_Client_Sample_ID", "A_Client_Sample_ID")
            tableMapping.ColumnMappings.Add("A_Sample_Type", "A_Sample_Type")
            tableMapping.ColumnMappings.Add("A_Sample_Subtype", "A_Sample_Subtype")
            tableMapping.ColumnMappings.Add("A_Collection_Place", "A_Collection_Place")
            tableMapping.ColumnMappings.Add("A_Latitude", "A_Latitude")
            tableMapping.ColumnMappings.Add("A_Longitude", "A_Longitude")
            tableMapping.ColumnMappings.Add("A_Cleaning_Plan", "A_Cleaning_Plan")
            tableMapping.ColumnMappings.Add("A_Drying_Plan", "A_Drying_Plan")
            tableMapping.ColumnMappings.Add("A_Evaporation_Plan", "A_Evaporation_Plan")
            tableMapping.ColumnMappings.Add("A_Freeze_Drying_Plan", "A_Freeze_Drying_Plan")
            tableMapping.ColumnMappings.Add("A_Homogenizing_Plan", "A_Homogenizing_Plan")
            tableMapping.ColumnMappings.Add("A_Pelletization_Plan", "A_Pelletization_Plan")
            tableMapping.ColumnMappings.Add("A_Fragmentation_Plan", "A_Fragmentation_Plan")
            tableMapping.ColumnMappings.Add("A_Determined_Elements", "A_Determined_Elements")
            tableMapping.ColumnMappings.Add("A_Halogens_Plan", "A_Halogens_Plan")
            tableMapping.ColumnMappings.Add("A_Heavy_Metals_Plan", "A_Heavy_Metals_Plan")
            tableMapping.ColumnMappings.Add("A_Short_Lived_Plan", "A_Short_Lived_Plan")
            tableMapping.ColumnMappings.Add("A_Long_Lived_Plan", "A_Long_Lived_Plan")
            tableMapping.ColumnMappings.Add("A_F_Plan", "A_F_Plan")
            tableMapping.ColumnMappings.Add("A_Na_Plan", "A_Na_Plan")
            tableMapping.ColumnMappings.Add("A_Mg_Plan", "A_Mg_Plan")
            tableMapping.ColumnMappings.Add("A_Al_Plan", "A_Al_Plan")
            tableMapping.ColumnMappings.Add("A_Si_Plan", "A_Si_Plan")
            tableMapping.ColumnMappings.Add("A_S_Plan", "A_S_Plan")
            tableMapping.ColumnMappings.Add("A_Cl_Plan", "A_Cl_Plan")
            tableMapping.ColumnMappings.Add("A_K_Plan", "A_K_Plan")
            tableMapping.ColumnMappings.Add("A_Ca_Plan", "A_Ca_Plan")
            tableMapping.ColumnMappings.Add("A_Sc_Plan", "A_Sc_Plan")
            tableMapping.ColumnMappings.Add("A_Ti_Plan", "A_Ti_Plan")
            tableMapping.ColumnMappings.Add("A_V_Plan", "A_V_Plan")
            tableMapping.ColumnMappings.Add("A_Cr_Plan", "A_Cr_Plan")
            tableMapping.ColumnMappings.Add("A_Mn_Plan", "A_Mn_Plan")
            tableMapping.ColumnMappings.Add("A_Fe_Plan", "A_Fe_Plan")
            tableMapping.ColumnMappings.Add("A_Co_Plan", "A_Co_Plan")
            tableMapping.ColumnMappings.Add("A_Cu_Plan", "A_Cu_Plan")
            tableMapping.ColumnMappings.Add("A_Zn_Plan", "A_Zn_Plan")
            tableMapping.ColumnMappings.Add("A_Ga_Plan", "A_Ga_Plan")
            tableMapping.ColumnMappings.Add("A_As_Plan", "A_As_Plan")
            tableMapping.ColumnMappings.Add("A_Se_Plan", "A_Se_Plan")
            tableMapping.ColumnMappings.Add("A_Br_Plan", "A_Br_Plan")
            tableMapping.ColumnMappings.Add("A_Rb_Plan", "A_Rb_Plan")
            tableMapping.ColumnMappings.Add("A_Sr_Plan", "A_Sr_Plan")
            tableMapping.ColumnMappings.Add("A_Y_Plan", "A_Y_Plan")
            tableMapping.ColumnMappings.Add("A_Zr_Plan", "A_Zr_Plan")
            tableMapping.ColumnMappings.Add("A_Nb_Plan", "A_Nb_Plan")
            tableMapping.ColumnMappings.Add("A_Mo_Plan", "A_Mo_Plan")
            tableMapping.ColumnMappings.Add("A_Ru_Plan", "A_Ru_Plan")
            tableMapping.ColumnMappings.Add("A_Ag_Plan", "A_Ag_Plan")
            tableMapping.ColumnMappings.Add("A_Cd_Plan", "A_Cd_Plan")
            tableMapping.ColumnMappings.Add("A_In_Plan", "A_In_Plan")
            tableMapping.ColumnMappings.Add("A_Sn_Plan", "A_Sn_Plan")
            tableMapping.ColumnMappings.Add("A_Sb_Plan", "A_Sb_Plan")
            tableMapping.ColumnMappings.Add("A_I_Plan", "A_I_Plan")
            tableMapping.ColumnMappings.Add("A_Cs_Plan", "A_Cs_Plan")
            tableMapping.ColumnMappings.Add("A_Ba_Plan", "A_Ba_Plan")
            tableMapping.ColumnMappings.Add("A_La_Plan", "A_La_Plan")
            tableMapping.ColumnMappings.Add("A_Ce_Plan", "A_Ce_Plan")
            tableMapping.ColumnMappings.Add("A_Nd_Plan", "A_Nd_Plan")
            tableMapping.ColumnMappings.Add("A_Sm_Plan", "A_Sm_Plan")
            tableMapping.ColumnMappings.Add("A_Eu_Plan", "A_Eu_Plan")
            tableMapping.ColumnMappings.Add("A_Gd_Plan", "A_Gd_Plan")
            tableMapping.ColumnMappings.Add("A_Tb_Plan", "A_Tb_Plan")
            tableMapping.ColumnMappings.Add("A_Dy_Plan", "A_Dy_Plan")
            tableMapping.ColumnMappings.Add("A_Er_Plan", "A_Er_Plan")
            tableMapping.ColumnMappings.Add("A_Tm_Plan", "A_Tm_Plan")
            tableMapping.ColumnMappings.Add("A_Yb_Plan", "A_Yb_Plan")
            tableMapping.ColumnMappings.Add("A_Lu_Plan", "A_Lu_Plan")
            tableMapping.ColumnMappings.Add("A_Hf_Plan", "A_Hf_Plan")
            tableMapping.ColumnMappings.Add("A_Ta_Plan", "A_Ta_Plan")
            tableMapping.ColumnMappings.Add("A_W_Plan", "A_W_Plan")
            tableMapping.ColumnMappings.Add("A_Re_Plan", "A_Re_Plan")
            tableMapping.ColumnMappings.Add("A_Ir_Plan", "A_Ir_Plan")
            tableMapping.ColumnMappings.Add("A_Pt_Plan", "A_Pt_Plan")
            tableMapping.ColumnMappings.Add("A_Au_Plan", "A_Au_Plan")
            tableMapping.ColumnMappings.Add("A_Hg_Plan", "A_Hg_Plan")
            tableMapping.ColumnMappings.Add("A_Th_Plan", "A_Th_Plan")
            tableMapping.ColumnMappings.Add("A_U_Plan", "A_U_Plan")
            tableMapping.ColumnMappings.Add("A_Cupboard_Number", "A_Cupboard_Number")
            tableMapping.ColumnMappings.Add("A_Box_Number", "A_Box_Number")
            tableMapping.ColumnMappings.Add("A_Received_By", "A_Received_By")
            tableMapping.ColumnMappings.Add("A_Notes", "A_Notes")
            tableMapping.ColumnMappings.Add("P_Cleaning_Fact", "P_Cleaning_Fact")
            tableMapping.ColumnMappings.Add("P_Drying_Fact", "P_Drying_Fact")
            tableMapping.ColumnMappings.Add("P_Evaporation_Fact", "P_Evaporation_Fact")
            tableMapping.ColumnMappings.Add("P_Freeze_Drying_Fact", "P_Freeze_Drying_Fact")
            tableMapping.ColumnMappings.Add("P_Homogenizing_Fact", "P_Homogenizing_Fact")
            tableMapping.ColumnMappings.Add("P_Pelletization_Fact", "P_Pelletization_Fact")
            tableMapping.ColumnMappings.Add("P_Fragmentation_Fact", "P_Fragmentation_Fact")
            tableMapping.ColumnMappings.Add("P_Weighting_SLI", "P_Weighting_SLI")
            tableMapping.ColumnMappings.Add("P_Weighting_LLI", "P_Weighting_LLI")
            tableMapping.ColumnMappings.Add("P_Date_Sample_Preparation", "P_Date_Sample_Preparation")
            tableMapping.ColumnMappings.Add("P_Maked_By", "P_Maked_By")
            tableMapping.ColumnMappings.Add("I_SLI_Time_Start", "I_SLI_Time_Start")
            tableMapping.ColumnMappings.Add("I_SLI_Channel_Irradiation", "I_SLI_Channel_Irradiation")
            tableMapping.ColumnMappings.Add("I_SLI_File_First", "I_SLI_File_First")
            tableMapping.ColumnMappings.Add("I_SLI_Irradiated_By", "I_SLI_Irradiated_By")
            tableMapping.ColumnMappings.Add("I_LLI_1_Irradiation_Fact", "I_LLI_1_Irradiation_Fact")
            tableMapping.ColumnMappings.Add("I_LLI_1_Date_Start", "I_LLI_1_Date_Start")
            tableMapping.ColumnMappings.Add("I_LLI_1_Time_Start", "I_LLI_1_Time_Start")
            tableMapping.ColumnMappings.Add("I_LLI_1_Date_Finish", "I_LLI_1_Date_Finish")
            tableMapping.ColumnMappings.Add("I_LLI_1_Time_Finish", "I_LLI_1_Time_Finish")
            tableMapping.ColumnMappings.Add("I_LLI_1_Channel_Irradiation", "I_LLI_1_Channel_Irradiation")
            tableMapping.ColumnMappings.Add("I_LLI_1_Detector_Number", "I_LLI_1_Detector_Number")
            tableMapping.ColumnMappings.Add("I_LLI_1_File_First", "I_LLI_1_File_First")
            tableMapping.ColumnMappings.Add("I_LLI_1_File_Last", "I_LLI_1_File_Last")
            tableMapping.ColumnMappings.Add("I_LLI_1_Irradiated_By", "I_LLI_1_Irradiated_By")
            tableMapping.ColumnMappings.Add("I_LLI_1_Irradiation_Log", "I_LLI_1_Irradiation_Log")
            tableMapping.ColumnMappings.Add("I_LLI_2_Irradiation_Fact", "I_LLI_2_Irradiation_Fact")
            tableMapping.ColumnMappings.Add("I_LLI_2_Date_Start", "I_LLI_2_Date_Start")
            tableMapping.ColumnMappings.Add("I_LLI_2_Time_Start", "I_LLI_2_Time_Start")
            tableMapping.ColumnMappings.Add("I_LLI_2_Date_Finish", "I_LLI_2_Date_Finish")
            tableMapping.ColumnMappings.Add("I_LLI_2_Time_Finish", "I_LLI_2_Time_Finish")
            tableMapping.ColumnMappings.Add("I_LLI_2_Channel_Irradiation", "I_LLI_2_Channel_Irradiation")
            tableMapping.ColumnMappings.Add("I_LLI_2_Detector_Number", "I_LLI_2_Detector_Number")
            tableMapping.ColumnMappings.Add("I_LLI_2_File_First", "I_LLI_2_File_First")
            tableMapping.ColumnMappings.Add("I_LLI_2_File_Last", "I_LLI_2_File_Last")
            tableMapping.ColumnMappings.Add("I_LLI_2_Irradiated_By", "I_LLI_2_Irradiated_By")
            tableMapping.ColumnMappings.Add("I_LLI_2_Irradiation_Log", "I_LLI_2_Irradiation_Log")
            tableMapping.ColumnMappings.Add("I_SLI_Date", "I_SLI_Date")
            tableMapping.ColumnMappings.Add("I_SLI_Irradiation_Log_Number", "I_SLI_Irradiation_Log_Number")
            tableMapping.ColumnMappings.Add("I_SLI_Measured_By", "I_SLI_Measured_By")
            tableMapping.ColumnMappings.Add("I_SLI_Detector_1", "I_SLI_Detector_1")
            tableMapping.ColumnMappings.Add("I_SLI_Detector_2", "I_SLI_Detector_2")
            tableMapping.ColumnMappings.Add("I_SLI_Detector_3", "I_SLI_Detector_3")
            tableMapping.ColumnMappings.Add("I_SLI_Detector_4", "I_SLI_Detector_4")
            tableMapping.ColumnMappings.Add("I_SLI_File_Last", "I_SLI_File_Last")
            tableMapping.ColumnMappings.Add("I_SLI_Duration", "I_SLI_Duration1")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [table_Sample] ([F_Country_Code], [F_Client_ID], [F_Year], [F_Sample_"& _ 
                "Set_ID], [F_Sample_Set_Index], [A_Sample_ID], [A_Client_Sample_ID], [A_Sample_Ty"& _ 
                "pe], [A_Sample_Subtype], [A_Collection_Place], [A_Latitude], [A_Longitude], [A_C"& _ 
                "leaning_Plan], [A_Drying_Plan], [A_Evaporation_Plan], [A_Freeze_Drying_Plan], [A"& _ 
                "_Homogenizing_Plan], [A_Pelletization_Plan], [A_Fragmentation_Plan], [A_Determin"& _ 
                "ed_Elements], [A_Halogens_Plan], [A_Heavy_Metals_Plan], [A_Short_Lived_Plan], [A"& _ 
                "_Long_Lived_Plan], [A_F_Plan], [A_Na_Plan], [A_Mg_Plan], [A_Al_Plan], [A_Si_Plan"& _ 
                "], [A_S_Plan], [A_Cl_Plan], [A_K_Plan], [A_Ca_Plan], [A_Sc_Plan], [A_Ti_Plan], ["& _ 
                "A_V_Plan], [A_Cr_Plan], [A_Mn_Plan], [A_Fe_Plan], [A_Co_Plan], [A_Cu_Plan], [A_Z"& _ 
                "n_Plan], [A_Ga_Plan], [A_As_Plan], [A_Se_Plan], [A_Br_Plan], [A_Rb_Plan], [A_Sr_"& _ 
                "Plan], [A_Y_Plan], [A_Zr_Plan], [A_Nb_Plan], [A_Mo_Plan], [A_Ru_Plan], [A_Ag_Pla"& _ 
                "n], [A_Cd_Plan], [A_In_Plan], [A_Sn_Plan], [A_Sb_Plan], [A_I_Plan], [A_Cs_Plan],"& _ 
                " [A_Ba_Plan], [A_La_Plan], [A_Ce_Plan], [A_Nd_Plan], [A_Sm_Plan], [A_Eu_Plan], ["& _ 
                "A_Gd_Plan], [A_Tb_Plan], [A_Dy_Plan], [A_Er_Plan], [A_Tm_Plan], [A_Yb_Plan], [A_"& _ 
                "Lu_Plan], [A_Hf_Plan], [A_Ta_Plan], [A_W_Plan], [A_Re_Plan], [A_Ir_Plan], [A_Pt_"& _ 
                "Plan], [A_Au_Plan], [A_Hg_Plan], [A_Th_Plan], [A_U_Plan], [A_Cupboard_Number], ["& _ 
                "A_Box_Number], [A_Received_By], [A_Notes], [P_Cleaning_Fact], [P_Drying_Fact], ["& _ 
                "P_Evaporation_Fact], [P_Freeze_Drying_Fact], [P_Homogenizing_Fact], [P_Pelletiza"& _ 
                "tion_Fact], [P_Fragmentation_Fact], [P_Weighting_SLI], [P_Weighting_LLI], [P_Dat"& _ 
                "e_Sample_Preparation], [P_Maked_By], [I_SLI_Time_Start], [I_SLI_Channel_Irradiat"& _ 
                "ion], [I_SLI_File_First], [I_SLI_Irradiated_By], [I_LLI_1_Irradiation_Fact], [I_"& _ 
                "LLI_1_Date_Start], [I_LLI_1_Time_Start], [I_LLI_1_Date_Finish], [I_LLI_1_Time_Fi"& _ 
                "nish], [I_LLI_1_Channel_Irradiation], [I_LLI_1_Detector_Number], [I_LLI_1_File_F"& _ 
                "irst], [I_LLI_1_File_Last], [I_LLI_1_Irradiated_By], [I_LLI_1_Irradiation_Log], "& _ 
                "[I_LLI_2_Irradiation_Fact], [I_LLI_2_Date_Start], [I_LLI_2_Time_Start], [I_LLI_2"& _ 
                "_Date_Finish], [I_LLI_2_Time_Finish], [I_LLI_2_Channel_Irradiation], [I_LLI_2_De"& _ 
                "tector_Number], [I_LLI_2_File_First], [I_LLI_2_File_Last], [I_LLI_2_Irradiated_B"& _ 
                "y], [I_LLI_2_Irradiation_Log], [I_SLI_Date], [I_SLI_Duration], [I_SLI_Irradiatio"& _ 
                "n_Log_Number], [I_SLI_Measured_By], [I_SLI_Detector_1], [I_SLI_Detector_2], [I_S"& _ 
                "LI_Detector_3], [I_SLI_Detector_4], [I_SLI_File_Last]) VALUES (@F_Country_Code, "& _ 
                "@F_Client_ID, @F_Year, @F_Sample_Set_ID, @F_Sample_Set_Index, @A_Sample_ID, @A_C"& _ 
                "lient_Sample_ID, @A_Sample_Type, @A_Sample_Subtype, @A_Collection_Place, @A_Lati"& _ 
                "tude, @A_Longitude, @A_Cleaning_Plan, @A_Drying_Plan, @A_Evaporation_Plan, @A_Fr"& _ 
                "eeze_Drying_Plan, @A_Homogenizing_Plan, @A_Pelletization_Plan, @A_Fragmentation_"& _ 
                "Plan, @A_Determined_Elements, @A_Halogens_Plan, @A_Heavy_Metals_Plan, @A_Short_L"& _ 
                "ived_Plan, @A_Long_Lived_Plan, @A_F_Plan, @A_Na_Plan, @A_Mg_Plan, @A_Al_Plan, @A"& _ 
                "_Si_Plan, @A_S_Plan, @A_Cl_Plan, @A_K_Plan, @A_Ca_Plan, @A_Sc_Plan, @A_Ti_Plan, "& _ 
                "@A_V_Plan, @A_Cr_Plan, @A_Mn_Plan, @A_Fe_Plan, @A_Co_Plan, @A_Cu_Plan, @A_Zn_Pla"& _ 
                "n, @A_Ga_Plan, @A_As_Plan, @A_Se_Plan, @A_Br_Plan, @A_Rb_Plan, @A_Sr_Plan, @A_Y_"& _ 
                "Plan, @A_Zr_Plan, @A_Nb_Plan, @A_Mo_Plan, @A_Ru_Plan, @A_Ag_Plan, @A_Cd_Plan, @A"& _ 
                "_In_Plan, @A_Sn_Plan, @A_Sb_Plan, @A_I_Plan, @A_Cs_Plan, @A_Ba_Plan, @A_La_Plan,"& _ 
                " @A_Ce_Plan, @A_Nd_Plan, @A_Sm_Plan, @A_Eu_Plan, @A_Gd_Plan, @A_Tb_Plan, @A_Dy_P"& _ 
                "lan, @A_Er_Plan, @A_Tm_Plan, @A_Yb_Plan, @A_Lu_Plan, @A_Hf_Plan, @A_Ta_Plan, @A_"& _ 
                "W_Plan, @A_Re_Plan, @A_Ir_Plan, @A_Pt_Plan, @A_Au_Plan, @A_Hg_Plan, @A_Th_Plan, "& _ 
                "@A_U_Plan, @A_Cupboard_Number, @A_Box_Number, @A_Received_By, @A_Notes, @P_Clean"& _ 
                "ing_Fact, @P_Drying_Fact, @P_Evaporation_Fact, @P_Freeze_Drying_Fact, @P_Homogen"& _ 
                "izing_Fact, @P_Pelletization_Fact, @P_Fragmentation_Fact, @P_Weighting_SLI, @P_W"& _ 
                "eighting_LLI, @P_Date_Sample_Preparation, @P_Maked_By, @I_SLI_Time_Start, @I_SLI"& _ 
                "_Channel_Irradiation, @I_SLI_File_First, @I_SLI_Irradiated_By, @I_LLI_1_Irradiat"& _ 
                "ion_Fact, @I_LLI_1_Date_Start, @I_LLI_1_Time_Start, @I_LLI_1_Date_Finish, @I_LLI"& _ 
                "_1_Time_Finish, @I_LLI_1_Channel_Irradiation, @I_LLI_1_Detector_Number, @I_LLI_1"& _ 
                "_File_First, @I_LLI_1_File_Last, @I_LLI_1_Irradiated_By, @I_LLI_1_Irradiation_Lo"& _ 
                "g, @I_LLI_2_Irradiation_Fact, @I_LLI_2_Date_Start, @I_LLI_2_Time_Start, @I_LLI_2"& _ 
                "_Date_Finish, @I_LLI_2_Time_Finish, @I_LLI_2_Channel_Irradiation, @I_LLI_2_Detec"& _ 
                "tor_Number, @I_LLI_2_File_First, @I_LLI_2_File_Last, @I_LLI_2_Irradiated_By, @I_"& _ 
                "LLI_2_Irradiation_Log, @I_SLI_Date, @I_SLI_Duration, @I_SLI_Irradiation_Log_Numb"& _ 
                "er, @I_SLI_Measured_By, @I_SLI_Detector_1, @I_SLI_Detector_2, @I_SLI_Detector_3,"& _ 
                " @I_SLI_Detector_4, @I_SLI_File_Last)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Client_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_Index", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sample_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Client_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Client_Sample_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Sample_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sample_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Sample_Subtype", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sample_Subtype", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Collection_Place", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Collection_Place", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Latitude", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Latitude", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Longitude", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Longitude", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Cleaning_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Cleaning_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Drying_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Drying_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Evaporation_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Evaporation_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Freeze_Drying_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Freeze_Drying_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Homogenizing_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Homogenizing_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Pelletization_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Pelletization_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Fragmentation_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Fragmentation_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Determined_Elements", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Determined_Elements", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Halogens_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Halogens_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Heavy_Metals_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Heavy_Metals_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Short_Lived_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Short_Lived_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Long_Lived_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Long_Lived_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_F_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_F_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Na_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Na_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Mg_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Mg_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Al_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Al_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Si_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Si_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_S_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_S_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Cl_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Cl_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_K_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_K_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Ca_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Ca_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Sc_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sc_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Ti_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Ti_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_V_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_V_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Cr_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Cr_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Mn_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Mn_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Fe_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Fe_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Co_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Co_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Cu_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Cu_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Zn_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Zn_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Ga_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Ga_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_As_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_As_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Se_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Se_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Br_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Br_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Rb_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Rb_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Sr_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sr_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Y_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Y_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Zr_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Zr_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Nb_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Nb_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Mo_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Mo_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Ru_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Ru_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Ag_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Ag_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Cd_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Cd_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_In_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_In_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Sn_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sn_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Sb_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sb_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_I_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_I_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Cs_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Cs_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Ba_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Ba_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_La_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_La_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Ce_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Ce_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Nd_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Nd_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Sm_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sm_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Eu_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Eu_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Gd_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Gd_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Tb_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Tb_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Dy_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Dy_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Er_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Er_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Tm_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Tm_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Yb_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Yb_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Lu_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Lu_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Hf_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Hf_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Ta_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Ta_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_W_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_W_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Re_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Re_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Ir_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Ir_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Pt_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Pt_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Au_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Au_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Hg_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Hg_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Th_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Th_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_U_Plan", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_U_Plan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Cupboard_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Cupboard_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Box_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Box_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Received_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Received_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Notes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Notes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Cleaning_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Cleaning_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Drying_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Drying_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Evaporation_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Evaporation_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Freeze_Drying_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Freeze_Drying_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Homogenizing_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Homogenizing_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Pelletization_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Pelletization_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Fragmentation_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Fragmentation_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Weighting_SLI", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Weighting_SLI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Weighting_LLI", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Weighting_LLI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Date_Sample_Preparation", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Date_Sample_Preparation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Maked_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Maked_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Time_Start", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Time_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Channel_Irradiation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Channel_Irradiation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_File_First", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_File_First", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Irradiated_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Irradiated_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_1_Irradiation_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_1_Irradiation_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_1_Date_Start", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_1_Date_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_1_Time_Start", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_1_Time_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_1_Date_Finish", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_1_Date_Finish", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_1_Time_Finish", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_1_Time_Finish", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_1_Channel_Irradiation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_1_Channel_Irradiation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_1_Detector_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_1_Detector_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_1_File_First", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_1_File_First", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_1_File_Last", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_1_File_Last", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_1_Irradiated_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_1_Irradiated_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_1_Irradiation_Log", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_1_Irradiation_Log", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_2_Irradiation_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_2_Irradiation_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_2_Date_Start", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_2_Date_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_2_Time_Start", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_2_Time_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_2_Date_Finish", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_2_Date_Finish", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_2_Time_Finish", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_2_Time_Finish", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_2_Channel_Irradiation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_2_Channel_Irradiation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_2_Detector_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_2_Detector_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_2_File_First", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_2_File_First", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_2_File_Last", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_2_File_Last", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_2_Irradiated_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_2_Irradiated_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_LLI_2_Irradiation_Log", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_LLI_2_Irradiation_Log", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Duration", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Duration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Irradiation_Log_Number", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Irradiation_Log_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Measured_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Measured_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Detector_1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Detector_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Detector_2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Detector_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Detector_3", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Detector_3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Detector_4", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Detector_4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_File_Last", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_File_Last", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE    table_Sample"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              I_SLI_Channel_Irradiation = @I_SLI_Chann"& _ 
                "el_Irradiation, I_SLI_Time_Start = @I_SLI_Time_Start, I_SLI_Duration = @I_SLI_Du"& _ 
                "ration, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      I_SLI_File_First = @I_SLI_File_First, I_SLI_Irra"& _ 
                "diation_Log_Number = @I_SLI_Irradiation_Log_Number, I_SLI_Irradiated_By = @I_SLI"& _ 
                "_Irradiated_By, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      I_SLI_Measured_By = @I_SLI_Measured_By, "& _ 
                "I_SLI_Detector_1 = @I_SLI_Detector_1, I_SLI_Detector_2 = @I_SLI_Detector_2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                    I_SLI_Detector_3 = @I_SLI_Detector_3, I_SLI_Detector_4 = @I_"& _ 
                "SLI_Detector_4, I_SLI_File_Last = @I_SLI_File_Last"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (I_SLI_Date = @I_S"& _ 
                "LI_Date) AND (F_Country_Code = @F_Country_Code) AND (F_Client_ID = @F_Client_ID)"& _ 
                " AND (F_Year = @F_Year) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (F_Sample_Set_ID = @F_Sample"& _ 
                "_Set_ID) AND (F_Sample_Set_Index = @F_Sample_Set_Index) AND (A_Sample_ID = @A_Sa"& _ 
                "mple_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Channel_Irradiation", Global.System.Data.SqlDbType.NVarChar, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Channel_Irradiation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Time_Start", Global.System.Data.SqlDbType.Time, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Time_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Duration", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Duration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_File_First", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_File_First", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Irradiation_Log_Number", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Irradiation_Log_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Irradiated_By", Global.System.Data.SqlDbType.NVarChar, 25, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Irradiated_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Measured_By", Global.System.Data.SqlDbType.NVarChar, 25, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Measured_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Detector_1", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Detector_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Detector_2", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Detector_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Detector_3", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Detector_3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Detector_4", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Detector_4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_File_Last", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_File_Last", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Date", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Country_Code", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Country_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Client_ID", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Client_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Year", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Year", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_Index", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sample_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT F_Country_Code, F_Client_ID, F_Year, F_Sample_Set_ID, F_Sample_Set_Index, "& _ 
                "A_Sample_ID, A_Client_Sample_ID, A_Sample_Type, A_Sample_Subtype, A_Collection_P"& _ 
                "lace, A_Latitude, A_Longitude, A_Cleaning_Plan, A_Drying_Plan, A_Evaporation_Pla"& _ 
                "n, A_Freeze_Drying_Plan, A_Homogenizing_Plan, A_Pelletization_Plan, A_Fragmentat"& _ 
                "ion_Plan, A_Determined_Elements, A_Halogens_Plan, A_Heavy_Metals_Plan, A_Short_L"& _ 
                "ived_Plan, A_Long_Lived_Plan, A_F_Plan, A_Na_Plan, A_Mg_Plan, A_Al_Plan, A_Si_Pl"& _ 
                "an, A_S_Plan, A_Cl_Plan, A_K_Plan, A_Ca_Plan, A_Sc_Plan, A_Ti_Plan, A_V_Plan, A_"& _ 
                "Cr_Plan, A_Mn_Plan, A_Fe_Plan, A_Co_Plan, A_Cu_Plan, A_Zn_Plan, A_Ga_Plan, A_As_"& _ 
                "Plan, A_Se_Plan, A_Br_Plan, A_Rb_Plan, A_Sr_Plan, A_Y_Plan, A_Zr_Plan, A_Nb_Plan"& _ 
                ", A_Mo_Plan, A_Ru_Plan, A_Ag_Plan, A_Cd_Plan, A_In_Plan, A_Sn_Plan, A_Sb_Plan, A"& _ 
                "_I_Plan, A_Cs_Plan, A_Ba_Plan, A_La_Plan, A_Ce_Plan, A_Nd_Plan, A_Sm_Plan, A_Eu_"& _ 
                "Plan, A_Gd_Plan, A_Tb_Plan, A_Dy_Plan, A_Er_Plan, A_Tm_Plan, A_Yb_Plan, A_Lu_Pla"& _ 
                "n, A_Hf_Plan, A_Ta_Plan, A_W_Plan, A_Re_Plan, A_Ir_Plan, A_Pt_Plan, A_Au_Plan, A"& _ 
                "_Hg_Plan, A_Th_Plan, A_U_Plan, A_Cupboard_Number, A_Box_Number, A_Received_By, A"& _ 
                "_Notes, P_Cleaning_Fact, P_Drying_Fact, P_Evaporation_Fact, P_Freeze_Drying_Fact"& _ 
                ", P_Homogenizing_Fact, P_Pelletization_Fact, P_Fragmentation_Fact, P_Weighting_S"& _ 
                "LI, P_Weighting_LLI, P_Date_Sample_Preparation, P_Maked_By, I_SLI_Time_Start, I_"& _ 
                "SLI_Channel_Irradiation, I_SLI_File_First, I_SLI_Irradiated_By, I_LLI_1_Irradiat"& _ 
                "ion_Fact, I_LLI_1_Date_Start, I_LLI_1_Time_Start, I_LLI_1_Date_Finish, I_LLI_1_T"& _ 
                "ime_Finish, I_LLI_1_Channel_Irradiation, I_LLI_1_Detector_Number, I_LLI_1_File_F"& _ 
                "irst, I_LLI_1_File_Last, I_LLI_1_Irradiated_By, I_LLI_1_Irradiation_Log, I_LLI_2"& _ 
                "_Irradiation_Fact, I_LLI_2_Date_Start, I_LLI_2_Time_Start, I_LLI_2_Date_Finish, "& _ 
                "I_LLI_2_Time_Finish, I_LLI_2_Channel_Irradiation, I_LLI_2_Detector_Number, I_LLI"& _ 
                "_2_File_First, I_LLI_2_File_Last, I_LLI_2_Irradiated_By, I_LLI_2_Irradiation_Log"& _ 
                ", I_SLI_Date, I_SLI_Duration, I_SLI_Irradiation_Log_Number, I_SLI_Measured_By, I"& _ 
                "_SLI_Detector_1, I_SLI_Detector_2, I_SLI_Detector_3, I_SLI_Detector_4, I_SLI_Fil"& _ 
                "e_Last FROM table_Sample WHERE (F_Country_Code = @F_Country_Code) AND (F_Client_"& _ 
                "ID = @F_Client_ID) AND (F_Year = @F_Year) AND (F_Sample_Set_ID = @F_Sample_Set_I"& _ 
                "D) AND (F_Sample_Set_Index = @F_Sample_Set_Index)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Country_Code", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Client_ID", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Client_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Year", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_Index", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     F_Country_Code, F_Client_ID, F_Year, F_Sample_Set_ID, F_Sample_Set_Ind"& _ 
                "ex, A_Sample_ID, I_SLI_Date, I_SLI_Channel_Irradiation, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "I_SLI_Time_Start, I_SLI_Duration, I_SLI_File_First, I_SLI_Irradiation_Log_Number"& _ 
                ", I_SLI_Irradiated_By, I_SLI_Measured_By, I_SLI_Detector_1, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "    I_SLI_Detector_2, I_SLI_Detector_3, I_SLI_Detector_4, I_SLI_File_Last"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM "& _ 
                "        table_Sample"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (I_SLI_Date = @I_SLI_Date)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Date", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "UPDATE    table_Sample"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              I_SLI_Position_Number = @I_SLI_Position_"& _ 
                "Number, I_SLI_Channel_Irradiation = @I_SLI_Channel_Irradiation, I_SLI_Time_Start"& _ 
                " = @I_SLI_Time_Start, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      I_SLI_Duration = @I_SLI_Duration, "& _ 
                "I_SLI_Detector_Number = @I_SLI_Detector_Number, I_SLI_File_First = @I_SLI_File_F"& _ 
                "irst, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      I_SLI_Measurements_Quantity = @I_SLI_Measurements_"& _ 
                "Quantity, I_SLI_Irradiation_Log_Number = @I_SLI_Irradiation_Log_Number, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                I_SLI_Irradiated_By = @I_SLI_Irradiated_By, I_SLI_Measured_By = "& _ 
                "@I_SLI_Measured_By"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (I_SLI_Date = @I_SLI_Date)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Position_Number", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Position_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Channel_Irradiation", Global.System.Data.SqlDbType.NVarChar, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Channel_Irradiation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Time_Start", Global.System.Data.SqlDbType.Time, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Time_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Duration", Global.System.Data.SqlDbType.Time, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Duration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Detector_Number", Global.System.Data.SqlDbType.NVarChar, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Detector_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_File_First", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_File_First", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Measurements_Quantity", Global.System.Data.SqlDbType.NVarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Measurements_Quantity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Irradiation_Log_Number", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Irradiation_Log_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Irradiated_By", Global.System.Data.SqlDbType.NVarChar, 25, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Irradiated_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Measured_By", Global.System.Data.SqlDbType.NVarChar, 25, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Measured_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_SLI_Date", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "I_SLI_Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NAA_DB_EXPDataSet.table_SampleDataTable, ByVal F_Country_Code As String, ByVal F_Client_ID As String, ByVal F_Year As String, ByVal F_Sample_Set_ID As String, ByVal F_Sample_Set_Index As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (F_Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Country_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(F_Country_Code,String)
            End If
            If (F_Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Client_ID")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(F_Client_ID,String)
            End If
            If (F_Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Year")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(F_Year,String)
            End If
            If (F_Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_ID")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(F_Sample_Set_ID,String)
            End If
            If (F_Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_Index")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(F_Sample_Set_Index,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal F_Country_Code As String, ByVal F_Client_ID As String, ByVal F_Year As String, ByVal F_Sample_Set_ID As String, ByVal F_Sample_Set_Index As String) As NAA_DB_EXPDataSet.table_SampleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (F_Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Country_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(F_Country_Code,String)
            End If
            If (F_Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Client_ID")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(F_Client_ID,String)
            End If
            If (F_Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Year")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(F_Year,String)
            End If
            If (F_Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_ID")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(F_Sample_Set_ID,String)
            End If
            If (F_Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_Index")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(F_Sample_Set_Index,String)
            End If
            Dim dataTable As NAA_DB_EXPDataSet.table_SampleDataTable = New NAA_DB_EXPDataSet.table_SampleDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function Fill_SLI_Irradiation_Log(ByVal dataTable As NAA_DB_EXPDataSet.table_SampleDataTable, ByVal I_SLI_Date As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (I_SLI_Date Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(I_SLI_Date,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetData_SLI_Irradiation_Log(ByVal I_SLI_Date As String) As NAA_DB_EXPDataSet.table_SampleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (I_SLI_Date Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(I_SLI_Date,String)
            End If
            Dim dataTable As NAA_DB_EXPDataSet.table_SampleDataTable = New NAA_DB_EXPDataSet.table_SampleDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_SampleDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_Sample")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal F_Country_Code As String,  _
                    ByVal F_Client_ID As String,  _
                    ByVal F_Year As String,  _
                    ByVal F_Sample_Set_ID As String,  _
                    ByVal F_Sample_Set_Index As String,  _
                    ByVal A_Sample_ID As String,  _
                    ByVal A_Client_Sample_ID As String,  _
                    ByVal A_Sample_Type As String,  _
                    ByVal A_Sample_Subtype As String,  _
                    ByVal A_Collection_Place As String,  _
                    ByVal A_Latitude As String,  _
                    ByVal A_Longitude As String,  _
                    ByVal A_Cleaning_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Drying_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Evaporation_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Freeze_Drying_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Homogenizing_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Pelletization_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Fragmentation_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Determined_Elements As String,  _
                    ByVal A_Halogens_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Heavy_Metals_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Short_Lived_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Long_Lived_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_F_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Na_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Mg_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Al_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Si_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_S_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Cl_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_K_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Ca_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Sc_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Ti_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_V_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Cr_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Mn_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Fe_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Co_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Cu_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Zn_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Ga_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_As_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Se_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Br_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Rb_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Sr_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Y_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Zr_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Nb_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Mo_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Ru_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Ag_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Cd_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_In_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Sn_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Sb_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_I_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Cs_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Ba_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_La_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Ce_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Nd_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Sm_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Eu_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Gd_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Tb_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Dy_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Er_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Tm_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Yb_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Lu_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Hf_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Ta_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_W_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Re_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Ir_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Pt_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Au_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Hg_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Th_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_U_Plan As Global.System.Nullable(Of Boolean),  _
                    ByVal A_Cupboard_Number As String,  _
                    ByVal A_Box_Number As String,  _
                    ByVal A_Received_By As String,  _
                    ByVal A_Notes As String,  _
                    ByVal P_Cleaning_Fact As Global.System.Nullable(Of Boolean),  _
                    ByVal P_Drying_Fact As Global.System.Nullable(Of Boolean),  _
                    ByVal P_Evaporation_Fact As Global.System.Nullable(Of Boolean),  _
                    ByVal P_Freeze_Drying_Fact As Global.System.Nullable(Of Boolean),  _
                    ByVal P_Homogenizing_Fact As Global.System.Nullable(Of Boolean),  _
                    ByVal P_Pelletization_Fact As Global.System.Nullable(Of Boolean),  _
                    ByVal P_Fragmentation_Fact As Global.System.Nullable(Of Boolean),  _
                    ByVal P_Weighting_SLI As Global.System.Nullable(Of Single),  _
                    ByVal P_Weighting_LLI As Global.System.Nullable(Of Single),  _
                    ByVal P_Date_Sample_Preparation As Global.System.Nullable(Of Date),  _
                    ByVal P_Maked_By As String,  _
                    ByVal I_SLI_Time_Start As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal I_SLI_Channel_Irradiation As String,  _
                    ByVal I_SLI_File_First As String,  _
                    ByVal I_SLI_Irradiated_By As String,  _
                    ByVal I_LLI_1_Irradiation_Fact As Global.System.Nullable(Of Boolean),  _
                    ByVal I_LLI_1_Date_Start As Global.System.Nullable(Of Date),  _
                    ByVal I_LLI_1_Time_Start As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal I_LLI_1_Date_Finish As Global.System.Nullable(Of Date),  _
                    ByVal I_LLI_1_Time_Finish As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal I_LLI_1_Channel_Irradiation As String,  _
                    ByVal I_LLI_1_Detector_Number As String,  _
                    ByVal I_LLI_1_File_First As String,  _
                    ByVal I_LLI_1_File_Last As String,  _
                    ByVal I_LLI_1_Irradiated_By As String,  _
                    ByVal I_LLI_1_Irradiation_Log As Global.System.Nullable(Of Date),  _
                    ByVal I_LLI_2_Irradiation_Fact As Global.System.Nullable(Of Boolean),  _
                    ByVal I_LLI_2_Date_Start As Global.System.Nullable(Of Date),  _
                    ByVal I_LLI_2_Time_Start As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal I_LLI_2_Date_Finish As Global.System.Nullable(Of Date),  _
                    ByVal I_LLI_2_Time_Finish As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal I_LLI_2_Channel_Irradiation As String,  _
                    ByVal I_LLI_2_Detector_Number As String,  _
                    ByVal I_LLI_2_File_First As String,  _
                    ByVal I_LLI_2_File_Last As String,  _
                    ByVal I_LLI_2_Irradiated_By As String,  _
                    ByVal I_LLI_2_Irradiation_Log As Global.System.Nullable(Of Date),  _
                    ByVal I_SLI_Date As Global.System.Nullable(Of Date),  _
                    ByVal I_SLI_Duration As Global.System.Nullable(Of Integer),  _
                    ByVal I_SLI_Irradiation_Log_Number As Global.System.Nullable(Of Date),  _
                    ByVal I_SLI_Measured_By As String,  _
                    ByVal I_SLI_Detector_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal I_SLI_Detector_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal I_SLI_Detector_3 As Global.System.Nullable(Of Boolean),  _
                    ByVal I_SLI_Detector_4 As Global.System.Nullable(Of Boolean),  _
                    ByVal I_SLI_File_Last As String) As Integer
            If (F_Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Country_Code")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(F_Country_Code,String)
            End If
            If (F_Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Client_ID")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(F_Client_ID,String)
            End If
            If (F_Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Year")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(F_Year,String)
            End If
            If (F_Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_ID")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(F_Sample_Set_ID,String)
            End If
            If (F_Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_Index")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(F_Sample_Set_Index,String)
            End If
            If (A_Sample_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("A_Sample_ID")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(A_Sample_ID,String)
            End If
            If (A_Client_Sample_ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(A_Client_Sample_ID,String)
            End If
            If (A_Sample_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(A_Sample_Type,String)
            End If
            If (A_Sample_Subtype Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(A_Sample_Subtype,String)
            End If
            If (A_Collection_Place Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(A_Collection_Place,String)
            End If
            If (A_Latitude Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(A_Latitude,String)
            End If
            If (A_Longitude Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(A_Longitude,String)
            End If
            If (A_Cleaning_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(A_Cleaning_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (A_Drying_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(A_Drying_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (A_Evaporation_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(A_Evaporation_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (A_Freeze_Drying_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(A_Freeze_Drying_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (A_Homogenizing_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(A_Homogenizing_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (A_Pelletization_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(A_Pelletization_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (A_Fragmentation_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(A_Fragmentation_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (A_Determined_Elements Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(A_Determined_Elements,String)
            End If
            If (A_Halogens_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(A_Halogens_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (A_Heavy_Metals_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(A_Heavy_Metals_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (A_Short_Lived_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(A_Short_Lived_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (A_Long_Lived_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(A_Long_Lived_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (A_F_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(A_F_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (A_Na_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(A_Na_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (A_Mg_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(A_Mg_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (A_Al_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(A_Al_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (A_Si_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(A_Si_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (A_S_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(A_S_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (A_Cl_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(A_Cl_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (A_K_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(A_K_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (A_Ca_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(A_Ca_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (A_Sc_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(A_Sc_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (A_Ti_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(A_Ti_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (A_V_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(A_V_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (A_Cr_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(A_Cr_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (A_Mn_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(A_Mn_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (A_Fe_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(A_Fe_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (A_Co_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(A_Co_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (A_Cu_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(A_Cu_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (A_Zn_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(A_Zn_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (A_Ga_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(A_Ga_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (A_As_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(A_As_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (A_Se_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(A_Se_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (A_Br_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(A_Br_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (A_Rb_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(A_Rb_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (A_Sr_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(A_Sr_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (A_Y_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(A_Y_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (A_Zr_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(A_Zr_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (A_Nb_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(A_Nb_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (A_Mo_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(A_Mo_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (A_Ru_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(A_Ru_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (A_Ag_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(A_Ag_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (A_Cd_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(A_Cd_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (A_In_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(A_In_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (A_Sn_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(A_Sn_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (A_Sb_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(A_Sb_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (A_I_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(A_I_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (A_Cs_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(A_Cs_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (A_Ba_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(A_Ba_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (A_La_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(A_La_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (A_Ce_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(A_Ce_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (A_Nd_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(A_Nd_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (A_Sm_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(A_Sm_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (A_Eu_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(A_Eu_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (A_Gd_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(A_Gd_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (A_Tb_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(A_Tb_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (A_Dy_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(A_Dy_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (A_Er_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(A_Er_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (A_Tm_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(A_Tm_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (A_Yb_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(A_Yb_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (A_Lu_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(A_Lu_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (A_Hf_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(A_Hf_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (A_Ta_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(A_Ta_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (A_W_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(A_W_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (A_Re_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(A_Re_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (A_Ir_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(A_Ir_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (A_Pt_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(A_Pt_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (A_Au_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(A_Au_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (A_Hg_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(A_Hg_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (A_Th_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(A_Th_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (A_U_Plan.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(A_U_Plan.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (A_Cupboard_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(A_Cupboard_Number,String)
            End If
            If (A_Box_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(A_Box_Number,String)
            End If
            If (A_Received_By Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(A_Received_By,String)
            End If
            If (A_Notes Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(A_Notes,String)
            End If
            If (P_Cleaning_Fact.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(P_Cleaning_Fact.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (P_Drying_Fact.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(P_Drying_Fact.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (P_Evaporation_Fact.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(P_Evaporation_Fact.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (P_Freeze_Drying_Fact.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(P_Freeze_Drying_Fact.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (P_Homogenizing_Fact.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(P_Homogenizing_Fact.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (P_Pelletization_Fact.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(P_Pelletization_Fact.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (P_Fragmentation_Fact.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(P_Fragmentation_Fact.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (P_Weighting_SLI.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(P_Weighting_SLI.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (P_Weighting_LLI.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(P_Weighting_LLI.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (P_Date_Sample_Preparation.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(96).Value = CType(P_Date_Sample_Preparation.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (P_Maked_By Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(97).Value = CType(P_Maked_By,String)
            End If
            If (I_SLI_Time_Start.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(98).Value = CType(I_SLI_Time_Start.Value,System.TimeSpan)
            Else
                Me.Adapter.InsertCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (I_SLI_Channel_Irradiation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(99).Value = CType(I_SLI_Channel_Irradiation,String)
            End If
            If (I_SLI_File_First Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(100).Value = CType(I_SLI_File_First,String)
            End If
            If (I_SLI_Irradiated_By Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(101).Value = CType(I_SLI_Irradiated_By,String)
            End If
            If (I_LLI_1_Irradiation_Fact.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(102).Value = CType(I_LLI_1_Irradiation_Fact.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (I_LLI_1_Date_Start.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(103).Value = CType(I_LLI_1_Date_Start.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(103).Value = Global.System.DBNull.Value
            End If
            If (I_LLI_1_Time_Start.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(104).Value = CType(I_LLI_1_Time_Start.Value,System.TimeSpan)
            Else
                Me.Adapter.InsertCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (I_LLI_1_Date_Finish.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(105).Value = CType(I_LLI_1_Date_Finish.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (I_LLI_1_Time_Finish.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(106).Value = CType(I_LLI_1_Time_Finish.Value,System.TimeSpan)
            Else
                Me.Adapter.InsertCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (I_LLI_1_Channel_Irradiation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(107).Value = CType(I_LLI_1_Channel_Irradiation,String)
            End If
            If (I_LLI_1_Detector_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(108).Value = CType(I_LLI_1_Detector_Number,String)
            End If
            If (I_LLI_1_File_First Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(109).Value = CType(I_LLI_1_File_First,String)
            End If
            If (I_LLI_1_File_Last Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(110).Value = CType(I_LLI_1_File_Last,String)
            End If
            If (I_LLI_1_Irradiated_By Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(111).Value = CType(I_LLI_1_Irradiated_By,String)
            End If
            If (I_LLI_1_Irradiation_Log.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(112).Value = CType(I_LLI_1_Irradiation_Log.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (I_LLI_2_Irradiation_Fact.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(113).Value = CType(I_LLI_2_Irradiation_Fact.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (I_LLI_2_Date_Start.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(114).Value = CType(I_LLI_2_Date_Start.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (I_LLI_2_Time_Start.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(115).Value = CType(I_LLI_2_Time_Start.Value,System.TimeSpan)
            Else
                Me.Adapter.InsertCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (I_LLI_2_Date_Finish.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(116).Value = CType(I_LLI_2_Date_Finish.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (I_LLI_2_Time_Finish.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(117).Value = CType(I_LLI_2_Time_Finish.Value,System.TimeSpan)
            Else
                Me.Adapter.InsertCommand.Parameters(117).Value = Global.System.DBNull.Value
            End If
            If (I_LLI_2_Channel_Irradiation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(118).Value = CType(I_LLI_2_Channel_Irradiation,String)
            End If
            If (I_LLI_2_Detector_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(119).Value = CType(I_LLI_2_Detector_Number,String)
            End If
            If (I_LLI_2_File_First Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(120).Value = CType(I_LLI_2_File_First,String)
            End If
            If (I_LLI_2_File_Last Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(121).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(121).Value = CType(I_LLI_2_File_Last,String)
            End If
            If (I_LLI_2_Irradiated_By Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(122).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(122).Value = CType(I_LLI_2_Irradiated_By,String)
            End If
            If (I_LLI_2_Irradiation_Log.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(123).Value = CType(I_LLI_2_Irradiation_Log.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(123).Value = Global.System.DBNull.Value
            End If
            If (I_SLI_Date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(124).Value = CType(I_SLI_Date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (I_SLI_Duration.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(125).Value = CType(I_SLI_Duration.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(125).Value = Global.System.DBNull.Value
            End If
            If (I_SLI_Irradiation_Log_Number.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(126).Value = CType(I_SLI_Irradiation_Log_Number.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            If (I_SLI_Measured_By Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(127).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(127).Value = CType(I_SLI_Measured_By,String)
            End If
            If (I_SLI_Detector_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(128).Value = CType(I_SLI_Detector_1.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (I_SLI_Detector_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(129).Value = CType(I_SLI_Detector_2.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(129).Value = Global.System.DBNull.Value
            End If
            If (I_SLI_Detector_3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(130).Value = CType(I_SLI_Detector_3.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (I_SLI_Detector_4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(131).Value = CType(I_SLI_Detector_4.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(131).Value = Global.System.DBNull.Value
            End If
            If (I_SLI_File_Last Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(132).Value = CType(I_SLI_File_Last,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal I_SLI_Channel_Irradiation As String,  _
                    ByVal I_SLI_Time_Start As String,  _
                    ByVal I_SLI_Duration As Global.System.Nullable(Of Integer),  _
                    ByVal I_SLI_File_First As String,  _
                    ByVal I_SLI_Irradiation_Log_Number As String,  _
                    ByVal I_SLI_Irradiated_By As String,  _
                    ByVal I_SLI_Measured_By As String,  _
                    ByVal I_SLI_Detector_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal I_SLI_Detector_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal I_SLI_Detector_3 As Global.System.Nullable(Of Boolean),  _
                    ByVal I_SLI_Detector_4 As Global.System.Nullable(Of Boolean),  _
                    ByVal I_SLI_File_Last As String,  _
                    ByVal I_SLI_Date As String,  _
                    ByVal F_Country_Code As String,  _
                    ByVal F_Client_ID As String,  _
                    ByVal F_Year As String,  _
                    ByVal F_Sample_Set_ID As String,  _
                    ByVal F_Sample_Set_Index As String,  _
                    ByVal A_Sample_ID As String) As Integer
            If (I_SLI_Channel_Irradiation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(I_SLI_Channel_Irradiation,String)
            End If
            If (I_SLI_Time_Start Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(I_SLI_Time_Start,String)
            End If
            If (I_SLI_Duration.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(I_SLI_Duration.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (I_SLI_File_First Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(I_SLI_File_First,String)
            End If
            If (I_SLI_Irradiation_Log_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(I_SLI_Irradiation_Log_Number,String)
            End If
            If (I_SLI_Irradiated_By Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(I_SLI_Irradiated_By,String)
            End If
            If (I_SLI_Measured_By Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(I_SLI_Measured_By,String)
            End If
            If (I_SLI_Detector_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(I_SLI_Detector_1.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (I_SLI_Detector_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(I_SLI_Detector_2.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (I_SLI_Detector_3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(I_SLI_Detector_3.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (I_SLI_Detector_4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(I_SLI_Detector_4.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (I_SLI_File_Last Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(I_SLI_File_Last,String)
            End If
            If (I_SLI_Date Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(I_SLI_Date,String)
            End If
            If (F_Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Country_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(F_Country_Code,String)
            End If
            If (F_Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Client_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(F_Client_ID,String)
            End If
            If (F_Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Year")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(F_Year,String)
            End If
            If (F_Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(F_Sample_Set_ID,String)
            End If
            If (F_Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_Index")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(F_Sample_Set_Index,String)
            End If
            If (A_Sample_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("A_Sample_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(A_Sample_ID,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function Update_SLI_Irradiation_Log(ByVal I_SLI_Position_Number As String, ByVal I_SLI_Channel_Irradiation As String, ByVal I_SLI_Time_Start As String, ByVal I_SLI_Duration As String, ByVal I_SLI_Detector_Number As String, ByVal I_SLI_File_First As String, ByVal I_SLI_Measurements_Quantity As String, ByVal I_SLI_Irradiation_Log_Number As String, ByVal I_SLI_Irradiated_By As String, ByVal I_SLI_Measured_By As String, ByVal I_SLI_Date As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (I_SLI_Position_Number Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(I_SLI_Position_Number,String)
            End If
            If (I_SLI_Channel_Irradiation Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(I_SLI_Channel_Irradiation,String)
            End If
            If (I_SLI_Time_Start Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(I_SLI_Time_Start,String)
            End If
            If (I_SLI_Duration Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(I_SLI_Duration,String)
            End If
            If (I_SLI_Detector_Number Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(I_SLI_Detector_Number,String)
            End If
            If (I_SLI_File_First Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(I_SLI_File_First,String)
            End If
            If (I_SLI_Measurements_Quantity Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(I_SLI_Measurements_Quantity,String)
            End If
            If (I_SLI_Irradiation_Log_Number Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(I_SLI_Irradiation_Log_Number,String)
            End If
            If (I_SLI_Irradiated_By Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(I_SLI_Irradiated_By,String)
            End If
            If (I_SLI_Measured_By Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(I_SLI_Measured_By,String)
            End If
            If (I_SLI_Date Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(I_SLI_Date,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_Sample_Sample_Preparation_TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_Sample_Sample_Preparation"
            tableMapping.ColumnMappings.Add("A_Sample_ID", "A_Sample_ID")
            tableMapping.ColumnMappings.Add("A_Client_Sample_ID", "A_Client_Sample_ID")
            tableMapping.ColumnMappings.Add("P_Cleaning_Fact", "P_Cleaning_Fact")
            tableMapping.ColumnMappings.Add("P_Drying_Fact", "P_Drying_Fact")
            tableMapping.ColumnMappings.Add("P_Evaporation_Fact", "P_Evaporation_Fact")
            tableMapping.ColumnMappings.Add("P_Freeze_Drying_Fact", "P_Freeze_Drying_Fact")
            tableMapping.ColumnMappings.Add("P_Homogenizing_Fact", "P_Homogenizing_Fact")
            tableMapping.ColumnMappings.Add("P_Pelletization_Fact", "P_Pelletization_Fact")
            tableMapping.ColumnMappings.Add("P_Fragmentation_Fact", "P_Fragmentation_Fact")
            tableMapping.ColumnMappings.Add("P_Weighting_SLI", "P_Weighting_SLI")
            tableMapping.ColumnMappings.Add("P_Weighting_LLI", "P_Weighting_LLI")
            tableMapping.ColumnMappings.Add("P_Date_Sample_Preparation", "P_Date_Sample_Preparation")
            tableMapping.ColumnMappings.Add("P_Maked_By", "P_Maked_By")
            tableMapping.ColumnMappings.Add("F_Country_Code", "F_Country_Code")
            tableMapping.ColumnMappings.Add("F_Client_ID", "F_Client_ID")
            tableMapping.ColumnMappings.Add("F_Year", "F_Year")
            tableMapping.ColumnMappings.Add("F_Sample_Set_ID", "F_Sample_Set_ID")
            tableMapping.ColumnMappings.Add("F_Sample_Set_Index", "F_Sample_Set_Index")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [table_Sample] WHERE (([A_Sample_ID] = @Original_A_Sample_ID) AND ([F"& _ 
                "_Country_Code] = @Original_F_Country_Code) AND ([F_Client_ID] = @Original_F_Clie"& _ 
                "nt_ID) AND ([F_Year] = @Original_F_Year) AND ([F_Sample_Set_ID] = @Original_F_Sa"& _ 
                "mple_Set_ID) AND ([F_Sample_Set_Index] = @Original_F_Sample_Set_Index))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_A_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sample_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_F_Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Country_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_F_Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Client_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_F_Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Year", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_F_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_F_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_Index", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [table_Sample] ([A_Sample_ID], [A_Client_Sample_ID], [P_Cleaning_Fact"& _ 
                "], [P_Drying_Fact], [P_Evaporation_Fact], [P_Freeze_Drying_Fact], [P_Homogenizin"& _ 
                "g_Fact], [P_Pelletization_Fact], [P_Fragmentation_Fact], [P_Weighting_SLI], [P_W"& _ 
                "eighting_LLI], [P_Date_Sample_Preparation], [P_Maked_By], [F_Country_Code], [F_C"& _ 
                "lient_ID], [F_Year], [F_Sample_Set_ID], [F_Sample_Set_Index]) VALUES (@A_Sample_"& _ 
                "ID, @A_Client_Sample_ID, @P_Cleaning_Fact, @P_Drying_Fact, @P_Evaporation_Fact, "& _ 
                "@P_Freeze_Drying_Fact, @P_Homogenizing_Fact, @P_Pelletization_Fact, @P_Fragmenta"& _ 
                "tion_Fact, @P_Weighting_SLI, @P_Weighting_LLI, @P_Date_Sample_Preparation, @P_Ma"& _ 
                "ked_By, @F_Country_Code, @F_Client_ID, @F_Year, @F_Sample_Set_ID, @F_Sample_Set_"& _ 
                "Index)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sample_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Client_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Client_Sample_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Cleaning_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Cleaning_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Drying_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Drying_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Evaporation_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Evaporation_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Freeze_Drying_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Freeze_Drying_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Homogenizing_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Homogenizing_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Pelletization_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Pelletization_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Fragmentation_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Fragmentation_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Weighting_SLI", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Weighting_SLI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Weighting_LLI", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Weighting_LLI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Date_Sample_Preparation", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Date_Sample_Preparation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Maked_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Maked_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Client_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_Index", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE    table_Sample"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              P_Cleaning_Fact = @P_Cleaning_Fact, P_Dr"& _ 
                "ying_Fact = @P_Drying_Fact, P_Evaporation_Fact = @P_Evaporation_Fact, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "              P_Freeze_Drying_Fact = @P_Freeze_Drying_Fact, P_Homogenizing_Fact "& _ 
                "= @P_Homogenizing_Fact, P_Pelletization_Fact = @P_Pelletization_Fact, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "              P_Fragmentation_Fact = @P_Fragmentation_Fact, P_Weighting_SLI = @P"& _ 
                "_Weighting_SLI, P_Weighting_LLI = @P_Weighting_LLI, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      P_Da"& _ 
                "te_Sample_Preparation = @P_Date_Sample_Preparation, P_Maked_By = @P_Maked_By"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WH"& _ 
                "ERE     (A_Sample_ID = @A_Sample_ID) AND (F_Country_Code = @F_Country_Code) AND "& _ 
                "(F_Client_ID = @F_Client_ID) AND (F_Year = @F_Year) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "(F_Sample_Set_ID = @F_Sample_Set_ID) AND (F_Sample_Set_Index = @F_Sample_Set_Ind"& _ 
                "ex)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Cleaning_Fact", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Cleaning_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Drying_Fact", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Drying_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Evaporation_Fact", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Evaporation_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Freeze_Drying_Fact", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Freeze_Drying_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Homogenizing_Fact", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Homogenizing_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Pelletization_Fact", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Pelletization_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Fragmentation_Fact", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Fragmentation_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Weighting_SLI", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Weighting_SLI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Weighting_LLI", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Weighting_LLI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Date_Sample_Preparation", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Date_Sample_Preparation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_Maked_By", Global.System.Data.SqlDbType.NVarChar, 25, Global.System.Data.ParameterDirection.Input, 0, 0, "P_Maked_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sample_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Country_Code", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Country_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Client_ID", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Client_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Year", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Year", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_Index", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     A_Sample_ID, A_Client_Sample_ID, P_Cleaning_Fact, P_Drying_Fact, P_Eva"& _ 
                "poration_Fact, P_Freeze_Drying_Fact, P_Homogenizing_Fact, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "  P_Pelletization_Fact, P_Fragmentation_Fact, P_Weighting_SLI, P_Weighting_LLI, "& _ 
                "P_Date_Sample_Preparation, P_Maked_By, F_Country_Code, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      F"& _ 
                "_Client_ID, F_Year, F_Sample_Set_ID, F_Sample_Set_Index"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         table_Samp"& _ 
                "le"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (F_Country_Code = @F_Country_Code) AND (F_Client_ID = @F_Client_ID"& _ 
                ") AND (F_Year = @F_Year) AND (F_Sample_Set_ID = @F_Sample_Set_ID) AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "              (F_Sample_Set_Index = @F_Sample_Set_Index)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Country_Code", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Client_ID", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Client_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Year", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_Index", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill_Sample_Sample_Preparation(ByVal dataTable As NAA_DB_EXPDataSet.table_Sample_Sample_PreparationDataTable, ByVal F_Country_Code As String, ByVal F_Client_ID As String, ByVal F_Year As String, ByVal F_Sample_Set_ID As String, ByVal F_Sample_Set_Index As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (F_Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Country_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(F_Country_Code,String)
            End If
            If (F_Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Client_ID")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(F_Client_ID,String)
            End If
            If (F_Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Year")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(F_Year,String)
            End If
            If (F_Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_ID")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(F_Sample_Set_ID,String)
            End If
            If (F_Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_Index")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(F_Sample_Set_Index,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData_Sample_Sample_Preparation(ByVal F_Country_Code As String, ByVal F_Client_ID As String, ByVal F_Year As String, ByVal F_Sample_Set_ID As String, ByVal F_Sample_Set_Index As String) As NAA_DB_EXPDataSet.table_Sample_Sample_PreparationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (F_Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Country_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(F_Country_Code,String)
            End If
            If (F_Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Client_ID")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(F_Client_ID,String)
            End If
            If (F_Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Year")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(F_Year,String)
            End If
            If (F_Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_ID")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(F_Sample_Set_ID,String)
            End If
            If (F_Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_Index")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(F_Sample_Set_Index,String)
            End If
            Dim dataTable As NAA_DB_EXPDataSet.table_Sample_Sample_PreparationDataTable = New NAA_DB_EXPDataSet.table_Sample_Sample_PreparationDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_Sample_Sample_PreparationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_Sample_Sample_Preparation")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_SLI_Irradiation_LogTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_SLI_Irradiation_Log"
            tableMapping.ColumnMappings.Add("Country_Code", "Country_Code")
            tableMapping.ColumnMappings.Add("Client_ID", "Client_ID")
            tableMapping.ColumnMappings.Add("Year", "Year")
            tableMapping.ColumnMappings.Add("Sample_Set_ID", "Sample_Set_ID")
            tableMapping.ColumnMappings.Add("Sample_Set_Index", "Sample_Set_Index")
            tableMapping.ColumnMappings.Add("Sample_ID", "Sample_ID")
            tableMapping.ColumnMappings.Add("Date_Start", "Date_Start")
            tableMapping.ColumnMappings.Add("Time_Start", "Time_Start")
            tableMapping.ColumnMappings.Add("Channel", "Channel")
            tableMapping.ColumnMappings.Add("Duration", "Duration")
            tableMapping.ColumnMappings.Add("Detector_2", "Detector_2")
            tableMapping.ColumnMappings.Add("Detector_3", "Detector_3")
            tableMapping.ColumnMappings.Add("Detector_4", "Detector_4")
            tableMapping.ColumnMappings.Add("File_Last", "File_Last")
            tableMapping.ColumnMappings.Add("Irradiated_By", "Irradiated_By")
            tableMapping.ColumnMappings.Add("Measured_By", "Measured_By")
            tableMapping.ColumnMappings.Add("Paper_Log_Number", "Paper_Log_Number")
            tableMapping.ColumnMappings.Add("Position_Number", "Position_Number")
            tableMapping.ColumnMappings.Add("Detector_1", "Detector_1")
            tableMapping.ColumnMappings.Add("File_First", "File_First")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [table_SLI_Irradiation_Log] WHERE (([Country_Code] = @Original_Countr"& _ 
                "y_Code) AND ([Client_ID] = @Original_Client_ID) AND ([Year] = @Original_Year) AN"& _ 
                "D ([Sample_Set_ID] = @Original_Sample_Set_ID) AND ([Sample_Set_Index] = @Origina"& _ 
                "l_Sample_Set_Index) AND ([Sample_ID] = @Original_Sample_ID) AND ([Date_Start] = "& _ 
                "@Original_Date_Start))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Year", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Index", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Date_Start", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Start", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [table_SLI_Irradiation_Log] ([Country_Code], [Client_ID], [Year], [Sa"& _ 
                "mple_Set_ID], [Sample_Set_Index], [Sample_ID], [Date_Start], [Time_Start], [Chan"& _ 
                "nel], [Duration], [Detector_2], [Detector_3], [Detector_4], [File_First], [File_"& _ 
                "Last], [Irradiated_By], [Measured_By], [Paper_Log_Number], [Position_Number], [D"& _ 
                "etector_1]) VALUES (@Country_Code, @Client_ID, @Year, @Sample_Set_ID, @Sample_Se"& _ 
                "t_Index, @Sample_ID, @Date_Start, @Time_Start, @Channel, @Duration, @Detector_2,"& _ 
                " @Detector_3, @Detector_4, @File_First, @File_Last, @Irradiated_By, @Measured_By"& _ 
                ", @Paper_Log_Number, @Position_Number, @Detector_1);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Country_Code, Clien"& _ 
                "t_ID, Year, Sample_Set_ID, Sample_Set_Index, Sample_ID, Date_Start, Time_Start, "& _ 
                "Channel, Duration, Detector_2, Detector_3, Detector_4, File_First, File_Last, Ir"& _ 
                "radiated_By, Measured_By, Paper_Log_Number, Position_Number, Detector_1 FROM tab"& _ 
                "le_SLI_Irradiation_Log WHERE (Client_ID = @Client_ID) AND (Country_Code = @Count"& _ 
                "ry_Code) AND (Date_Start = @Date_Start) AND (Sample_ID = @Sample_ID) AND (Sample"& _ 
                "_Set_ID = @Sample_Set_ID) AND (Sample_Set_Index = @Sample_Set_Index) AND (Year ="& _ 
                " @Year) ORDER BY Time_Start, Detector_4, Detector_3, Detector_2, Detector_1"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Index", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Start", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Time_Start", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Time_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Channel", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Channel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Duration", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Duration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_3", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_4", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@File_First", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "File_First", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@File_Last", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "File_Last", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Irradiated_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Irradiated_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Measured_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Measured_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Paper_Log_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Paper_Log_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Position_Number", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Position_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [table_SLI_Irradiation_Log] SET [Country_Code] = @Country_Code, [Client_ID"& _ 
                "] = @Client_ID, [Year] = @Year, [Sample_Set_ID] = @Sample_Set_ID, [Sample_Set_In"& _ 
                "dex] = @Sample_Set_Index, [Sample_ID] = @Sample_ID, [Date_Start] = @Date_Start, "& _ 
                "[Time_Start] = @Time_Start, [Channel] = @Channel, [Duration] = @Duration, [Detec"& _ 
                "tor_2] = @Detector_2, [Detector_3] = @Detector_3, [Detector_4] = @Detector_4, [F"& _ 
                "ile_First] = @File_First, [File_Last] = @File_Last, [Irradiated_By] = @Irradiate"& _ 
                "d_By, [Measured_By] = @Measured_By, [Paper_Log_Number] = @Paper_Log_Number, [Pos"& _ 
                "ition_Number] = @Position_Number, [Detector_1] = @Detector_1 WHERE (([Country_Co"& _ 
                "de] = @Original_Country_Code) AND ([Client_ID] = @Original_Client_ID) AND ([Year"& _ 
                "] = @Original_Year) AND ([Sample_Set_ID] = @Original_Sample_Set_ID) AND ([Sample"& _ 
                "_Set_Index] = @Original_Sample_Set_Index) AND ([Sample_ID] = @Original_Sample_ID"& _ 
                ") AND ([Date_Start] = @Original_Date_Start));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Country_Code, Client_ID, Y"& _ 
                "ear, Sample_Set_ID, Sample_Set_Index, Sample_ID, Date_Start, Time_Start, Channel"& _ 
                ", Duration, Detector_2, Detector_3, Detector_4, File_First, File_Last, Irradiate"& _ 
                "d_By, Measured_By, Paper_Log_Number, Position_Number, Detector_1 FROM table_SLI_"& _ 
                "Irradiation_Log WHERE (Client_ID = @Client_ID) AND (Country_Code = @Country_Code"& _ 
                ") AND (Date_Start = @Date_Start) AND (Sample_ID = @Sample_ID) AND (Sample_Set_ID"& _ 
                " = @Sample_Set_ID) AND (Sample_Set_Index = @Sample_Set_Index) AND (Year = @Year)"& _ 
                " ORDER BY Time_Start, Detector_4, Detector_3, Detector_2, Detector_1"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Index", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Start", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Time_Start", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Time_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Channel", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Channel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Duration", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Duration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_3", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_4", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@File_First", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "File_First", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@File_Last", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "File_Last", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Irradiated_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Irradiated_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Measured_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Measured_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Paper_Log_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Paper_Log_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Position_Number", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Position_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Year", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Index", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Date_Start", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Start", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Country_Code, Client_ID, Year, Sample_Set_ID, Sample_Set_Index, Sample"& _ 
                "_ID, Date_Start, Time_Start, Channel, Duration, Detector_2, Detector_3, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                Detector_4, File_First, File_Last, Irradiated_By, Measured_By, P"& _ 
                "aper_Log_Number, Position_Number, Detector_1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         table_SLI_Irradiation"& _ 
                "_Log"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Date_Start = @Date_Start)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Time_Start, Detector_4, Det"& _ 
                "ector_3, Detector_2, Detector_1"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Start", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill_SLI_Irradiation_Log(ByVal dataTable As NAA_DB_EXPDataSet.table_SLI_Irradiation_LogDataTable, ByVal Date_Start As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Date_Start Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Date_Start")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Date_Start,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData_SLI_Irradiation_Log(ByVal Date_Start As String) As NAA_DB_EXPDataSet.table_SLI_Irradiation_LogDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Date_Start Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Date_Start")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Date_Start,String)
            End If
            Dim dataTable As NAA_DB_EXPDataSet.table_SLI_Irradiation_LogDataTable = New NAA_DB_EXPDataSet.table_SLI_Irradiation_LogDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_SLI_Irradiation_LogDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_SLI_Irradiation_Log")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_LLI_Irradiation_LogTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_LLI_Irradiation_Log"
            tableMapping.ColumnMappings.Add("Country_Code", "Country_Code")
            tableMapping.ColumnMappings.Add("Client_ID", "Client_ID")
            tableMapping.ColumnMappings.Add("Year", "Year")
            tableMapping.ColumnMappings.Add("Sample_Set_ID", "Sample_Set_ID")
            tableMapping.ColumnMappings.Add("Sample_Set_Index", "Sample_Set_Index")
            tableMapping.ColumnMappings.Add("Sample_ID", "Sample_ID")
            tableMapping.ColumnMappings.Add("Date_Start", "Date_Start")
            tableMapping.ColumnMappings.Add("Time_Start", "Time_Start")
            tableMapping.ColumnMappings.Add("Channel", "Channel")
            tableMapping.ColumnMappings.Add("Date_Finish", "Date_Finish")
            tableMapping.ColumnMappings.Add("Time_Finish", "Time_Finish")
            tableMapping.ColumnMappings.Add("Power_Relief_Date_Start_1", "Power_Relief_Date_Start_1")
            tableMapping.ColumnMappings.Add("Power_Relief_Time_Start_1", "Power_Relief_Time_Start_1")
            tableMapping.ColumnMappings.Add("Power_Relief_Date_Finish_1", "Power_Relief_Date_Finish_1")
            tableMapping.ColumnMappings.Add("Power_Relief_Time_Finish_1", "Power_Relief_Time_Finish_1")
            tableMapping.ColumnMappings.Add("Power_Relief_Date_Start_2", "Power_Relief_Date_Start_2")
            tableMapping.ColumnMappings.Add("Power_Relief_Time_Start_2", "Power_Relief_Time_Start_2")
            tableMapping.ColumnMappings.Add("Power_Relief_Date_Finish_2", "Power_Relief_Date_Finish_2")
            tableMapping.ColumnMappings.Add("Power_Relief_Time_Finish_2", "Power_Relief_Time_Finish_2")
            tableMapping.ColumnMappings.Add("Container_Number", "Container_Number")
            tableMapping.ColumnMappings.Add("Position_Number", "Position_Number")
            tableMapping.ColumnMappings.Add("Irradiated_By", "Irradiated_By")
            tableMapping.ColumnMappings.Add("Date_Rehadle", "Date_Rehadle")
            tableMapping.ColumnMappings.Add("Rehandled_By", "Rehandled_By")
            tableMapping.ColumnMappings.Add("Date_Measurement_LLI_1", "Date_Measurement_LLI_1")
            tableMapping.ColumnMappings.Add("Detector_2_Measurement_LLI_1", "Detector_2_Measurement_LLI_1")
            tableMapping.ColumnMappings.Add("Detector_3_Measurement_LLI_1", "Detector_3_Measurement_LLI_1")
            tableMapping.ColumnMappings.Add("Detector_4_Measurement_LLI_1", "Detector_4_Measurement_LLI_1")
            tableMapping.ColumnMappings.Add("Paper_Log_LLI_1_Number", "Paper_Log_LLI_1_Number")
            tableMapping.ColumnMappings.Add("Measured_LLI_1_By", "Measured_LLI_1_By")
            tableMapping.ColumnMappings.Add("Date_Measurement_LLI_2", "Date_Measurement_LLI_2")
            tableMapping.ColumnMappings.Add("Detector_2_Measurement_LLI_2", "Detector_2_Measurement_LLI_2")
            tableMapping.ColumnMappings.Add("Detector_3_Measurement_LLI_2", "Detector_3_Measurement_LLI_2")
            tableMapping.ColumnMappings.Add("Detector_4_Measurement_LLI_2", "Detector_4_Measurement_LLI_2")
            tableMapping.ColumnMappings.Add("Paper_Log_LLI_2_Number", "Paper_Log_LLI_2_Number")
            tableMapping.ColumnMappings.Add("Measured_LLI_2_By", "Measured_LLI_2_By")
            tableMapping.ColumnMappings.Add("Detector_1_Measurement_LLI_1", "Detector_1_Measurement_LLI_1")
            tableMapping.ColumnMappings.Add("Detector_1_Measurement_LLI_2", "Detector_1_Measurement_LLI_2")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [table_LLI_Irradiation_Log] WHERE (([Country_Code] = @Original_Countr"& _ 
                "y_Code) AND ([Client_ID] = @Original_Client_ID) AND ([Year] = @Original_Year) AN"& _ 
                "D ([Sample_Set_ID] = @Original_Sample_Set_ID) AND ([Sample_Set_Index] = @Origina"& _ 
                "l_Sample_Set_Index) AND ([Sample_ID] = @Original_Sample_ID) AND ([Date_Start] = "& _ 
                "@Original_Date_Start) AND ((@IsNull_Time_Start = 1 AND [Time_Start] IS NULL) OR "& _ 
                "([Time_Start] = @Original_Time_Start)) AND ((@IsNull_Channel = 1 AND [Channel] I"& _ 
                "S NULL) OR ([Channel] = @Original_Channel)) AND ((@IsNull_Date_Finish = 1 AND [D"& _ 
                "ate_Finish] IS NULL) OR ([Date_Finish] = @Original_Date_Finish)) AND ((@IsNull_T"& _ 
                "ime_Finish = 1 AND [Time_Finish] IS NULL) OR ([Time_Finish] = @Original_Time_Fin"& _ 
                "ish)) AND ((@IsNull_Power_Relief_Date_Start_1 = 1 AND [Power_Relief_Date_Start_1"& _ 
                "] IS NULL) OR ([Power_Relief_Date_Start_1] = @Original_Power_Relief_Date_Start_1"& _ 
                ")) AND ((@IsNull_Power_Relief_Time_Start_1 = 1 AND [Power_Relief_Time_Start_1] I"& _ 
                "S NULL) OR ([Power_Relief_Time_Start_1] = @Original_Power_Relief_Time_Start_1)) "& _ 
                "AND ((@IsNull_Power_Relief_Date_Finish_1 = 1 AND [Power_Relief_Date_Finish_1] IS"& _ 
                " NULL) OR ([Power_Relief_Date_Finish_1] = @Original_Power_Relief_Date_Finish_1))"& _ 
                " AND ((@IsNull_Power_Relief_Time_Finish_1 = 1 AND [Power_Relief_Time_Finish_1] I"& _ 
                "S NULL) OR ([Power_Relief_Time_Finish_1] = @Original_Power_Relief_Time_Finish_1)"& _ 
                ") AND ((@IsNull_Power_Relief_Date_Start_2 = 1 AND [Power_Relief_Date_Start_2] IS"& _ 
                " NULL) OR ([Power_Relief_Date_Start_2] = @Original_Power_Relief_Date_Start_2)) A"& _ 
                "ND ((@IsNull_Power_Relief_Time_Start_2 = 1 AND [Power_Relief_Time_Start_2] IS NU"& _ 
                "LL) OR ([Power_Relief_Time_Start_2] = @Original_Power_Relief_Time_Start_2)) AND "& _ 
                "((@IsNull_Power_Relief_Date_Finish_2 = 1 AND [Power_Relief_Date_Finish_2] IS NUL"& _ 
                "L) OR ([Power_Relief_Date_Finish_2] = @Original_Power_Relief_Date_Finish_2)) AND"& _ 
                " ((@IsNull_Power_Relief_Time_Finish_2 = 1 AND [Power_Relief_Time_Finish_2] IS NU"& _ 
                "LL) OR ([Power_Relief_Time_Finish_2] = @Original_Power_Relief_Time_Finish_2)) AN"& _ 
                "D ((@IsNull_Container_Number = 1 AND [Container_Number] IS NULL) OR ([Container_"& _ 
                "Number] = @Original_Container_Number)) AND ((@IsNull_Position_Number = 1 AND [Po"& _ 
                "sition_Number] IS NULL) OR ([Position_Number] = @Original_Position_Number)) AND "& _ 
                "((@IsNull_Irradiated_By = 1 AND [Irradiated_By] IS NULL) OR ([Irradiated_By] = @"& _ 
                "Original_Irradiated_By)) AND ((@IsNull_Date_Rehadle = 1 AND [Date_Rehadle] IS NU"& _ 
                "LL) OR ([Date_Rehadle] = @Original_Date_Rehadle)) AND ((@IsNull_Rehandled_By = 1"& _ 
                " AND [Rehandled_By] IS NULL) OR ([Rehandled_By] = @Original_Rehandled_By)) AND ("& _ 
                "(@IsNull_Date_Measurement_LLI_1 = 1 AND [Date_Measurement_LLI_1] IS NULL) OR ([D"& _ 
                "ate_Measurement_LLI_1] = @Original_Date_Measurement_LLI_1)) AND ((@IsNull_Detect"& _ 
                "or_2_Measurement_LLI_1 = 1 AND [Detector_2_Measurement_LLI_1] IS NULL) OR ([Dete"& _ 
                "ctor_2_Measurement_LLI_1] = @Original_Detector_2_Measurement_LLI_1)) AND ((@IsNu"& _ 
                "ll_Detector_3_Measurement_LLI_1 = 1 AND [Detector_3_Measurement_LLI_1] IS NULL) "& _ 
                "OR ([Detector_3_Measurement_LLI_1] = @Original_Detector_3_Measurement_LLI_1)) AN"& _ 
                "D ((@IsNull_Detector_4_Measurement_LLI_1 = 1 AND [Detector_4_Measurement_LLI_1] "& _ 
                "IS NULL) OR ([Detector_4_Measurement_LLI_1] = @Original_Detector_4_Measurement_L"& _ 
                "LI_1)) AND ((@IsNull_Paper_Log_LLI_1_Number = 1 AND [Paper_Log_LLI_1_Number] IS "& _ 
                "NULL) OR ([Paper_Log_LLI_1_Number] = @Original_Paper_Log_LLI_1_Number)) AND ((@I"& _ 
                "sNull_Measured_LLI_1_By = 1 AND [Measured_LLI_1_By] IS NULL) OR ([Measured_LLI_1"& _ 
                "_By] = @Original_Measured_LLI_1_By)) AND ((@IsNull_Date_Measurement_LLI_2 = 1 AN"& _ 
                "D [Date_Measurement_LLI_2] IS NULL) OR ([Date_Measurement_LLI_2] = @Original_Dat"& _ 
                "e_Measurement_LLI_2)) AND ((@IsNull_Detector_2_Measurement_LLI_2 = 1 AND [Detect"& _ 
                "or_2_Measurement_LLI_2] IS NULL) OR ([Detector_2_Measurement_LLI_2] = @Original_"& _ 
                "Detector_2_Measurement_LLI_2)) AND ((@IsNull_Detector_3_Measurement_LLI_2 = 1 AN"& _ 
                "D [Detector_3_Measurement_LLI_2] IS NULL) OR ([Detector_3_Measurement_LLI_2] = @"& _ 
                "Original_Detector_3_Measurement_LLI_2)) AND ((@IsNull_Detector_4_Measurement_LLI"& _ 
                "_2 = 1 AND [Detector_4_Measurement_LLI_2] IS NULL) OR ([Detector_4_Measurement_L"& _ 
                "LI_2] = @Original_Detector_4_Measurement_LLI_2)) AND ((@IsNull_Paper_Log_LLI_2_N"& _ 
                "umber = 1 AND [Paper_Log_LLI_2_Number] IS NULL) OR ([Paper_Log_LLI_2_Number] = @"& _ 
                "Original_Paper_Log_LLI_2_Number)) AND ((@IsNull_Measured_LLI_2_By = 1 AND [Measu"& _ 
                "red_LLI_2_By] IS NULL) OR ([Measured_LLI_2_By] = @Original_Measured_LLI_2_By)) A"& _ 
                "ND ((@IsNull_Detector_1_Measurement_LLI_1 = 1 AND [Detector_1_Measurement_LLI_1]"& _ 
                " IS NULL) OR ([Detector_1_Measurement_LLI_1] = @Original_Detector_1_Measurement_"& _ 
                "LLI_1)) AND ((@IsNull_Detector_1_Measurement_LLI_2 = 1 AND [Detector_1_Measureme"& _ 
                "nt_LLI_2] IS NULL) OR ([Detector_1_Measurement_LLI_2] = @Original_Detector_1_Mea"& _ 
                "surement_LLI_2)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Year", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Index", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Date_Start", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Start", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Time_Start", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Time_Start", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Time_Start", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Time_Start", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Channel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Channel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Channel", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Channel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Date_Finish", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Finish", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Date_Finish", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Finish", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Time_Finish", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Time_Finish", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Time_Finish", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Time_Finish", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Date_Start_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Start_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Date_Start_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Start_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Time_Start_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Start_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Time_Start_1", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Start_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Date_Finish_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Finish_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Date_Finish_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Finish_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Time_Finish_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Finish_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Time_Finish_1", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Finish_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Date_Start_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Start_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Date_Start_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Start_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Time_Start_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Start_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Time_Start_2", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Start_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Date_Finish_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Finish_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Date_Finish_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Finish_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Time_Finish_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Finish_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Time_Finish_2", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Finish_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Container_Number", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Container_Number", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Container_Number", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Container_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Position_Number", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Position_Number", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Position_Number", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Position_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Irradiated_By", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Irradiated_By", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Irradiated_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Irradiated_By", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Date_Rehadle", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Rehadle", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Date_Rehadle", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Rehadle", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Rehandled_By", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rehandled_By", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Rehandled_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rehandled_By", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Date_Measurement_LLI_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Date_Measurement_LLI_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_2_Measurement_LLI_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_2_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_2_Measurement_LLI_1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_2_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_3_Measurement_LLI_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_3_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_3_Measurement_LLI_1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_3_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_4_Measurement_LLI_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_4_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_4_Measurement_LLI_1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_4_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Paper_Log_LLI_1_Number", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Paper_Log_LLI_1_Number", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Paper_Log_LLI_1_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Paper_Log_LLI_1_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Measured_LLI_1_By", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Measured_LLI_1_By", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Measured_LLI_1_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Measured_LLI_1_By", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Date_Measurement_LLI_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Date_Measurement_LLI_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_2_Measurement_LLI_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_2_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_2_Measurement_LLI_2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_2_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_3_Measurement_LLI_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_3_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_3_Measurement_LLI_2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_3_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_4_Measurement_LLI_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_4_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_4_Measurement_LLI_2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_4_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Paper_Log_LLI_2_Number", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Paper_Log_LLI_2_Number", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Paper_Log_LLI_2_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Paper_Log_LLI_2_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Measured_LLI_2_By", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Measured_LLI_2_By", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Measured_LLI_2_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Measured_LLI_2_By", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_1_Measurement_LLI_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_1_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_1_Measurement_LLI_1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_1_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_1_Measurement_LLI_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_1_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_1_Measurement_LLI_2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_1_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [table_LLI_Irradiation_Log] ([Country_Code], [Client_ID], [Year], [Sa"& _ 
                "mple_Set_ID], [Sample_Set_Index], [Sample_ID], [Date_Start], [Time_Start], [Chan"& _ 
                "nel], [Date_Finish], [Time_Finish], [Power_Relief_Date_Start_1], [Power_Relief_T"& _ 
                "ime_Start_1], [Power_Relief_Date_Finish_1], [Power_Relief_Time_Finish_1], [Power"& _ 
                "_Relief_Date_Start_2], [Power_Relief_Time_Start_2], [Power_Relief_Date_Finish_2]"& _ 
                ", [Power_Relief_Time_Finish_2], [Container_Number], [Position_Number], [Irradiat"& _ 
                "ed_By], [Date_Rehadle], [Rehandled_By], [Date_Measurement_LLI_1], [Detector_2_Me"& _ 
                "asurement_LLI_1], [Detector_3_Measurement_LLI_1], [Detector_4_Measurement_LLI_1]"& _ 
                ", [Paper_Log_LLI_1_Number], [Measured_LLI_1_By], [Date_Measurement_LLI_2], [Dete"& _ 
                "ctor_2_Measurement_LLI_2], [Detector_3_Measurement_LLI_2], [Detector_4_Measureme"& _ 
                "nt_LLI_2], [Paper_Log_LLI_2_Number], [Measured_LLI_2_By], [Detector_1_Measuremen"& _ 
                "t_LLI_1], [Detector_1_Measurement_LLI_2]) VALUES (@Country_Code, @Client_ID, @Ye"& _ 
                "ar, @Sample_Set_ID, @Sample_Set_Index, @Sample_ID, @Date_Start, @Time_Start, @Ch"& _ 
                "annel, @Date_Finish, @Time_Finish, @Power_Relief_Date_Start_1, @Power_Relief_Tim"& _ 
                "e_Start_1, @Power_Relief_Date_Finish_1, @Power_Relief_Time_Finish_1, @Power_Reli"& _ 
                "ef_Date_Start_2, @Power_Relief_Time_Start_2, @Power_Relief_Date_Finish_2, @Power"& _ 
                "_Relief_Time_Finish_2, @Container_Number, @Position_Number, @Irradiated_By, @Dat"& _ 
                "e_Rehadle, @Rehandled_By, @Date_Measurement_LLI_1, @Detector_2_Measurement_LLI_1"& _ 
                ", @Detector_3_Measurement_LLI_1, @Detector_4_Measurement_LLI_1, @Paper_Log_LLI_1"& _ 
                "_Number, @Measured_LLI_1_By, @Date_Measurement_LLI_2, @Detector_2_Measurement_LL"& _ 
                "I_2, @Detector_3_Measurement_LLI_2, @Detector_4_Measurement_LLI_2, @Paper_Log_LL"& _ 
                "I_2_Number, @Measured_LLI_2_By, @Detector_1_Measurement_LLI_1, @Detector_1_Measu"& _ 
                "rement_LLI_2);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Country_Code, Client_ID, Year, Sample_Set_ID, Sample_Set_"& _ 
                "Index, Sample_ID, Date_Start, Time_Start, Channel, Date_Finish, Time_Finish, Pow"& _ 
                "er_Relief_Date_Start_1, Power_Relief_Time_Start_1, Power_Relief_Date_Finish_1, P"& _ 
                "ower_Relief_Time_Finish_1, Power_Relief_Date_Start_2, Power_Relief_Time_Start_2,"& _ 
                " Power_Relief_Date_Finish_2, Power_Relief_Time_Finish_2, Container_Number, Posit"& _ 
                "ion_Number, Irradiated_By, Date_Rehadle, Rehandled_By, Date_Measurement_LLI_1, D"& _ 
                "etector_2_Measurement_LLI_1, Detector_3_Measurement_LLI_1, Detector_4_Measuremen"& _ 
                "t_LLI_1, Paper_Log_LLI_1_Number, Measured_LLI_1_By, Date_Measurement_LLI_2, Dete"& _ 
                "ctor_2_Measurement_LLI_2, Detector_3_Measurement_LLI_2, Detector_4_Measurement_L"& _ 
                "LI_2, Paper_Log_LLI_2_Number, Measured_LLI_2_By, Detector_1_Measurement_LLI_1, D"& _ 
                "etector_1_Measurement_LLI_2 FROM table_LLI_Irradiation_Log WHERE (Client_ID = @C"& _ 
                "lient_ID) AND (Country_Code = @Country_Code) AND (Date_Start = @Date_Start) AND "& _ 
                "(Sample_ID = @Sample_ID) AND (Sample_Set_ID = @Sample_Set_ID) AND (Sample_Set_In"& _ 
                "dex = @Sample_Set_Index) AND (Year = @Year) ORDER BY Container_Number, Position_"& _ 
                "Number"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Index", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Start", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Time_Start", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Time_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Channel", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Channel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Finish", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Finish", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Time_Finish", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Time_Finish", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Date_Start_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Start_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Time_Start_1", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Start_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Date_Finish_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Finish_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Time_Finish_1", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Finish_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Date_Start_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Start_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Time_Start_2", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Start_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Date_Finish_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Finish_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Time_Finish_2", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Finish_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Container_Number", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Container_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Position_Number", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Position_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Irradiated_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Irradiated_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Rehadle", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Rehadle", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rehandled_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rehandled_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Measurement_LLI_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Measurement_LLI_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_2_Measurement_LLI_1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_2_Measurement_LLI_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_3_Measurement_LLI_1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_3_Measurement_LLI_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_4_Measurement_LLI_1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_4_Measurement_LLI_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Paper_Log_LLI_1_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Paper_Log_LLI_1_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Measured_LLI_1_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Measured_LLI_1_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Measurement_LLI_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Measurement_LLI_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_2_Measurement_LLI_2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_2_Measurement_LLI_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_3_Measurement_LLI_2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_3_Measurement_LLI_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_4_Measurement_LLI_2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_4_Measurement_LLI_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Paper_Log_LLI_2_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Paper_Log_LLI_2_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Measured_LLI_2_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Measured_LLI_2_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_1_Measurement_LLI_1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_1_Measurement_LLI_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_1_Measurement_LLI_2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_1_Measurement_LLI_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [table_LLI_Irradiation_Log] SET [Country_Code] = @Country_Code, [Client_ID"& _ 
                "] = @Client_ID, [Year] = @Year, [Sample_Set_ID] = @Sample_Set_ID, [Sample_Set_In"& _ 
                "dex] = @Sample_Set_Index, [Sample_ID] = @Sample_ID, [Date_Start] = @Date_Start, "& _ 
                "[Time_Start] = @Time_Start, [Channel] = @Channel, [Date_Finish] = @Date_Finish, "& _ 
                "[Time_Finish] = @Time_Finish, [Power_Relief_Date_Start_1] = @Power_Relief_Date_S"& _ 
                "tart_1, [Power_Relief_Time_Start_1] = @Power_Relief_Time_Start_1, [Power_Relief_"& _ 
                "Date_Finish_1] = @Power_Relief_Date_Finish_1, [Power_Relief_Time_Finish_1] = @Po"& _ 
                "wer_Relief_Time_Finish_1, [Power_Relief_Date_Start_2] = @Power_Relief_Date_Start"& _ 
                "_2, [Power_Relief_Time_Start_2] = @Power_Relief_Time_Start_2, [Power_Relief_Date"& _ 
                "_Finish_2] = @Power_Relief_Date_Finish_2, [Power_Relief_Time_Finish_2] = @Power_"& _ 
                "Relief_Time_Finish_2, [Container_Number] = @Container_Number, [Position_Number] "& _ 
                "= @Position_Number, [Irradiated_By] = @Irradiated_By, [Date_Rehadle] = @Date_Reh"& _ 
                "adle, [Rehandled_By] = @Rehandled_By, [Date_Measurement_LLI_1] = @Date_Measureme"& _ 
                "nt_LLI_1, [Detector_2_Measurement_LLI_1] = @Detector_2_Measurement_LLI_1, [Detec"& _ 
                "tor_3_Measurement_LLI_1] = @Detector_3_Measurement_LLI_1, [Detector_4_Measuremen"& _ 
                "t_LLI_1] = @Detector_4_Measurement_LLI_1, [Paper_Log_LLI_1_Number] = @Paper_Log_"& _ 
                "LLI_1_Number, [Measured_LLI_1_By] = @Measured_LLI_1_By, [Date_Measurement_LLI_2]"& _ 
                " = @Date_Measurement_LLI_2, [Detector_2_Measurement_LLI_2] = @Detector_2_Measure"& _ 
                "ment_LLI_2, [Detector_3_Measurement_LLI_2] = @Detector_3_Measurement_LLI_2, [Det"& _ 
                "ector_4_Measurement_LLI_2] = @Detector_4_Measurement_LLI_2, [Paper_Log_LLI_2_Num"& _ 
                "ber] = @Paper_Log_LLI_2_Number, [Measured_LLI_2_By] = @Measured_LLI_2_By, [Detec"& _ 
                "tor_1_Measurement_LLI_1] = @Detector_1_Measurement_LLI_1, [Detector_1_Measuremen"& _ 
                "t_LLI_2] = @Detector_1_Measurement_LLI_2 WHERE (([Country_Code] = @Original_Coun"& _ 
                "try_Code) AND ([Client_ID] = @Original_Client_ID) AND ([Year] = @Original_Year) "& _ 
                "AND ([Sample_Set_ID] = @Original_Sample_Set_ID) AND ([Sample_Set_Index] = @Origi"& _ 
                "nal_Sample_Set_Index) AND ([Sample_ID] = @Original_Sample_ID) AND ([Date_Start] "& _ 
                "= @Original_Date_Start) AND ((@IsNull_Time_Start = 1 AND [Time_Start] IS NULL) O"& _ 
                "R ([Time_Start] = @Original_Time_Start)) AND ((@IsNull_Channel = 1 AND [Channel]"& _ 
                " IS NULL) OR ([Channel] = @Original_Channel)) AND ((@IsNull_Date_Finish = 1 AND "& _ 
                "[Date_Finish] IS NULL) OR ([Date_Finish] = @Original_Date_Finish)) AND ((@IsNull"& _ 
                "_Time_Finish = 1 AND [Time_Finish] IS NULL) OR ([Time_Finish] = @Original_Time_F"& _ 
                "inish)) AND ((@IsNull_Power_Relief_Date_Start_1 = 1 AND [Power_Relief_Date_Start"& _ 
                "_1] IS NULL) OR ([Power_Relief_Date_Start_1] = @Original_Power_Relief_Date_Start"& _ 
                "_1)) AND ((@IsNull_Power_Relief_Time_Start_1 = 1 AND [Power_Relief_Time_Start_1]"& _ 
                " IS NULL) OR ([Power_Relief_Time_Start_1] = @Original_Power_Relief_Time_Start_1)"& _ 
                ") AND ((@IsNull_Power_Relief_Date_Finish_1 = 1 AND [Power_Relief_Date_Finish_1] "& _ 
                "IS NULL) OR ([Power_Relief_Date_Finish_1] = @Original_Power_Relief_Date_Finish_1"& _ 
                ")) AND ((@IsNull_Power_Relief_Time_Finish_1 = 1 AND [Power_Relief_Time_Finish_1]"& _ 
                " IS NULL) OR ([Power_Relief_Time_Finish_1] = @Original_Power_Relief_Time_Finish_"& _ 
                "1)) AND ((@IsNull_Power_Relief_Date_Start_2 = 1 AND [Power_Relief_Date_Start_2] "& _ 
                "IS NULL) OR ([Power_Relief_Date_Start_2] = @Original_Power_Relief_Date_Start_2))"& _ 
                " AND ((@IsNull_Power_Relief_Time_Start_2 = 1 AND [Power_Relief_Time_Start_2] IS "& _ 
                "NULL) OR ([Power_Relief_Time_Start_2] = @Original_Power_Relief_Time_Start_2)) AN"& _ 
                "D ((@IsNull_Power_Relief_Date_Finish_2 = 1 AND [Power_Relief_Date_Finish_2] IS N"& _ 
                "ULL) OR ([Power_Relief_Date_Finish_2] = @Original_Power_Relief_Date_Finish_2)) A"& _ 
                "ND ((@IsNull_Power_Relief_Time_Finish_2 = 1 AND [Power_Relief_Time_Finish_2] IS "& _ 
                "NULL) OR ([Power_Relief_Time_Finish_2] = @Original_Power_Relief_Time_Finish_2)) "& _ 
                "AND ((@IsNull_Container_Number = 1 AND [Container_Number] IS NULL) OR ([Containe"& _ 
                "r_Number] = @Original_Container_Number)) AND ((@IsNull_Position_Number = 1 AND ["& _ 
                "Position_Number] IS NULL) OR ([Position_Number] = @Original_Position_Number)) AN"& _ 
                "D ((@IsNull_Irradiated_By = 1 AND [Irradiated_By] IS NULL) OR ([Irradiated_By] ="& _ 
                " @Original_Irradiated_By)) AND ((@IsNull_Date_Rehadle = 1 AND [Date_Rehadle] IS "& _ 
                "NULL) OR ([Date_Rehadle] = @Original_Date_Rehadle)) AND ((@IsNull_Rehandled_By ="& _ 
                " 1 AND [Rehandled_By] IS NULL) OR ([Rehandled_By] = @Original_Rehandled_By)) AND"& _ 
                " ((@IsNull_Date_Measurement_LLI_1 = 1 AND [Date_Measurement_LLI_1] IS NULL) OR ("& _ 
                "[Date_Measurement_LLI_1] = @Original_Date_Measurement_LLI_1)) AND ((@IsNull_Dete"& _ 
                "ctor_2_Measurement_LLI_1 = 1 AND [Detector_2_Measurement_LLI_1] IS NULL) OR ([De"& _ 
                "tector_2_Measurement_LLI_1] = @Original_Detector_2_Measurement_LLI_1)) AND ((@Is"& _ 
                "Null_Detector_3_Measurement_LLI_1 = 1 AND [Detector_3_Measurement_LLI_1] IS NULL"& _ 
                ") OR ([Detector_3_Measurement_LLI_1] = @Original_Detector_3_Measurement_LLI_1)) "& _ 
                "AND ((@IsNull_Detector_4_Measurement_LLI_1 = 1 AND [Detector_4_Measurement_LLI_1"& _ 
                "] IS NULL) OR ([Detector_4_Measurement_LLI_1] = @Original_Detector_4_Measurement"& _ 
                "_LLI_1)) AND ((@IsNull_Paper_Log_LLI_1_Number = 1 AND [Paper_Log_LLI_1_Number] I"& _ 
                "S NULL) OR ([Paper_Log_LLI_1_Number] = @Original_Paper_Log_LLI_1_Number)) AND (("& _ 
                "@IsNull_Measured_LLI_1_By = 1 AND [Measured_LLI_1_By] IS NULL) OR ([Measured_LLI"& _ 
                "_1_By] = @Original_Measured_LLI_1_By)) AND ((@IsNull_Date_Measurement_LLI_2 = 1 "& _ 
                "AND [Date_Measurement_LLI_2] IS NULL) OR ([Date_Measurement_LLI_2] = @Original_D"& _ 
                "ate_Measurement_LLI_2)) AND ((@IsNull_Detector_2_Measurement_LLI_2 = 1 AND [Dete"& _ 
                "ctor_2_Measurement_LLI_2] IS NULL) OR ([Detector_2_Measurement_LLI_2] = @Origina"& _ 
                "l_Detector_2_Measurement_LLI_2)) AND ((@IsNull_Detector_3_Measurement_LLI_2 = 1 "& _ 
                "AND [Detector_3_Measurement_LLI_2] IS NULL) OR ([Detector_3_Measurement_LLI_2] ="& _ 
                " @Original_Detector_3_Measurement_LLI_2)) AND ((@IsNull_Detector_4_Measurement_L"& _ 
                "LI_2 = 1 AND [Detector_4_Measurement_LLI_2] IS NULL) OR ([Detector_4_Measurement"& _ 
                "_LLI_2] = @Original_Detector_4_Measurement_LLI_2)) AND ((@IsNull_Paper_Log_LLI_2"& _ 
                "_Number = 1 AND [Paper_Log_LLI_2_Number] IS NULL) OR ([Paper_Log_LLI_2_Number] ="& _ 
                " @Original_Paper_Log_LLI_2_Number)) AND ((@IsNull_Measured_LLI_2_By = 1 AND [Mea"& _ 
                "sured_LLI_2_By] IS NULL) OR ([Measured_LLI_2_By] = @Original_Measured_LLI_2_By))"& _ 
                " AND ((@IsNull_Detector_1_Measurement_LLI_1 = 1 AND [Detector_1_Measurement_LLI_"& _ 
                "1] IS NULL) OR ([Detector_1_Measurement_LLI_1] = @Original_Detector_1_Measuremen"& _ 
                "t_LLI_1)) AND ((@IsNull_Detector_1_Measurement_LLI_2 = 1 AND [Detector_1_Measure"& _ 
                "ment_LLI_2] IS NULL) OR ([Detector_1_Measurement_LLI_2] = @Original_Detector_1_M"& _ 
                "easurement_LLI_2)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Country_Code, Client_ID, Year, Sample_Set_ID, Sampl"& _ 
                "e_Set_Index, Sample_ID, Date_Start, Time_Start, Channel, Date_Finish, Time_Finis"& _ 
                "h, Power_Relief_Date_Start_1, Power_Relief_Time_Start_1, Power_Relief_Date_Finis"& _ 
                "h_1, Power_Relief_Time_Finish_1, Power_Relief_Date_Start_2, Power_Relief_Time_St"& _ 
                "art_2, Power_Relief_Date_Finish_2, Power_Relief_Time_Finish_2, Container_Number,"& _ 
                " Position_Number, Irradiated_By, Date_Rehadle, Rehandled_By, Date_Measurement_LL"& _ 
                "I_1, Detector_2_Measurement_LLI_1, Detector_3_Measurement_LLI_1, Detector_4_Meas"& _ 
                "urement_LLI_1, Paper_Log_LLI_1_Number, Measured_LLI_1_By, Date_Measurement_LLI_2"& _ 
                ", Detector_2_Measurement_LLI_2, Detector_3_Measurement_LLI_2, Detector_4_Measure"& _ 
                "ment_LLI_2, Paper_Log_LLI_2_Number, Measured_LLI_2_By, Detector_1_Measurement_LL"& _ 
                "I_1, Detector_1_Measurement_LLI_2 FROM table_LLI_Irradiation_Log WHERE (Client_I"& _ 
                "D = @Client_ID) AND (Country_Code = @Country_Code) AND (Date_Start = @Date_Start"& _ 
                ") AND (Sample_ID = @Sample_ID) AND (Sample_Set_ID = @Sample_Set_ID) AND (Sample_"& _ 
                "Set_Index = @Sample_Set_Index) AND (Year = @Year) ORDER BY Container_Number, Pos"& _ 
                "ition_Number"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Index", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Start", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Time_Start", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Time_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Channel", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Channel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Finish", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Finish", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Time_Finish", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Time_Finish", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Date_Start_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Start_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Time_Start_1", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Start_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Date_Finish_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Finish_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Time_Finish_1", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Finish_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Date_Start_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Start_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Time_Start_2", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Start_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Date_Finish_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Finish_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Power_Relief_Time_Finish_2", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Finish_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Container_Number", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Container_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Position_Number", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Position_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Irradiated_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Irradiated_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Rehadle", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Rehadle", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rehandled_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rehandled_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Measurement_LLI_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Measurement_LLI_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_2_Measurement_LLI_1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_2_Measurement_LLI_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_3_Measurement_LLI_1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_3_Measurement_LLI_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_4_Measurement_LLI_1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_4_Measurement_LLI_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Paper_Log_LLI_1_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Paper_Log_LLI_1_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Measured_LLI_1_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Measured_LLI_1_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Measurement_LLI_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Measurement_LLI_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_2_Measurement_LLI_2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_2_Measurement_LLI_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_3_Measurement_LLI_2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_3_Measurement_LLI_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_4_Measurement_LLI_2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_4_Measurement_LLI_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Paper_Log_LLI_2_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Paper_Log_LLI_2_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Measured_LLI_2_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Measured_LLI_2_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_1_Measurement_LLI_1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_1_Measurement_LLI_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Detector_1_Measurement_LLI_2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_1_Measurement_LLI_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Year", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_Set_Index", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sample_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Date_Start", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Start", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Time_Start", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Time_Start", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Time_Start", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Time_Start", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Channel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Channel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Channel", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Channel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Date_Finish", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Finish", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Date_Finish", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Finish", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Time_Finish", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Time_Finish", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Time_Finish", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Time_Finish", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Date_Start_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Start_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Date_Start_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Start_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Time_Start_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Start_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Time_Start_1", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Start_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Date_Finish_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Finish_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Date_Finish_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Finish_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Time_Finish_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Finish_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Time_Finish_1", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Finish_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Date_Start_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Start_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Date_Start_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Start_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Time_Start_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Start_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Time_Start_2", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Start_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Date_Finish_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Finish_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Date_Finish_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Date_Finish_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Power_Relief_Time_Finish_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Finish_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Power_Relief_Time_Finish_2", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Power_Relief_Time_Finish_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Container_Number", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Container_Number", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Container_Number", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Container_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Position_Number", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Position_Number", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Position_Number", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Position_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Irradiated_By", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Irradiated_By", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Irradiated_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Irradiated_By", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Date_Rehadle", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Rehadle", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Date_Rehadle", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Rehadle", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Rehandled_By", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rehandled_By", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Rehandled_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rehandled_By", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Date_Measurement_LLI_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Date_Measurement_LLI_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_2_Measurement_LLI_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_2_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_2_Measurement_LLI_1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_2_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_3_Measurement_LLI_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_3_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_3_Measurement_LLI_1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_3_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_4_Measurement_LLI_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_4_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_4_Measurement_LLI_1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_4_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Paper_Log_LLI_1_Number", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Paper_Log_LLI_1_Number", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Paper_Log_LLI_1_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Paper_Log_LLI_1_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Measured_LLI_1_By", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Measured_LLI_1_By", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Measured_LLI_1_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Measured_LLI_1_By", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Date_Measurement_LLI_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Date_Measurement_LLI_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_2_Measurement_LLI_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_2_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_2_Measurement_LLI_2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_2_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_3_Measurement_LLI_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_3_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_3_Measurement_LLI_2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_3_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_4_Measurement_LLI_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_4_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_4_Measurement_LLI_2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_4_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Paper_Log_LLI_2_Number", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Paper_Log_LLI_2_Number", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Paper_Log_LLI_2_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Paper_Log_LLI_2_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Measured_LLI_2_By", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Measured_LLI_2_By", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Measured_LLI_2_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Measured_LLI_2_By", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_1_Measurement_LLI_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_1_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_1_Measurement_LLI_1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_1_Measurement_LLI_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Detector_1_Measurement_LLI_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_1_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Detector_1_Measurement_LLI_2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Detector_1_Measurement_LLI_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Country_Code, Client_ID, Year, Sample_Set_ID, Sample_Set_Index, Sample_ID,"& _ 
                " Date_Start, Time_Start, Channel, Date_Finish, Time_Finish, Power_Relief_Date_St"& _ 
                "art_1, Power_Relief_Time_Start_1, Power_Relief_Date_Finish_1, Power_Relief_Time_"& _ 
                "Finish_1, Power_Relief_Date_Start_2, Power_Relief_Time_Start_2, Power_Relief_Dat"& _ 
                "e_Finish_2, Power_Relief_Time_Finish_2, Container_Number, Position_Number, Irrad"& _ 
                "iated_By, Date_Rehadle, Rehandled_By, Date_Measurement_LLI_1, Detector_2_Measure"& _ 
                "ment_LLI_1, Detector_3_Measurement_LLI_1, Detector_4_Measurement_LLI_1, Paper_Lo"& _ 
                "g_LLI_1_Number, Measured_LLI_1_By, Date_Measurement_LLI_2, Detector_2_Measuremen"& _ 
                "t_LLI_2, Detector_3_Measurement_LLI_2, Detector_4_Measurement_LLI_2, Paper_Log_L"& _ 
                "LI_2_Number, Measured_LLI_2_By, Detector_1_Measurement_LLI_1, Detector_1_Measure"& _ 
                "ment_LLI_2 FROM table_LLI_Irradiation_Log WHERE (Date_Start = @Date_Start and Lo"& _ 
                "adNumber = @loadNumber) ORDER BY Container_Number, Position_Number"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Start", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@loadNumber", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "loadNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill_LLI_Irradiation_Log(ByVal dataTable As NAA_DB_EXPDataSet.table_LLI_Irradiation_LogDataTable, ByVal Date_Start As String, ByVal loadNumber As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Date_Start Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Date_Start")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Date_Start,String)
            End If
            If (loadNumber.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(loadNumber.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData_LLI_Irradiation_Log(ByVal Date_Start As String, ByVal loadNumber As Global.System.Nullable(Of Integer)) As NAA_DB_EXPDataSet.table_LLI_Irradiation_LogDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Date_Start Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Date_Start")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Date_Start,String)
            End If
            If (loadNumber.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(loadNumber.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As NAA_DB_EXPDataSet.table_LLI_Irradiation_LogDataTable = New NAA_DB_EXPDataSet.table_LLI_Irradiation_LogDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_LLI_Irradiation_LogDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_LLI_Irradiation_Log")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_Country_Code As String,  _
                    ByVal Original_Client_ID As String,  _
                    ByVal Original_Year As String,  _
                    ByVal Original_Sample_Set_ID As String,  _
                    ByVal Original_Sample_Set_Index As String,  _
                    ByVal Original_Sample_ID As String,  _
                    ByVal Original_Date_Start As Date,  _
                    ByVal Original_Time_Start As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Channel As Global.System.Nullable(Of Short),  _
                    ByVal Original_Date_Finish As Global.System.Nullable(Of Date),  _
                    ByVal Original_Time_Finish As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Power_Relief_Date_Start_1 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Power_Relief_Time_Start_1 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Power_Relief_Date_Finish_1 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Power_Relief_Time_Finish_1 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Power_Relief_Date_Start_2 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Power_Relief_Time_Start_2 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Power_Relief_Date_Finish_2 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Power_Relief_Time_Finish_2 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Container_Number As Global.System.Nullable(Of Short),  _
                    ByVal Original_Position_Number As Global.System.Nullable(Of Short),  _
                    ByVal Original_Irradiated_By As String,  _
                    ByVal Original_Date_Rehadle As Global.System.Nullable(Of Date),  _
                    ByVal Original_Rehandled_By As String,  _
                    ByVal Original_Date_Measurement_LLI_1 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Detector_2_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Detector_3_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Detector_4_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Paper_Log_LLI_1_Number As String,  _
                    ByVal Original_Measured_LLI_1_By As String,  _
                    ByVal Original_Date_Measurement_LLI_2 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Detector_2_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Detector_3_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Detector_4_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Paper_Log_LLI_2_Number As String,  _
                    ByVal Original_Measured_LLI_2_By As String,  _
                    ByVal Original_Detector_1_Measurement_LLI_1 As Global.System.Nullable(Of Short),  _
                    ByVal Original_Detector_1_Measurement_LLI_2 As Global.System.Nullable(Of Short)) As Integer
            If (Original_Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Country_Code")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Country_Code,String)
            End If
            If (Original_Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Client_ID")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Client_ID,String)
            End If
            If (Original_Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Year")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Year,String)
            End If
            If (Original_Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sample_Set_ID")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Sample_Set_ID,String)
            End If
            If (Original_Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sample_Set_Index")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Sample_Set_Index,String)
            End If
            If (Original_Sample_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sample_ID")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Sample_ID,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Date_Start,Date)
            If (Original_Time_Start.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Time_Start.Value,System.TimeSpan)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_Channel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Channel.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_Date_Finish.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Date_Finish.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_Time_Finish.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Time_Finish.Value,System.TimeSpan)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Date_Start_1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Power_Relief_Date_Start_1.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Time_Start_1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_Power_Relief_Time_Start_1.Value,System.TimeSpan)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Date_Finish_1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Power_Relief_Date_Finish_1.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Time_Finish_1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_Power_Relief_Time_Finish_1.Value,System.TimeSpan)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Date_Start_2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_Power_Relief_Date_Start_2.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Time_Start_2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_Power_Relief_Time_Start_2.Value,System.TimeSpan)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Date_Finish_2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_Power_Relief_Date_Finish_2.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Time_Finish_2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_Power_Relief_Time_Finish_2.Value,System.TimeSpan)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_Container_Number.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_Container_Number.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_Position_Number.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_Position_Number.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_Irradiated_By Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_Irradiated_By,String)
            End If
            If (Original_Date_Rehadle.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_Date_Rehadle.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_Rehandled_By Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_Rehandled_By,String)
            End If
            If (Original_Date_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_Date_Measurement_LLI_1.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_Detector_2_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_Detector_2_Measurement_LLI_1.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_Detector_3_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_Detector_3_Measurement_LLI_1.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_Detector_4_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_Detector_4_Measurement_LLI_1.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_Paper_Log_LLI_1_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_Paper_Log_LLI_1_Number,String)
            End If
            If (Original_Measured_LLI_1_By Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_Measured_LLI_1_By,String)
            End If
            If (Original_Date_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_Date_Measurement_LLI_2.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_Detector_2_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_Detector_2_Measurement_LLI_2.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_Detector_3_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_Detector_3_Measurement_LLI_2.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_Detector_4_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_Detector_4_Measurement_LLI_2.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_Paper_Log_LLI_2_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_Paper_Log_LLI_2_Number,String)
            End If
            If (Original_Measured_LLI_2_By Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_Measured_LLI_2_By,String)
            End If
            If (Original_Detector_1_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_Detector_1_Measurement_LLI_1.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_Detector_1_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_Detector_1_Measurement_LLI_2.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Country_Code As String,  _
                    ByVal Client_ID As String,  _
                    ByVal Year As String,  _
                    ByVal Sample_Set_ID As String,  _
                    ByVal Sample_Set_Index As String,  _
                    ByVal Sample_ID As String,  _
                    ByVal Date_Start As Date,  _
                    ByVal Time_Start As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Channel As Global.System.Nullable(Of Short),  _
                    ByVal Date_Finish As Global.System.Nullable(Of Date),  _
                    ByVal Time_Finish As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Power_Relief_Date_Start_1 As Global.System.Nullable(Of Date),  _
                    ByVal Power_Relief_Time_Start_1 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Power_Relief_Date_Finish_1 As Global.System.Nullable(Of Date),  _
                    ByVal Power_Relief_Time_Finish_1 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Power_Relief_Date_Start_2 As Global.System.Nullable(Of Date),  _
                    ByVal Power_Relief_Time_Start_2 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Power_Relief_Date_Finish_2 As Global.System.Nullable(Of Date),  _
                    ByVal Power_Relief_Time_Finish_2 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Container_Number As Global.System.Nullable(Of Short),  _
                    ByVal Position_Number As Global.System.Nullable(Of Short),  _
                    ByVal Irradiated_By As String,  _
                    ByVal Date_Rehadle As Global.System.Nullable(Of Date),  _
                    ByVal Rehandled_By As String,  _
                    ByVal Date_Measurement_LLI_1 As Global.System.Nullable(Of Date),  _
                    ByVal Detector_2_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Detector_3_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Detector_4_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Paper_Log_LLI_1_Number As String,  _
                    ByVal Measured_LLI_1_By As String,  _
                    ByVal Date_Measurement_LLI_2 As Global.System.Nullable(Of Date),  _
                    ByVal Detector_2_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Detector_3_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Detector_4_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Paper_Log_LLI_2_Number As String,  _
                    ByVal Measured_LLI_2_By As String,  _
                    ByVal Detector_1_Measurement_LLI_1 As Global.System.Nullable(Of Short),  _
                    ByVal Detector_1_Measurement_LLI_2 As Global.System.Nullable(Of Short)) As Integer
            If (Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Country_Code")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Country_Code,String)
            End If
            If (Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Client_ID")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Client_ID,String)
            End If
            If (Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Year")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Year,String)
            End If
            If (Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sample_Set_ID")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Sample_Set_ID,String)
            End If
            If (Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sample_Set_Index")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Sample_Set_Index,String)
            End If
            If (Sample_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sample_ID")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Sample_ID,String)
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(Date_Start,Date)
            If (Time_Start.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Time_Start.Value,System.TimeSpan)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Channel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Channel.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Date_Finish.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Date_Finish.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Time_Finish.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Time_Finish.Value,System.TimeSpan)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Date_Start_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Power_Relief_Date_Start_1.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Time_Start_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Power_Relief_Time_Start_1.Value,System.TimeSpan)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Date_Finish_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Power_Relief_Date_Finish_1.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Time_Finish_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Power_Relief_Time_Finish_1.Value,System.TimeSpan)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Date_Start_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Power_Relief_Date_Start_2.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Time_Start_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Power_Relief_Time_Start_2.Value,System.TimeSpan)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Date_Finish_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Power_Relief_Date_Finish_2.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Time_Finish_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Power_Relief_Time_Finish_2.Value,System.TimeSpan)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Container_Number.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Container_Number.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Position_Number.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Position_Number.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Irradiated_By Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Irradiated_By,String)
            End If
            If (Date_Rehadle.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Date_Rehadle.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Rehandled_By Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Rehandled_By,String)
            End If
            If (Date_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Date_Measurement_LLI_1.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Detector_2_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Detector_2_Measurement_LLI_1.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Detector_3_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Detector_3_Measurement_LLI_1.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Detector_4_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Detector_4_Measurement_LLI_1.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Paper_Log_LLI_1_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Paper_Log_LLI_1_Number,String)
            End If
            If (Measured_LLI_1_By Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Measured_LLI_1_By,String)
            End If
            If (Date_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Date_Measurement_LLI_2.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Detector_2_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Detector_2_Measurement_LLI_2.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Detector_3_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Detector_3_Measurement_LLI_2.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Detector_4_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Detector_4_Measurement_LLI_2.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Paper_Log_LLI_2_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Paper_Log_LLI_2_Number,String)
            End If
            If (Measured_LLI_2_By Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(Measured_LLI_2_By,String)
            End If
            If (Detector_1_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Detector_1_Measurement_LLI_1.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Detector_1_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(Detector_1_Measurement_LLI_2.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Country_Code As String,  _
                    ByVal Client_ID As String,  _
                    ByVal Year As String,  _
                    ByVal Sample_Set_ID As String,  _
                    ByVal Sample_Set_Index As String,  _
                    ByVal Sample_ID As String,  _
                    ByVal Date_Start As Date,  _
                    ByVal Time_Start As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Channel As Global.System.Nullable(Of Short),  _
                    ByVal Date_Finish As Global.System.Nullable(Of Date),  _
                    ByVal Time_Finish As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Power_Relief_Date_Start_1 As Global.System.Nullable(Of Date),  _
                    ByVal Power_Relief_Time_Start_1 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Power_Relief_Date_Finish_1 As Global.System.Nullable(Of Date),  _
                    ByVal Power_Relief_Time_Finish_1 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Power_Relief_Date_Start_2 As Global.System.Nullable(Of Date),  _
                    ByVal Power_Relief_Time_Start_2 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Power_Relief_Date_Finish_2 As Global.System.Nullable(Of Date),  _
                    ByVal Power_Relief_Time_Finish_2 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Container_Number As Global.System.Nullable(Of Short),  _
                    ByVal Position_Number As Global.System.Nullable(Of Short),  _
                    ByVal Irradiated_By As String,  _
                    ByVal Date_Rehadle As Global.System.Nullable(Of Date),  _
                    ByVal Rehandled_By As String,  _
                    ByVal Date_Measurement_LLI_1 As Global.System.Nullable(Of Date),  _
                    ByVal Detector_2_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Detector_3_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Detector_4_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Paper_Log_LLI_1_Number As String,  _
                    ByVal Measured_LLI_1_By As String,  _
                    ByVal Date_Measurement_LLI_2 As Global.System.Nullable(Of Date),  _
                    ByVal Detector_2_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Detector_3_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Detector_4_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Paper_Log_LLI_2_Number As String,  _
                    ByVal Measured_LLI_2_By As String,  _
                    ByVal Detector_1_Measurement_LLI_1 As Global.System.Nullable(Of Short),  _
                    ByVal Detector_1_Measurement_LLI_2 As Global.System.Nullable(Of Short),  _
                    ByVal Original_Country_Code As String,  _
                    ByVal Original_Client_ID As String,  _
                    ByVal Original_Year As String,  _
                    ByVal Original_Sample_Set_ID As String,  _
                    ByVal Original_Sample_Set_Index As String,  _
                    ByVal Original_Sample_ID As String,  _
                    ByVal Original_Date_Start As Date,  _
                    ByVal Original_Time_Start As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Channel As Global.System.Nullable(Of Short),  _
                    ByVal Original_Date_Finish As Global.System.Nullable(Of Date),  _
                    ByVal Original_Time_Finish As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Power_Relief_Date_Start_1 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Power_Relief_Time_Start_1 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Power_Relief_Date_Finish_1 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Power_Relief_Time_Finish_1 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Power_Relief_Date_Start_2 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Power_Relief_Time_Start_2 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Power_Relief_Date_Finish_2 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Power_Relief_Time_Finish_2 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Container_Number As Global.System.Nullable(Of Short),  _
                    ByVal Original_Position_Number As Global.System.Nullable(Of Short),  _
                    ByVal Original_Irradiated_By As String,  _
                    ByVal Original_Date_Rehadle As Global.System.Nullable(Of Date),  _
                    ByVal Original_Rehandled_By As String,  _
                    ByVal Original_Date_Measurement_LLI_1 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Detector_2_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Detector_3_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Detector_4_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Paper_Log_LLI_1_Number As String,  _
                    ByVal Original_Measured_LLI_1_By As String,  _
                    ByVal Original_Date_Measurement_LLI_2 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Detector_2_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Detector_3_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Detector_4_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Paper_Log_LLI_2_Number As String,  _
                    ByVal Original_Measured_LLI_2_By As String,  _
                    ByVal Original_Detector_1_Measurement_LLI_1 As Global.System.Nullable(Of Short),  _
                    ByVal Original_Detector_1_Measurement_LLI_2 As Global.System.Nullable(Of Short)) As Integer
            If (Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Country_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Country_Code,String)
            End If
            If (Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Client_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Client_ID,String)
            End If
            If (Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Year")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Year,String)
            End If
            If (Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sample_Set_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Sample_Set_ID,String)
            End If
            If (Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sample_Set_Index")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Sample_Set_Index,String)
            End If
            If (Sample_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sample_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Sample_ID,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Date_Start,Date)
            If (Time_Start.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Time_Start.Value,System.TimeSpan)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Channel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Channel.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Date_Finish.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Date_Finish.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Time_Finish.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Time_Finish.Value,System.TimeSpan)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Date_Start_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Power_Relief_Date_Start_1.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Time_Start_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Power_Relief_Time_Start_1.Value,System.TimeSpan)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Date_Finish_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Power_Relief_Date_Finish_1.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Time_Finish_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Power_Relief_Time_Finish_1.Value,System.TimeSpan)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Date_Start_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Power_Relief_Date_Start_2.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Time_Start_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Power_Relief_Time_Start_2.Value,System.TimeSpan)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Date_Finish_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Power_Relief_Date_Finish_2.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Power_Relief_Time_Finish_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Power_Relief_Time_Finish_2.Value,System.TimeSpan)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Container_Number.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Container_Number.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Position_Number.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Position_Number.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Irradiated_By Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Irradiated_By,String)
            End If
            If (Date_Rehadle.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Date_Rehadle.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Rehandled_By Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Rehandled_By,String)
            End If
            If (Date_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Date_Measurement_LLI_1.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Detector_2_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Detector_2_Measurement_LLI_1.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Detector_3_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Detector_3_Measurement_LLI_1.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Detector_4_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Detector_4_Measurement_LLI_1.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Paper_Log_LLI_1_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Paper_Log_LLI_1_Number,String)
            End If
            If (Measured_LLI_1_By Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Measured_LLI_1_By,String)
            End If
            If (Date_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Date_Measurement_LLI_2.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Detector_2_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Detector_2_Measurement_LLI_2.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Detector_3_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Detector_3_Measurement_LLI_2.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Detector_4_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Detector_4_Measurement_LLI_2.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Paper_Log_LLI_2_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Paper_Log_LLI_2_Number,String)
            End If
            If (Measured_LLI_2_By Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Measured_LLI_2_By,String)
            End If
            If (Detector_1_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Detector_1_Measurement_LLI_1.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Detector_1_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Detector_1_Measurement_LLI_2.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Country_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_Country_Code,String)
            End If
            If (Original_Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Client_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_Client_ID,String)
            End If
            If (Original_Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Year")
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_Year,String)
            End If
            If (Original_Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sample_Set_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_Sample_Set_ID,String)
            End If
            If (Original_Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sample_Set_Index")
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_Sample_Set_Index,String)
            End If
            If (Original_Sample_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sample_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_Sample_ID,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_Date_Start,Date)
            If (Original_Time_Start.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_Time_Start.Value,System.TimeSpan)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_Channel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_Channel.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_Date_Finish.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_Date_Finish.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_Time_Finish.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_Time_Finish.Value,System.TimeSpan)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Date_Start_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_Power_Relief_Date_Start_1.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Time_Start_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_Power_Relief_Time_Start_1.Value,System.TimeSpan)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Date_Finish_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_Power_Relief_Date_Finish_1.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Time_Finish_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_Power_Relief_Time_Finish_1.Value,System.TimeSpan)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Date_Start_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_Power_Relief_Date_Start_2.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Time_Start_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_Power_Relief_Time_Start_2.Value,System.TimeSpan)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Date_Finish_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_Power_Relief_Date_Finish_2.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_Power_Relief_Time_Finish_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_Power_Relief_Time_Finish_2.Value,System.TimeSpan)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_Container_Number.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_Container_Number.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_Position_Number.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_Position_Number.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_Irradiated_By Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_Irradiated_By,String)
            End If
            If (Original_Date_Rehadle.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_Date_Rehadle.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (Original_Rehandled_By Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_Rehandled_By,String)
            End If
            If (Original_Date_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_Date_Measurement_LLI_1.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_Detector_2_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_Detector_2_Measurement_LLI_1.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_Detector_3_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_Detector_3_Measurement_LLI_1.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_Detector_4_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_Detector_4_Measurement_LLI_1.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_Paper_Log_LLI_1_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_Paper_Log_LLI_1_Number,String)
            End If
            If (Original_Measured_LLI_1_By Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_Measured_LLI_1_By,String)
            End If
            If (Original_Date_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_Date_Measurement_LLI_2.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_Detector_2_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_Detector_2_Measurement_LLI_2.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_Detector_3_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_Detector_3_Measurement_LLI_2.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_Detector_4_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_Detector_4_Measurement_LLI_2.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_Paper_Log_LLI_2_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_Paper_Log_LLI_2_Number,String)
            End If
            If (Original_Measured_LLI_2_By Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_Measured_LLI_2_By,String)
            End If
            If (Original_Detector_1_Measurement_LLI_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_Detector_1_Measurement_LLI_1.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_Detector_1_Measurement_LLI_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_Detector_1_Measurement_LLI_2.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Date_Start As Date,  _
                    ByVal Time_Start As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Channel As Global.System.Nullable(Of Short),  _
                    ByVal Date_Finish As Global.System.Nullable(Of Date),  _
                    ByVal Time_Finish As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Power_Relief_Date_Start_1 As Global.System.Nullable(Of Date),  _
                    ByVal Power_Relief_Time_Start_1 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Power_Relief_Date_Finish_1 As Global.System.Nullable(Of Date),  _
                    ByVal Power_Relief_Time_Finish_1 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Power_Relief_Date_Start_2 As Global.System.Nullable(Of Date),  _
                    ByVal Power_Relief_Time_Start_2 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Power_Relief_Date_Finish_2 As Global.System.Nullable(Of Date),  _
                    ByVal Power_Relief_Time_Finish_2 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Container_Number As Global.System.Nullable(Of Short),  _
                    ByVal Position_Number As Global.System.Nullable(Of Short),  _
                    ByVal Irradiated_By As String,  _
                    ByVal Date_Rehadle As Global.System.Nullable(Of Date),  _
                    ByVal Rehandled_By As String,  _
                    ByVal Date_Measurement_LLI_1 As Global.System.Nullable(Of Date),  _
                    ByVal Detector_2_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Detector_3_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Detector_4_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Paper_Log_LLI_1_Number As String,  _
                    ByVal Measured_LLI_1_By As String,  _
                    ByVal Date_Measurement_LLI_2 As Global.System.Nullable(Of Date),  _
                    ByVal Detector_2_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Detector_3_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Detector_4_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Paper_Log_LLI_2_Number As String,  _
                    ByVal Measured_LLI_2_By As String,  _
                    ByVal Detector_1_Measurement_LLI_1 As Global.System.Nullable(Of Short),  _
                    ByVal Detector_1_Measurement_LLI_2 As Global.System.Nullable(Of Short),  _
                    ByVal Original_Country_Code As String,  _
                    ByVal Original_Client_ID As String,  _
                    ByVal Original_Year As String,  _
                    ByVal Original_Sample_Set_ID As String,  _
                    ByVal Original_Sample_Set_Index As String,  _
                    ByVal Original_Sample_ID As String,  _
                    ByVal Original_Date_Start As Date,  _
                    ByVal Original_Time_Start As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Channel As Global.System.Nullable(Of Short),  _
                    ByVal Original_Date_Finish As Global.System.Nullable(Of Date),  _
                    ByVal Original_Time_Finish As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Power_Relief_Date_Start_1 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Power_Relief_Time_Start_1 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Power_Relief_Date_Finish_1 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Power_Relief_Time_Finish_1 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Power_Relief_Date_Start_2 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Power_Relief_Time_Start_2 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Power_Relief_Date_Finish_2 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Power_Relief_Time_Finish_2 As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Container_Number As Global.System.Nullable(Of Short),  _
                    ByVal Original_Position_Number As Global.System.Nullable(Of Short),  _
                    ByVal Original_Irradiated_By As String,  _
                    ByVal Original_Date_Rehadle As Global.System.Nullable(Of Date),  _
                    ByVal Original_Rehandled_By As String,  _
                    ByVal Original_Date_Measurement_LLI_1 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Detector_2_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Detector_3_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Detector_4_Measurement_LLI_1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Paper_Log_LLI_1_Number As String,  _
                    ByVal Original_Measured_LLI_1_By As String,  _
                    ByVal Original_Date_Measurement_LLI_2 As Global.System.Nullable(Of Date),  _
                    ByVal Original_Detector_2_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Detector_3_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Detector_4_Measurement_LLI_2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Paper_Log_LLI_2_Number As String,  _
                    ByVal Original_Measured_LLI_2_By As String,  _
                    ByVal Original_Detector_1_Measurement_LLI_1 As Global.System.Nullable(Of Short),  _
                    ByVal Original_Detector_1_Measurement_LLI_2 As Global.System.Nullable(Of Short)) As Integer
            Return Me.Update(Original_Country_Code, Original_Client_ID, Original_Year, Original_Sample_Set_ID, Original_Sample_Set_Index, Original_Sample_ID, Date_Start, Time_Start, Channel, Date_Finish, Time_Finish, Power_Relief_Date_Start_1, Power_Relief_Time_Start_1, Power_Relief_Date_Finish_1, Power_Relief_Time_Finish_1, Power_Relief_Date_Start_2, Power_Relief_Time_Start_2, Power_Relief_Date_Finish_2, Power_Relief_Time_Finish_2, Container_Number, Position_Number, Irradiated_By, Date_Rehadle, Rehandled_By, Date_Measurement_LLI_1, Detector_2_Measurement_LLI_1, Detector_3_Measurement_LLI_1, Detector_4_Measurement_LLI_1, Paper_Log_LLI_1_Number, Measured_LLI_1_By, Date_Measurement_LLI_2, Detector_2_Measurement_LLI_2, Detector_3_Measurement_LLI_2, Detector_4_Measurement_LLI_2, Paper_Log_LLI_2_Number, Measured_LLI_2_By, Detector_1_Measurement_LLI_1, Detector_1_Measurement_LLI_2, Original_Country_Code, Original_Client_ID, Original_Year, Original_Sample_Set_ID, Original_Sample_Set_Index, Original_Sample_ID, Original_Date_Start, Original_Time_Start, Original_Channel, Original_Date_Finish, Original_Time_Finish, Original_Power_Relief_Date_Start_1, Original_Power_Relief_Time_Start_1, Original_Power_Relief_Date_Finish_1, Original_Power_Relief_Time_Finish_1, Original_Power_Relief_Date_Start_2, Original_Power_Relief_Time_Start_2, Original_Power_Relief_Date_Finish_2, Original_Power_Relief_Time_Finish_2, Original_Container_Number, Original_Position_Number, Original_Irradiated_By, Original_Date_Rehadle, Original_Rehandled_By, Original_Date_Measurement_LLI_1, Original_Detector_2_Measurement_LLI_1, Original_Detector_3_Measurement_LLI_1, Original_Detector_4_Measurement_LLI_1, Original_Paper_Log_LLI_1_Number, Original_Measured_LLI_1_By, Original_Date_Measurement_LLI_2, Original_Detector_2_Measurement_LLI_2, Original_Detector_3_Measurement_LLI_2, Original_Detector_4_Measurement_LLI_2, Original_Paper_Log_LLI_2_Number, Original_Measured_LLI_2_By, Original_Detector_1_Measurement_LLI_1, Original_Detector_1_Measurement_LLI_2)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_MonitorTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_Monitor"
            tableMapping.ColumnMappings.Add("Monitor_Set_Name", "Monitor_Set_Name")
            tableMapping.ColumnMappings.Add("Monitor_Set_Number", "Monitor_Set_Number")
            tableMapping.ColumnMappings.Add("Monitor_Set_Weight", "Monitor_Set_Weight")
            tableMapping.ColumnMappings.Add("Monitor_Number", "Monitor_Number")
            tableMapping.ColumnMappings.Add("Monitor_SLI_Weight", "Monitor_SLI_Weight")
            tableMapping.ColumnMappings.Add("Monitor_SLI_Date_Start", "Monitor_SLI_Date_Start")
            tableMapping.ColumnMappings.Add("Monitor_SLI_Not_In_Use", "Monitor_SLI_Not_In_Use")
            tableMapping.ColumnMappings.Add("Monitor_LLI_Weight", "Monitor_LLI_Weight")
            tableMapping.ColumnMappings.Add("Monitor_LLI_Date_Start", "Monitor_LLI_Date_Start")
            tableMapping.ColumnMappings.Add("Monitor_LLI_Not_In_Use", "Monitor_LLI_Not_In_Use")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [table_Monitor] WHERE (([Monitor_Set_Name] = @Original_Monitor_Set_Na"& _ 
                "me) AND ([Monitor_Set_Number] = @Original_Monitor_Set_Number) AND ([Monitor_Set_"& _ 
                "Weight] = @Original_Monitor_Set_Weight) AND ([Monitor_Number] = @Original_Monito"& _ 
                "r_Number) AND ((@IsNull_Monitor_SLI_Weight = 1 AND [Monitor_SLI_Weight] IS NULL)"& _ 
                " OR ([Monitor_SLI_Weight] = @Original_Monitor_SLI_Weight)) AND ((@IsNull_Monitor"& _ 
                "_LLI_Weight = 1 AND [Monitor_LLI_Weight] IS NULL) OR ([Monitor_LLI_Weight] = @Or"& _ 
                "iginal_Monitor_LLI_Weight)) AND ((@IsNull_Monitor_SLI_Date_Start = 1 AND [Monito"& _ 
                "r_SLI_Date_Start] IS NULL) OR ([Monitor_SLI_Date_Start] = @Original_Monitor_SLI_"& _ 
                "Date_Start)) AND ((@IsNull_Monitor_LLI_Date_Start = 1 AND [Monitor_LLI_Date_Star"& _ 
                "t] IS NULL) OR ([Monitor_LLI_Date_Start] = @Original_Monitor_LLI_Date_Start)) AN"& _ 
                "D ((@IsNull_Monitor_LLI_Not_In_Use = 1 AND [Monitor_LLI_Not_In_Use] IS NULL) OR "& _ 
                "([Monitor_LLI_Not_In_Use] = @Original_Monitor_LLI_Not_In_Use)) AND ((@IsNull_Mon"& _ 
                "itor_SLI_Not_In_Use = 1 AND [Monitor_SLI_Not_In_Use] IS NULL) OR ([Monitor_SLI_N"& _ 
                "ot_In_Use] = @Original_Monitor_SLI_Not_In_Use)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_Set_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_Set_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_Set_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Weight", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Monitor_SLI_Weight", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_SLI_Weight", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_SLI_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_SLI_Weight", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Monitor_LLI_Weight", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_LLI_Weight", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_LLI_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_LLI_Weight", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Monitor_SLI_Date_Start", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_SLI_Date_Start", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_SLI_Date_Start", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_SLI_Date_Start", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Monitor_LLI_Date_Start", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_LLI_Date_Start", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_LLI_Date_Start", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_LLI_Date_Start", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Monitor_LLI_Not_In_Use", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_LLI_Not_In_Use", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_LLI_Not_In_Use", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_LLI_Not_In_Use", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Monitor_SLI_Not_In_Use", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_SLI_Not_In_Use", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_SLI_Not_In_Use", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_SLI_Not_In_Use", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [table_Monitor] ([Monitor_Set_Name], [Monitor_Set_Number], [Monitor_S"& _ 
                "et_Weight], [Monitor_Number], [Monitor_SLI_Weight], [Monitor_LLI_Weight], [Monit"& _ 
                "or_SLI_Date_Start], [Monitor_LLI_Date_Start], [Monitor_LLI_Not_In_Use], [Monitor"& _ 
                "_SLI_Not_In_Use]) VALUES (@Monitor_Set_Name, @Monitor_Set_Number, @Monitor_Set_W"& _ 
                "eight, @Monitor_Number, @Monitor_SLI_Weight, @Monitor_LLI_Weight, @Monitor_SLI_D"& _ 
                "ate_Start, @Monitor_LLI_Date_Start, @Monitor_LLI_Not_In_Use, @Monitor_SLI_Not_In"& _ 
                "_Use);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Monitor_Set_Name, Monitor_Set_Number, Monitor_Set_Weight, Monitor"& _ 
                "_Number, Monitor_SLI_Weight, Monitor_LLI_Weight, Monitor_SLI_Date_Start, Monitor"& _ 
                "_LLI_Date_Start, Monitor_LLI_Not_In_Use, Monitor_SLI_Not_In_Use FROM table_Monit"& _ 
                "or WHERE (Monitor_Number = @Monitor_Number) AND (Monitor_Set_Name = @Monitor_Set"& _ 
                "_Name) AND (Monitor_Set_Number = @Monitor_Set_Number) ORDER BY Monitor_Set_Numbe"& _ 
                "r"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_SLI_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_SLI_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_LLI_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_LLI_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_SLI_Date_Start", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_SLI_Date_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_LLI_Date_Start", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_LLI_Date_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_LLI_Not_In_Use", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_LLI_Not_In_Use", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_SLI_Not_In_Use", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_SLI_Not_In_Use", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE    table_Monitor"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              Monitor_Set_Weight = @Monitor_Set_Weigh"& _ 
                "t, Monitor_SLI_Weight = @Monitor_SLI_Weight, Monitor_LLI_Weight = @Monitor_LLI_W"& _ 
                "eight, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Monitor_SLI_Date_Start = @Monitor_SLI_Date_Start,"& _ 
                " Monitor_LLI_Date_Start = @Monitor_LLI_Date_Start, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Monit"& _ 
                "or_LLI_Not_In_Use = @Monitor_LLI_Not_In_Use, Monitor_SLI_Not_In_Use = @Monitor_S"& _ 
                "LI_Not_In_Use"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Monitor_Set_Name = @Monitor_Set_Name) AND (Monitor_Set"& _ 
                "_Number = @Monitor_Set_Number) AND (Monitor_Number = @Monitor_Number); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT "& _ 
                "Monitor_Set_Name, Monitor_Set_Number, Monitor_Set_Weight, Monitor_Number, Monito"& _ 
                "r_SLI_Weight, Monitor_LLI_Weight, Monitor_SLI_Date_Start, Monitor_LLI_Date_Start"& _ 
                ", Monitor_LLI_Not_In_Use, Monitor_SLI_Not_In_Use FROM table_Monitor WHERE (Monit"& _ 
                "or_Number = @Monitor_Number) AND (Monitor_Set_Name = @Monitor_Set_Name) AND (Mon"& _ 
                "itor_Set_Number = @Monitor_Set_Number) ORDER BY Monitor_Set_Number"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Weight", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_SLI_Weight", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_SLI_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_LLI_Weight", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_LLI_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_SLI_Date_Start", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_SLI_Date_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_LLI_Date_Start", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_LLI_Date_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_LLI_Not_In_Use", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_LLI_Not_In_Use", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_SLI_Not_In_Use", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_SLI_Not_In_Use", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Name", Global.System.Data.SqlDbType.NVarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Number", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Number", Global.System.Data.SqlDbType.NVarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Monitor_Set_Name, Monitor_Set_Number, Monitor_Set_Weight, Monitor_Number, "& _ 
                "Monitor_SLI_Weight, Monitor_LLI_Weight, Monitor_SLI_Date_Start, Monitor_LLI_Date"& _ 
                "_Start, Monitor_LLI_Not_In_Use, Monitor_SLI_Not_In_Use FROM table_Monitor WHERE "& _ 
                "(Monitor_Set_Name = @Monitor_Set_Name) AND (Monitor_Set_Number = @Monitor_Set_Nu"& _ 
                "mber) ORDER BY Monitor_Set_Number"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Name", Global.System.Data.SqlDbType.NVarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Number", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT Monitor_LLI_Date_Start, Monitor_LLI_Not_In_Use, Monitor_LLI_Weight, Monito"& _ 
                "r_Number, Monitor_SLI_Date_Start, Monitor_SLI_Not_In_Use, Monitor_SLI_Weight, Mo"& _ 
                "nitor_Set_Name, Monitor_Set_Number, Monitor_Set_Weight FROM table_Monitor WHERE "& _ 
                "(Monitor_Number = - 1)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT Monitor_LLI_Date_Start, Monitor_LLI_Not_In_Use, Monitor_LLI_Weight, Monito"& _ 
                "r_Number, Monitor_SLI_Date_Start, Monitor_SLI_Not_In_Use, Monitor_SLI_Weight, Mo"& _ 
                "nitor_Set_Name, Monitor_Set_Number, Monitor_Set_Weight FROM table_Monitor WHERE "& _ 
                "(Monitor_Set_Name = @Monitor_Set_Name) AND (Monitor_Set_Number = @Monitor_Set_Nu"& _ 
                "mber) AND (Monitor_LLI_Not_In_Use = 0 OR Monitor_LLI_Not_In_Use IS NULL) AND (Mo"& _ 
                "nitor_LLI_Date_Start <> @Monitor_LLI_Date_Start OR Monitor_LLI_Date_Start IS NUL"& _ 
                "L) ORDER BY Monitor_Number"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Name", Global.System.Data.SqlDbType.NVarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Number", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_LLI_Date_Start", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_LLI_Date_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT     Monitor_Set_Weight, Monitor_Number, Monitor_SLI_Weight, Monitor_SLI_Da"& _ 
                "te_Start, Monitor_Set_Name, Monitor_Set_Number, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Monitor_"& _ 
                "SLI_Not_In_Use"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         table_Monitor"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Monitor_Set_Name = @Monit"& _ 
                "or_Set_Name) AND (Monitor_Set_Number = @Monitor_Set_Number) AND (Monitor_SLI_Not"& _ 
                "_In_Use = 0 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Monitor_SLI_Not_In_Use IS NULL) AND (Monit"& _ 
                "or_SLI_Date_Start <> @Monitor_SLI_Date_Start OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Monitor_S"& _ 
                "LI_Date_Start IS NULL)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Monitor_Number"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Name", Global.System.Data.SqlDbType.NVarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Number", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_SLI_Date_Start", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_SLI_Date_Start", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "UPDATE    table_Monitor"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              Monitor_SLI_Not_In_Use = @Monitor_SLI_N"& _ 
                "ot_In_Use"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Monitor_Set_Name = @Monitor_Set_Name) AND (Monitor_Set_Num"& _ 
                "ber = @Monitor_Set_Number) AND (Monitor_Number = @Monitor_Number) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "              (Monitor_SLI_Date_Start = @Monitor_SLI_Date_Start)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_SLI_Not_In_Use", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_SLI_Not_In_Use", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Name", Global.System.Data.SqlDbType.NVarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Number", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Number", Global.System.Data.SqlDbType.NVarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_SLI_Date_Start", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_SLI_Date_Start", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NAA_DB_EXPDataSet.table_MonitorDataTable, ByVal Monitor_Set_Name As String, ByVal Monitor_Set_Number As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Monitor_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Name")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Monitor_Set_Name,String)
            End If
            If (Monitor_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Number")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Monitor_Set_Number,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Monitor_Set_Name As String, ByVal Monitor_Set_Number As String) As NAA_DB_EXPDataSet.table_MonitorDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Monitor_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Name")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Monitor_Set_Name,String)
            End If
            If (Monitor_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Number")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Monitor_Set_Number,String)
            End If
            Dim dataTable As NAA_DB_EXPDataSet.table_MonitorDataTable = New NAA_DB_EXPDataSet.table_MonitorDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function Fill_Empty(ByVal dataTable As NAA_DB_EXPDataSet.table_MonitorDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetData_Empty() As NAA_DB_EXPDataSet.table_MonitorDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As NAA_DB_EXPDataSet.table_MonitorDataTable = New NAA_DB_EXPDataSet.table_MonitorDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function Fill_In_Use_Date_LLI(ByVal dataTable As NAA_DB_EXPDataSet.table_MonitorDataTable, ByVal Monitor_Set_Name As String, ByVal Monitor_Set_Number As String, ByVal Monitor_LLI_Date_Start As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Monitor_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Name")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Monitor_Set_Name,String)
            End If
            If (Monitor_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Number")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Monitor_Set_Number,String)
            End If
            If (Monitor_LLI_Date_Start Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Monitor_LLI_Date_Start,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetData_In_Use_Date_LLI(ByVal Monitor_Set_Name As String, ByVal Monitor_Set_Number As String, ByVal Monitor_LLI_Date_Start As String) As NAA_DB_EXPDataSet.table_MonitorDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Monitor_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Name")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Monitor_Set_Name,String)
            End If
            If (Monitor_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Number")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Monitor_Set_Number,String)
            End If
            If (Monitor_LLI_Date_Start Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Monitor_LLI_Date_Start,String)
            End If
            Dim dataTable As NAA_DB_EXPDataSet.table_MonitorDataTable = New NAA_DB_EXPDataSet.table_MonitorDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function Fill_In_Use_Date_SLI(ByVal dataTable As NAA_DB_EXPDataSet.table_MonitorDataTable, ByVal Monitor_Set_Name As String, ByVal Monitor_Set_Number As String, ByVal Monitor_SLI_Date_Start As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (Monitor_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Name")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Monitor_Set_Name,String)
            End If
            If (Monitor_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Number")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Monitor_Set_Number,String)
            End If
            If (Monitor_SLI_Date_Start Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Monitor_SLI_Date_Start,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetData_In_Use_Date_SLI(ByVal Monitor_Set_Name As String, ByVal Monitor_Set_Number As String, ByVal Monitor_SLI_Date_Start As String) As NAA_DB_EXPDataSet.table_MonitorDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (Monitor_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Name")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Monitor_Set_Name,String)
            End If
            If (Monitor_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Number")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Monitor_Set_Number,String)
            End If
            If (Monitor_SLI_Date_Start Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Monitor_SLI_Date_Start,String)
            End If
            Dim dataTable As NAA_DB_EXPDataSet.table_MonitorDataTable = New NAA_DB_EXPDataSet.table_MonitorDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_MonitorDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_Monitor")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Monitor_Set_Name As String, ByVal Original_Monitor_Set_Number As String, ByVal Original_Monitor_Set_Weight As Single, ByVal Original_Monitor_Number As String, ByVal Original_Monitor_SLI_Weight As Global.System.Nullable(Of Single), ByVal Original_Monitor_LLI_Weight As Global.System.Nullable(Of Single), ByVal Original_Monitor_SLI_Date_Start As Global.System.Nullable(Of Date), ByVal Original_Monitor_LLI_Date_Start As Global.System.Nullable(Of Date), ByVal Original_Monitor_LLI_Not_In_Use As Global.System.Nullable(Of Boolean), ByVal Original_Monitor_SLI_Not_In_Use As Global.System.Nullable(Of Boolean)) As Integer
            If (Original_Monitor_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Monitor_Set_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Monitor_Set_Name,String)
            End If
            If (Original_Monitor_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Monitor_Set_Number")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Monitor_Set_Number,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Monitor_Set_Weight,Single)
            If (Original_Monitor_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Monitor_Number")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Monitor_Number,String)
            End If
            If (Original_Monitor_SLI_Weight.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Monitor_SLI_Weight.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_Monitor_LLI_Weight.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_Monitor_LLI_Weight.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_Monitor_SLI_Date_Start.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_Monitor_SLI_Date_Start.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_Monitor_LLI_Date_Start.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_Monitor_LLI_Date_Start.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_Monitor_LLI_Not_In_Use.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_Monitor_LLI_Not_In_Use.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_Monitor_SLI_Not_In_Use.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_Monitor_SLI_Not_In_Use.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Monitor_Set_Name As String, ByVal Monitor_Set_Number As String, ByVal Monitor_Set_Weight As Single, ByVal Monitor_Number As String, ByVal Monitor_SLI_Weight As Global.System.Nullable(Of Single), ByVal Monitor_LLI_Weight As Global.System.Nullable(Of Single), ByVal Monitor_SLI_Date_Start As Global.System.Nullable(Of Date), ByVal Monitor_LLI_Date_Start As Global.System.Nullable(Of Date), ByVal Monitor_LLI_Not_In_Use As Global.System.Nullable(Of Boolean), ByVal Monitor_SLI_Not_In_Use As Global.System.Nullable(Of Boolean)) As Integer
            If (Monitor_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Monitor_Set_Name,String)
            End If
            If (Monitor_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Number")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Monitor_Set_Number,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Monitor_Set_Weight,Single)
            If (Monitor_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Number")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Monitor_Number,String)
            End If
            If (Monitor_SLI_Weight.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Monitor_SLI_Weight.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Monitor_LLI_Weight.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Monitor_LLI_Weight.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Monitor_SLI_Date_Start.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Monitor_SLI_Date_Start.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Monitor_LLI_Date_Start.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Monitor_LLI_Date_Start.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Monitor_LLI_Not_In_Use.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Monitor_LLI_Not_In_Use.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Monitor_SLI_Not_In_Use.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Monitor_SLI_Not_In_Use.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Monitor_Set_Weight As Single, ByVal Monitor_SLI_Weight As Global.System.Nullable(Of Single), ByVal Monitor_LLI_Weight As Global.System.Nullable(Of Single), ByVal Monitor_SLI_Date_Start As String, ByVal Monitor_LLI_Date_Start As String, ByVal Monitor_LLI_Not_In_Use As Global.System.Nullable(Of Boolean), ByVal Monitor_SLI_Not_In_Use As Global.System.Nullable(Of Boolean), ByVal Monitor_Set_Name As String, ByVal Monitor_Set_Number As String, ByVal Monitor_Number As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Monitor_Set_Weight,Single)
            If (Monitor_SLI_Weight.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Monitor_SLI_Weight.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Monitor_LLI_Weight.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Monitor_LLI_Weight.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Monitor_SLI_Date_Start Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Monitor_SLI_Date_Start,String)
            End If
            If (Monitor_LLI_Date_Start Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Monitor_LLI_Date_Start,String)
            End If
            If (Monitor_LLI_Not_In_Use.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Monitor_LLI_Not_In_Use.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Monitor_SLI_Not_In_Use.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Monitor_SLI_Not_In_Use.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Monitor_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Monitor_Set_Name,String)
            End If
            If (Monitor_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Number")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Monitor_Set_Number,String)
            End If
            If (Monitor_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Number")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Monitor_Number,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function Update_Not_In_Use(ByVal Monitor_SLI_Not_In_Use As Global.System.Nullable(Of Boolean), ByVal Monitor_Set_Name As String, ByVal Monitor_Set_Number As String, ByVal Monitor_Number As String, ByVal Monitor_SLI_Date_Start As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            If (Monitor_SLI_Not_In_Use.HasValue = true) Then
                command.Parameters(0).Value = CType(Monitor_SLI_Not_In_Use.Value,Boolean)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Monitor_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Name")
            Else
                command.Parameters(1).Value = CType(Monitor_Set_Name,String)
            End If
            If (Monitor_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Number")
            Else
                command.Parameters(2).Value = CType(Monitor_Set_Number,String)
            End If
            If (Monitor_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Number")
            Else
                command.Parameters(3).Value = CType(Monitor_Number,String)
            End If
            If (Monitor_SLI_Date_Start Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(Monitor_SLI_Date_Start,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_Monitor_SetTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_Monitor_Set"
            tableMapping.ColumnMappings.Add("Monitor_Set_Name", "Monitor_Set_Name")
            tableMapping.ColumnMappings.Add("Monitor_Set_Number", "Monitor_Set_Number")
            tableMapping.ColumnMappings.Add("Monitor_Set_Type", "Monitor_Set_Type")
            tableMapping.ColumnMappings.Add("Monitor_Set_Weight", "Monitor_Set_Weight")
            tableMapping.ColumnMappings.Add("Monitor_Set_Purchasing_Date", "Monitor_Set_Purchasing_Date")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[table_Monitor_Set] WHERE (([Monitor_Set_Name] = @Original_Moni"& _ 
                "tor_Set_Name) AND ([Monitor_Set_Number] = @Original_Monitor_Set_Number) AND ([Mo"& _ 
                "nitor_Set_Type] = @Original_Monitor_Set_Type) AND ([Monitor_Set_Weight] = @Origi"& _ 
                "nal_Monitor_Set_Weight) AND ([Monitor_Set_Purchasing_Date] = @Original_Monitor_S"& _ 
                "et_Purchasing_Date))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_Set_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_Set_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_Set_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_Set_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Weight", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_Set_Purchasing_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Purchasing_Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[table_Monitor_Set] ([Monitor_Set_Name], [Monitor_Set_Number], "& _ 
                "[Monitor_Set_Type], [Monitor_Set_Weight], [Monitor_Set_Purchasing_Date]) VALUES "& _ 
                "(@Monitor_Set_Name, @Monitor_Set_Number, @Monitor_Set_Type, @Monitor_Set_Weight,"& _ 
                " @Monitor_Set_Purchasing_Date);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Monitor_Set_Name, Monitor_Set_Number, Mo"& _ 
                "nitor_Set_Type, Monitor_Set_Weight, Monitor_Set_Purchasing_Date FROM table_Monit"& _ 
                "or_Set WHERE (Monitor_Set_Name = @Monitor_Set_Name) AND (Monitor_Set_Number = @M"& _ 
                "onitor_Set_Number)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Purchasing_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Purchasing_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[table_Monitor_Set] SET [Monitor_Set_Name] = @Monitor_Set_Name, [Mon"& _ 
                "itor_Set_Number] = @Monitor_Set_Number, [Monitor_Set_Type] = @Monitor_Set_Type, "& _ 
                "[Monitor_Set_Weight] = @Monitor_Set_Weight, [Monitor_Set_Purchasing_Date] = @Mon"& _ 
                "itor_Set_Purchasing_Date WHERE (([Monitor_Set_Name] = @Original_Monitor_Set_Name"& _ 
                ") AND ([Monitor_Set_Number] = @Original_Monitor_Set_Number) AND ([Monitor_Set_Ty"& _ 
                "pe] = @Original_Monitor_Set_Type) AND ([Monitor_Set_Weight] = @Original_Monitor_"& _ 
                "Set_Weight) AND ([Monitor_Set_Purchasing_Date] = @Original_Monitor_Set_Purchasin"& _ 
                "g_Date));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Monitor_Set_Name, Monitor_Set_Number, Monitor_Set_Type, Monito"& _ 
                "r_Set_Weight, Monitor_Set_Purchasing_Date FROM table_Monitor_Set WHERE (Monitor_"& _ 
                "Set_Name = @Monitor_Set_Name) AND (Monitor_Set_Number = @Monitor_Set_Number)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Monitor_Set_Purchasing_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Purchasing_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_Set_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_Set_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_Set_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_Set_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Weight", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Monitor_Set_Purchasing_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Monitor_Set_Purchasing_Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Monitor_Set_Name, Monitor_Set_Number, Monitor_Set_Type, Monitor_Set_Weight"& _ 
                ", Monitor_Set_Purchasing_Date FROM dbo.table_Monitor_Set"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NAA_DB_EXPDataSet.table_Monitor_SetDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NAA_DB_EXPDataSet.table_Monitor_SetDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NAA_DB_EXPDataSet.table_Monitor_SetDataTable = New NAA_DB_EXPDataSet.table_Monitor_SetDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_Monitor_SetDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_Monitor_Set")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Monitor_Set_Name As String, ByVal Original_Monitor_Set_Number As String, ByVal Original_Monitor_Set_Type As String, ByVal Original_Monitor_Set_Weight As Single, ByVal Original_Monitor_Set_Purchasing_Date As Date) As Integer
            If (Original_Monitor_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Monitor_Set_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Monitor_Set_Name,String)
            End If
            If (Original_Monitor_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Monitor_Set_Number")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Monitor_Set_Number,String)
            End If
            If (Original_Monitor_Set_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Monitor_Set_Type")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Monitor_Set_Type,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Monitor_Set_Weight,Single)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Monitor_Set_Purchasing_Date,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Monitor_Set_Name As String, ByVal Monitor_Set_Number As String, ByVal Monitor_Set_Type As String, ByVal Monitor_Set_Weight As Single, ByVal Monitor_Set_Purchasing_Date As Date) As Integer
            If (Monitor_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Monitor_Set_Name,String)
            End If
            If (Monitor_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Number")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Monitor_Set_Number,String)
            End If
            If (Monitor_Set_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Type")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Monitor_Set_Type,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(Monitor_Set_Weight,Single)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(Monitor_Set_Purchasing_Date,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Monitor_Set_Name As String, ByVal Monitor_Set_Number As String, ByVal Monitor_Set_Type As String, ByVal Monitor_Set_Weight As Single, ByVal Monitor_Set_Purchasing_Date As Date, ByVal Original_Monitor_Set_Name As String, ByVal Original_Monitor_Set_Number As String, ByVal Original_Monitor_Set_Type As String, ByVal Original_Monitor_Set_Weight As Single, ByVal Original_Monitor_Set_Purchasing_Date As Date) As Integer
            If (Monitor_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Monitor_Set_Name,String)
            End If
            If (Monitor_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Number")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Monitor_Set_Number,String)
            End If
            If (Monitor_Set_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Monitor_Set_Type")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Monitor_Set_Type,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Monitor_Set_Weight,Single)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Monitor_Set_Purchasing_Date,Date)
            If (Original_Monitor_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Monitor_Set_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_Monitor_Set_Name,String)
            End If
            If (Original_Monitor_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Monitor_Set_Number")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_Monitor_Set_Number,String)
            End If
            If (Original_Monitor_Set_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Monitor_Set_Type")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Monitor_Set_Type,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_Monitor_Set_Weight,Single)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Monitor_Set_Purchasing_Date,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Monitor_Set_Type As String, ByVal Monitor_Set_Weight As Single, ByVal Monitor_Set_Purchasing_Date As Date, ByVal Original_Monitor_Set_Name As String, ByVal Original_Monitor_Set_Number As String, ByVal Original_Monitor_Set_Type As String, ByVal Original_Monitor_Set_Weight As Single, ByVal Original_Monitor_Set_Purchasing_Date As Date) As Integer
            Return Me.Update(Original_Monitor_Set_Name, Original_Monitor_Set_Number, Monitor_Set_Type, Monitor_Set_Weight, Monitor_Set_Purchasing_Date, Original_Monitor_Set_Name, Original_Monitor_Set_Number, Original_Monitor_Set_Type, Original_Monitor_Set_Weight, Original_Monitor_Set_Purchasing_Date)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_SRMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_SRM"
            tableMapping.ColumnMappings.Add("SRM_Set_Name", "SRM_Set_Name")
            tableMapping.ColumnMappings.Add("SRM_Set_Number", "SRM_Set_Number")
            tableMapping.ColumnMappings.Add("SRM_Set_Weight", "SRM_Set_Weight")
            tableMapping.ColumnMappings.Add("SRM_Number", "SRM_Number")
            tableMapping.ColumnMappings.Add("SRM_SLI_Weight", "SRM_SLI_Weight")
            tableMapping.ColumnMappings.Add("SRM_SLI_Irradiation_Date_1", "SRM_SLI_Irradiation_Date_1")
            tableMapping.ColumnMappings.Add("SRM_SLI_Irradiation_Date_2", "SRM_SLI_Irradiation_Date_2")
            tableMapping.ColumnMappings.Add("SRM_SLI_Irradiation_Date_3", "SRM_SLI_Irradiation_Date_3")
            tableMapping.ColumnMappings.Add("SRM_SLI_Irradiation_Date_4", "SRM_SLI_Irradiation_Date_4")
            tableMapping.ColumnMappings.Add("SRM_SLI_Irradiation_Date_5", "SRM_SLI_Irradiation_Date_5")
            tableMapping.ColumnMappings.Add("SRM_SLI_Irradiation_Date_6", "SRM_SLI_Irradiation_Date_6")
            tableMapping.ColumnMappings.Add("SRM_SLI_Irradiation_Date_7", "SRM_SLI_Irradiation_Date_7")
            tableMapping.ColumnMappings.Add("SRM_SLI_Irradiation_Date_8", "SRM_SLI_Irradiation_Date_8")
            tableMapping.ColumnMappings.Add("SRM_SLI_Irradiation_Date_9", "SRM_SLI_Irradiation_Date_9")
            tableMapping.ColumnMappings.Add("SRM_SLI_Irradiation_Date_10", "SRM_SLI_Irradiation_Date_10")
            tableMapping.ColumnMappings.Add("SRM_SLI_Not_In_Use", "SRM_SLI_Not_In_Use")
            tableMapping.ColumnMappings.Add("SRM_LLI_Weight", "SRM_LLI_Weight")
            tableMapping.ColumnMappings.Add("SRM_LLI_Irradiation_Date_1", "SRM_LLI_Irradiation_Date_1")
            tableMapping.ColumnMappings.Add("SRM_LLI_Irradiation_Date_2", "SRM_LLI_Irradiation_Date_2")
            tableMapping.ColumnMappings.Add("SRM_LLI_Irradiation_Date_3", "SRM_LLI_Irradiation_Date_3")
            tableMapping.ColumnMappings.Add("SRM_LLI_Irradiation_Date_4", "SRM_LLI_Irradiation_Date_4")
            tableMapping.ColumnMappings.Add("SRM_LLI_Irradiation_Date_5", "SRM_LLI_Irradiation_Date_5")
            tableMapping.ColumnMappings.Add("SRM_LLI_Irradiation_Date_6", "SRM_LLI_Irradiation_Date_6")
            tableMapping.ColumnMappings.Add("SRM_LLI_Irradiation_Date_7", "SRM_LLI_Irradiation_Date_7")
            tableMapping.ColumnMappings.Add("SRM_LLI_Irradiation_Date_8", "SRM_LLI_Irradiation_Date_8")
            tableMapping.ColumnMappings.Add("SRM_LLI_Irradiation_Date_9", "SRM_LLI_Irradiation_Date_9")
            tableMapping.ColumnMappings.Add("SRM_LLI_Irradiation_Date_10", "SRM_LLI_Irradiation_Date_10")
            tableMapping.ColumnMappings.Add("SRM_LLI_Not_In_Use", "SRM_LLI_Not_In_Use")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [table_SRM] WHERE (([SRM_Set_Name] = @Original_SRM_Set_Name) AND ([SR"& _ 
                "M_Set_Number] = @Original_SRM_Set_Number) AND ([SRM_Set_Weight] = @Original_SRM_"& _ 
                "Set_Weight) AND ([SRM_Number] = @Original_SRM_Number) AND ((@IsNull_SRM_SLI_Weig"& _ 
                "ht = 1 AND [SRM_SLI_Weight] IS NULL) OR ([SRM_SLI_Weight] = @Original_SRM_SLI_We"& _ 
                "ight)) AND ((@IsNull_SRM_LLI_Weight = 1 AND [SRM_LLI_Weight] IS NULL) OR ([SRM_L"& _ 
                "LI_Weight] = @Original_SRM_LLI_Weight)) AND ((@IsNull_SRM_SLI_Irradiation_Date_1"& _ 
                " = 1 AND [SRM_SLI_Irradiation_Date_1] IS NULL) OR ([SRM_SLI_Irradiation_Date_1] "& _ 
                "= @Original_SRM_SLI_Irradiation_Date_1)) AND ((@IsNull_SRM_SLI_Irradiation_Date_"& _ 
                "10 = 1 AND [SRM_SLI_Irradiation_Date_10] IS NULL) OR ([SRM_SLI_Irradiation_Date_"& _ 
                "10] = @Original_SRM_SLI_Irradiation_Date_10)) AND ((@IsNull_SRM_SLI_Irradiation_"& _ 
                "Date_2 = 1 AND [SRM_SLI_Irradiation_Date_2] IS NULL) OR ([SRM_SLI_Irradiation_Da"& _ 
                "te_2] = @Original_SRM_SLI_Irradiation_Date_2)) AND ((@IsNull_SRM_SLI_Irradiation"& _ 
                "_Date_3 = 1 AND [SRM_SLI_Irradiation_Date_3] IS NULL) OR ([SRM_SLI_Irradiation_D"& _ 
                "ate_3] = @Original_SRM_SLI_Irradiation_Date_3)) AND ((@IsNull_SRM_SLI_Irradiatio"& _ 
                "n_Date_4 = 1 AND [SRM_SLI_Irradiation_Date_4] IS NULL) OR ([SRM_SLI_Irradiation_"& _ 
                "Date_4] = @Original_SRM_SLI_Irradiation_Date_4)) AND ((@IsNull_SRM_SLI_Irradiati"& _ 
                "on_Date_5 = 1 AND [SRM_SLI_Irradiation_Date_5] IS NULL) OR ([SRM_SLI_Irradiation"& _ 
                "_Date_5] = @Original_SRM_SLI_Irradiation_Date_5)) AND ((@IsNull_SRM_SLI_Irradiat"& _ 
                "ion_Date_6 = 1 AND [SRM_SLI_Irradiation_Date_6] IS NULL) OR ([SRM_SLI_Irradiatio"& _ 
                "n_Date_6] = @Original_SRM_SLI_Irradiation_Date_6)) AND ((@IsNull_SRM_SLI_Irradia"& _ 
                "tion_Date_7 = 1 AND [SRM_SLI_Irradiation_Date_7] IS NULL) OR ([SRM_SLI_Irradiati"& _ 
                "on_Date_7] = @Original_SRM_SLI_Irradiation_Date_7)) AND ((@IsNull_SRM_SLI_Irradi"& _ 
                "ation_Date_8 = 1 AND [SRM_SLI_Irradiation_Date_8] IS NULL) OR ([SRM_SLI_Irradiat"& _ 
                "ion_Date_8] = @Original_SRM_SLI_Irradiation_Date_8)) AND ((@IsNull_SRM_SLI_Irrad"& _ 
                "iation_Date_9 = 1 AND [SRM_SLI_Irradiation_Date_9] IS NULL) OR ([SRM_SLI_Irradia"& _ 
                "tion_Date_9] = @Original_SRM_SLI_Irradiation_Date_9)) AND ((@IsNull_SRM_SLI_Not_"& _ 
                "In_Use = 1 AND [SRM_SLI_Not_In_Use] IS NULL) OR ([SRM_SLI_Not_In_Use] = @Origina"& _ 
                "l_SRM_SLI_Not_In_Use)) AND ((@IsNull_SRM_LLI_Irradiation_Date_1 = 1 AND [SRM_LLI"& _ 
                "_Irradiation_Date_1] IS NULL) OR ([SRM_LLI_Irradiation_Date_1] = @Original_SRM_L"& _ 
                "LI_Irradiation_Date_1)) AND ((@IsNull_SRM_LLI_Irradiation_Date_10 = 1 AND [SRM_L"& _ 
                "LI_Irradiation_Date_10] IS NULL) OR ([SRM_LLI_Irradiation_Date_10] = @Original_S"& _ 
                "RM_LLI_Irradiation_Date_10)) AND ((@IsNull_SRM_LLI_Irradiation_Date_2 = 1 AND [S"& _ 
                "RM_LLI_Irradiation_Date_2] IS NULL) OR ([SRM_LLI_Irradiation_Date_2] = @Original"& _ 
                "_SRM_LLI_Irradiation_Date_2)) AND ((@IsNull_SRM_LLI_Irradiation_Date_3 = 1 AND ["& _ 
                "SRM_LLI_Irradiation_Date_3] IS NULL) OR ([SRM_LLI_Irradiation_Date_3] = @Origina"& _ 
                "l_SRM_LLI_Irradiation_Date_3)) AND ((@IsNull_SRM_LLI_Irradiation_Date_4 = 1 AND "& _ 
                "[SRM_LLI_Irradiation_Date_4] IS NULL) OR ([SRM_LLI_Irradiation_Date_4] = @Origin"& _ 
                "al_SRM_LLI_Irradiation_Date_4)) AND ((@IsNull_SRM_LLI_Irradiation_Date_5 = 1 AND"& _ 
                " [SRM_LLI_Irradiation_Date_5] IS NULL) OR ([SRM_LLI_Irradiation_Date_5] = @Origi"& _ 
                "nal_SRM_LLI_Irradiation_Date_5)) AND ((@IsNull_SRM_LLI_Irradiation_Date_6 = 1 AN"& _ 
                "D [SRM_LLI_Irradiation_Date_6] IS NULL) OR ([SRM_LLI_Irradiation_Date_6] = @Orig"& _ 
                "inal_SRM_LLI_Irradiation_Date_6)) AND ((@IsNull_SRM_LLI_Irradiation_Date_7 = 1 A"& _ 
                "ND [SRM_LLI_Irradiation_Date_7] IS NULL) OR ([SRM_LLI_Irradiation_Date_7] = @Ori"& _ 
                "ginal_SRM_LLI_Irradiation_Date_7)) AND ((@IsNull_SRM_LLI_Irradiation_Date_8 = 1 "& _ 
                "AND [SRM_LLI_Irradiation_Date_8] IS NULL) OR ([SRM_LLI_Irradiation_Date_8] = @Or"& _ 
                "iginal_SRM_LLI_Irradiation_Date_8)) AND ((@IsNull_SRM_LLI_Irradiation_Date_9 = 1"& _ 
                " AND [SRM_LLI_Irradiation_Date_9] IS NULL) OR ([SRM_LLI_Irradiation_Date_9] = @O"& _ 
                "riginal_SRM_LLI_Irradiation_Date_9)) AND ((@IsNull_SRM_LLI_Not_In_Use = 1 AND [S"& _ 
                "RM_LLI_Not_In_Use] IS NULL) OR ([SRM_LLI_Not_In_Use] = @Original_SRM_LLI_Not_In_"& _ 
                "Use)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_Set_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_Set_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_Set_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Weight", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_SLI_Weight", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Weight", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_SLI_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Weight", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_LLI_Weight", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Weight", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_LLI_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Weight", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_SLI_Irradiation_Date_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_SLI_Irradiation_Date_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_SLI_Irradiation_Date_10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_SLI_Irradiation_Date_10", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_SLI_Irradiation_Date_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_SLI_Irradiation_Date_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_SLI_Irradiation_Date_3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_SLI_Irradiation_Date_3", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_SLI_Irradiation_Date_4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_SLI_Irradiation_Date_4", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_SLI_Irradiation_Date_5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_SLI_Irradiation_Date_5", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_SLI_Irradiation_Date_6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_SLI_Irradiation_Date_6", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_SLI_Irradiation_Date_7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_SLI_Irradiation_Date_7", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_SLI_Irradiation_Date_8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_SLI_Irradiation_Date_8", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_SLI_Irradiation_Date_9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_SLI_Irradiation_Date_9", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_SLI_Not_In_Use", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Not_In_Use", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_SLI_Not_In_Use", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Not_In_Use", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_LLI_Irradiation_Date_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_LLI_Irradiation_Date_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_LLI_Irradiation_Date_10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_LLI_Irradiation_Date_10", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_LLI_Irradiation_Date_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_LLI_Irradiation_Date_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_LLI_Irradiation_Date_3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_LLI_Irradiation_Date_3", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_LLI_Irradiation_Date_4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_LLI_Irradiation_Date_4", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_LLI_Irradiation_Date_5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_LLI_Irradiation_Date_5", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_LLI_Irradiation_Date_6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_LLI_Irradiation_Date_6", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_LLI_Irradiation_Date_7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_LLI_Irradiation_Date_7", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_LLI_Irradiation_Date_8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_LLI_Irradiation_Date_8", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_LLI_Irradiation_Date_9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_LLI_Irradiation_Date_9", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SRM_LLI_Not_In_Use", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Not_In_Use", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_LLI_Not_In_Use", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Not_In_Use", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [table_SRM] ([SRM_Set_Name], [SRM_Set_Number], [SRM_Set_Weight], [SRM"& _ 
                "_Number], [SRM_SLI_Weight], [SRM_LLI_Weight], [SRM_SLI_Irradiation_Date_1], [SRM"& _ 
                "_SLI_Irradiation_Date_10], [SRM_SLI_Irradiation_Date_2], [SRM_SLI_Irradiation_Da"& _ 
                "te_3], [SRM_SLI_Irradiation_Date_4], [SRM_SLI_Irradiation_Date_5], [SRM_SLI_Irra"& _ 
                "diation_Date_6], [SRM_SLI_Irradiation_Date_7], [SRM_SLI_Irradiation_Date_8], [SR"& _ 
                "M_SLI_Irradiation_Date_9], [SRM_SLI_Not_In_Use], [SRM_LLI_Irradiation_Date_1], ["& _ 
                "SRM_LLI_Irradiation_Date_10], [SRM_LLI_Irradiation_Date_2], [SRM_LLI_Irradiation"& _ 
                "_Date_3], [SRM_LLI_Irradiation_Date_4], [SRM_LLI_Irradiation_Date_5], [SRM_LLI_I"& _ 
                "rradiation_Date_6], [SRM_LLI_Irradiation_Date_7], [SRM_LLI_Irradiation_Date_8], "& _ 
                "[SRM_LLI_Irradiation_Date_9], [SRM_LLI_Not_In_Use]) VALUES (@SRM_Set_Name, @SRM_"& _ 
                "Set_Number, @SRM_Set_Weight, @SRM_Number, @SRM_SLI_Weight, @SRM_LLI_Weight, @SRM"& _ 
                "_SLI_Irradiation_Date_1, @SRM_SLI_Irradiation_Date_10, @SRM_SLI_Irradiation_Date"& _ 
                "_2, @SRM_SLI_Irradiation_Date_3, @SRM_SLI_Irradiation_Date_4, @SRM_SLI_Irradiati"& _ 
                "on_Date_5, @SRM_SLI_Irradiation_Date_6, @SRM_SLI_Irradiation_Date_7, @SRM_SLI_Ir"& _ 
                "radiation_Date_8, @SRM_SLI_Irradiation_Date_9, @SRM_SLI_Not_In_Use, @SRM_LLI_Irr"& _ 
                "adiation_Date_1, @SRM_LLI_Irradiation_Date_10, @SRM_LLI_Irradiation_Date_2, @SRM"& _ 
                "_LLI_Irradiation_Date_3, @SRM_LLI_Irradiation_Date_4, @SRM_LLI_Irradiation_Date_"& _ 
                "5, @SRM_LLI_Irradiation_Date_6, @SRM_LLI_Irradiation_Date_7, @SRM_LLI_Irradiatio"& _ 
                "n_Date_8, @SRM_LLI_Irradiation_Date_9, @SRM_LLI_Not_In_Use);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SRM_Set_Nam"& _ 
                "e, SRM_Set_Number, SRM_Set_Weight, SRM_Number, SRM_SLI_Weight, SRM_LLI_Weight, S"& _ 
                "RM_SLI_Irradiation_Date_1, SRM_SLI_Irradiation_Date_10, SRM_SLI_Irradiation_Date"& _ 
                "_2, SRM_SLI_Irradiation_Date_3, SRM_SLI_Irradiation_Date_4, SRM_SLI_Irradiation_"& _ 
                "Date_5, SRM_SLI_Irradiation_Date_6, SRM_SLI_Irradiation_Date_7, SRM_SLI_Irradiat"& _ 
                "ion_Date_8, SRM_SLI_Irradiation_Date_9, SRM_SLI_Not_In_Use, SRM_LLI_Irradiation_"& _ 
                "Date_1, SRM_LLI_Irradiation_Date_10, SRM_LLI_Irradiation_Date_2, SRM_LLI_Irradia"& _ 
                "tion_Date_3, SRM_LLI_Irradiation_Date_4, SRM_LLI_Irradiation_Date_5, SRM_LLI_Irr"& _ 
                "adiation_Date_6, SRM_LLI_Irradiation_Date_7, SRM_LLI_Irradiation_Date_8, SRM_LLI"& _ 
                "_Irradiation_Date_9, SRM_LLI_Not_In_Use FROM table_SRM WHERE (SRM_Number = @SRM_"& _ 
                "Number) AND (SRM_Set_Name = @SRM_Set_Name) AND (SRM_Set_Number = @SRM_Set_Number"& _ 
                ") ORDER BY SRM_Set_Number"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_10", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_3", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_4", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_5", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_6", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_7", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_8", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_9", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Not_In_Use", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Not_In_Use", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_1", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_10", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_2", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_3", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_4", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_5", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_6", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_7", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_8", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_9", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Not_In_Use", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Not_In_Use", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE    table_SRM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              SRM_Set_Weight = @SRM_Set_Weight, SRM_SLI_W"& _ 
                "eight = @SRM_SLI_Weight, SRM_LLI_Weight = @SRM_LLI_Weight, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "   SRM_SLI_Irradiation_Date_1 = @SRM_SLI_Irradiation_Date_1, SRM_SLI_Irradiation"& _ 
                "_Date_2 = @SRM_SLI_Irradiation_Date_2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      SRM_SLI_Irradiati"& _ 
                "on_Date_3 = @SRM_SLI_Irradiation_Date_3, SRM_SLI_Irradiation_Date_4 = @SRM_SLI_I"& _ 
                "rradiation_Date_4, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      SRM_SLI_Irradiation_Date_5 = @SRM_SLI"& _ 
                "_Irradiation_Date_5, SRM_SLI_Irradiation_Date_6 = @SRM_SLI_Irradiation_Date_6, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      SRM_SLI_Irradiation_Date_7 = @SRM_SLI_Irradiation_Date_7,"& _ 
                " SRM_SLI_Irradiation_Date_8 = @SRM_SLI_Irradiation_Date_8, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "   SRM_SLI_Irradiation_Date_9 = @SRM_SLI_Irradiation_Date_9, SRM_SLI_Irradiation"& _ 
                "_Date_10 = @SRM_SLI_Irradiation_Date_10, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      SRM_SLI_Not_In_"& _ 
                "Use = @SRM_SLI_Not_In_Use, SRM_LLI_Irradiation_Date_1 = @SRM_LLI_Irradiation_Dat"& _ 
                "e_1, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      SRM_LLI_Irradiation_Date_2 = @SRM_LLI_Irradiation_D"& _ 
                "ate_2, SRM_LLI_Irradiation_Date_3 = @SRM_LLI_Irradiation_Date_3, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "         SRM_LLI_Irradiation_Date_4 = @SRM_LLI_Irradiation_Date_4, SRM_LLI_Irrad"& _ 
                "iation_Date_5 = @SRM_LLI_Irradiation_Date_5, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      SRM_LLI_Irr"& _ 
                "adiation_Date_6 = @SRM_LLI_Irradiation_Date_6, SRM_LLI_Irradiation_Date_7 = @SRM"& _ 
                "_LLI_Irradiation_Date_7, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      SRM_LLI_Irradiation_Date_8 = @S"& _ 
                "RM_LLI_Irradiation_Date_8, SRM_LLI_Irradiation_Date_9 = @SRM_LLI_Irradiation_Dat"& _ 
                "e_9, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      SRM_LLI_Irradiation_Date_10 = @SRM_LLI_Irradiation_"& _ 
                "Date_10, SRM_LLI_Not_In_Use = @SRM_LLI_Not_In_Use"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (SRM_Set_Name = @SR"& _ 
                "M_Set_Name) AND (SRM_Set_Number = @SRM_Set_Number) AND (SRM_Number = @SRM_Number"& _ 
                ");    "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SRM_Set_Name, SRM_Set_Number, SRM_Set_Weight, SRM_Number, SRM_SLI"& _ 
                "_Weight, SRM_LLI_Weight, SRM_SLI_Irradiation_Date_1, SRM_SLI_Irradiation_Date_10"& _ 
                ", SRM_SLI_Irradiation_Date_2, SRM_SLI_Irradiation_Date_3, SRM_SLI_Irradiation_Da"& _ 
                "te_4, SRM_SLI_Irradiation_Date_5, SRM_SLI_Irradiation_Date_6, SRM_SLI_Irradiatio"& _ 
                "n_Date_7, SRM_SLI_Irradiation_Date_8, SRM_SLI_Irradiation_Date_9, SRM_SLI_Not_In"& _ 
                "_Use, SRM_LLI_Irradiation_Date_1, SRM_LLI_Irradiation_Date_10, SRM_LLI_Irradiati"& _ 
                "on_Date_2, SRM_LLI_Irradiation_Date_3, SRM_LLI_Irradiation_Date_4, SRM_LLI_Irrad"& _ 
                "iation_Date_5, SRM_LLI_Irradiation_Date_6, SRM_LLI_Irradiation_Date_7, SRM_LLI_I"& _ 
                "rradiation_Date_8, SRM_LLI_Irradiation_Date_9, SRM_LLI_Not_In_Use FROM table_SRM"& _ 
                " WHERE (SRM_Number = @SRM_Number) AND (SRM_Set_Name = @SRM_Set_Name) AND (SRM_Se"& _ 
                "t_Number = @SRM_Set_Number) ORDER BY SRM_Set_Number"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Weight", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Weight", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Weight", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_1", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_2", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_3", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_4", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_5", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_6", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_7", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_8", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_9", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Irradiation_Date_10", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Irradiation_Date_10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_SLI_Not_In_Use", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_SLI_Not_In_Use", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_1", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_2", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_3", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_4", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_5", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_6", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_7", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_8", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_9", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Irradiation_Date_10", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Irradiation_Date_10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_LLI_Not_In_Use", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_LLI_Not_In_Use", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Name", Global.System.Data.SqlDbType.NVarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Number", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Number", Global.System.Data.SqlDbType.NVarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SRM_Set_Name, SRM_Set_Number, SRM_Set_Weight, SRM_Number, SRM_SLI_Weight, "& _ 
                "SRM_LLI_Weight, SRM_SLI_Irradiation_Date_1, SRM_SLI_Irradiation_Date_10, SRM_SLI"& _ 
                "_Irradiation_Date_2, SRM_SLI_Irradiation_Date_3, SRM_SLI_Irradiation_Date_4, SRM"& _ 
                "_SLI_Irradiation_Date_5, SRM_SLI_Irradiation_Date_6, SRM_SLI_Irradiation_Date_7,"& _ 
                " SRM_SLI_Irradiation_Date_8, SRM_SLI_Irradiation_Date_9, SRM_SLI_Not_In_Use, SRM"& _ 
                "_LLI_Irradiation_Date_1, SRM_LLI_Irradiation_Date_10, SRM_LLI_Irradiation_Date_2"& _ 
                ", SRM_LLI_Irradiation_Date_3, SRM_LLI_Irradiation_Date_4, SRM_LLI_Irradiation_Da"& _ 
                "te_5, SRM_LLI_Irradiation_Date_6, SRM_LLI_Irradiation_Date_7, SRM_LLI_Irradiatio"& _ 
                "n_Date_8, SRM_LLI_Irradiation_Date_9, SRM_LLI_Not_In_Use FROM table_SRM WHERE (S"& _ 
                "RM_Set_Name = @SRM_Set_Name) AND (SRM_Set_Number = @SRM_Set_Number) ORDER BY SRM"& _ 
                "_Set_Number"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Name", Global.System.Data.SqlDbType.NVarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Number", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT SRM_Set_Name, SRM_LLI_Irradiation_Date_1, SRM_LLI_Irradiation_Date_10, SRM"& _ 
                "_LLI_Irradiation_Date_2, SRM_LLI_Irradiation_Date_3, SRM_LLI_Irradiation_Date_4,"& _ 
                " SRM_LLI_Irradiation_Date_5, SRM_LLI_Irradiation_Date_6, SRM_LLI_Irradiation_Dat"& _ 
                "e_7, SRM_LLI_Irradiation_Date_8, SRM_LLI_Irradiation_Date_9, SRM_LLI_Not_In_Use "& _ 
                "FROM table_SRM WHERE (SRM_Number = - 1)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT     SRM_Set_Name, SRM_Set_Number, SRM_Set_Weight, SRM_Number, SRM_LLI_Weig"& _ 
                "ht, SRM_LLI_Irradiation_Date_1, SRM_LLI_Irradiation_Date_10, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "     SRM_LLI_Irradiation_Date_2, SRM_LLI_Irradiation_Date_3, SRM_LLI_Irradiation"& _ 
                "_Date_4, SRM_LLI_Irradiation_Date_5, SRM_LLI_Irradiation_Date_6, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "         SRM_LLI_Irradiation_Date_7, SRM_LLI_Irradiation_Date_8, SRM_LLI_Irradia"& _ 
                "tion_Date_9, SRM_LLI_Not_In_Use"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         table_SRM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (SRM_Set_Name"& _ 
                " = @SRM_Set_Name) AND (SRM_Set_Number = @SRM_Set_Number) AND (SRM_LLI_Not_In_Use"& _ 
                " = 0 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      SRM_LLI_Not_In_Use IS NULL)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY SRM_Number"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Name", Global.System.Data.SqlDbType.NVarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Number", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT     SRM_Set_Name, SRM_Set_Number, SRM_Set_Weight, SRM_Number, SRM_SLI_Weig"& _ 
                "ht, SRM_SLI_Irradiation_Date_1, SRM_SLI_Irradiation_Date_10, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "     SRM_SLI_Irradiation_Date_2, SRM_SLI_Irradiation_Date_3, SRM_SLI_Irradiation"& _ 
                "_Date_4, SRM_SLI_Irradiation_Date_5, SRM_SLI_Irradiation_Date_6, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "         SRM_SLI_Irradiation_Date_7, SRM_SLI_Irradiation_Date_8, SRM_SLI_Irradia"& _ 
                "tion_Date_9, SRM_SLI_Not_In_Use"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         table_SRM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (SRM_Set_Name"& _ 
                " = @SRM_Set_Name) AND (SRM_Set_Number = @SRM_Set_Number) AND (SRM_SLI_Not_In_Use"& _ 
                " = 0 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      SRM_SLI_Not_In_Use IS NULL)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY SRM_Number"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Name", Global.System.Data.SqlDbType.NVarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Number", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NAA_DB_EXPDataSet.table_SRMDataTable, ByVal SRM_Set_Name As String, ByVal SRM_Set_Number As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SRM_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Name")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SRM_Set_Name,String)
            End If
            If (SRM_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Number")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SRM_Set_Number,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SRM_Set_Name As String, ByVal SRM_Set_Number As String) As NAA_DB_EXPDataSet.table_SRMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SRM_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Name")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SRM_Set_Name,String)
            End If
            If (SRM_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Number")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SRM_Set_Number,String)
            End If
            Dim dataTable As NAA_DB_EXPDataSet.table_SRMDataTable = New NAA_DB_EXPDataSet.table_SRMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function Fill_Empty(ByVal dataTable As NAA_DB_EXPDataSet.table_SRMDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetData_Empty() As NAA_DB_EXPDataSet.table_SRMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As NAA_DB_EXPDataSet.table_SRMDataTable = New NAA_DB_EXPDataSet.table_SRMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function Fill_In_Use_LLI(ByVal dataTable As NAA_DB_EXPDataSet.table_SRMDataTable, ByVal SRM_Set_Name As String, ByVal SRM_Set_Number As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (SRM_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Name")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SRM_Set_Name,String)
            End If
            If (SRM_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Number")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SRM_Set_Number,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetData_In_Use_LLI(ByVal SRM_Set_Name As String, ByVal SRM_Set_Number As String) As NAA_DB_EXPDataSet.table_SRMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (SRM_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Name")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SRM_Set_Name,String)
            End If
            If (SRM_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Number")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SRM_Set_Number,String)
            End If
            Dim dataTable As NAA_DB_EXPDataSet.table_SRMDataTable = New NAA_DB_EXPDataSet.table_SRMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function Fill_In_Use_SLI(ByVal dataTable As NAA_DB_EXPDataSet.table_SRMDataTable, ByVal SRM_Set_Name As String, ByVal SRM_Set_Number As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (SRM_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Name")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SRM_Set_Name,String)
            End If
            If (SRM_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Number")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SRM_Set_Number,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetData_In_Use_SLI(ByVal SRM_Set_Name As String, ByVal SRM_Set_Number As String) As NAA_DB_EXPDataSet.table_SRMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (SRM_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Name")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SRM_Set_Name,String)
            End If
            If (SRM_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Number")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SRM_Set_Number,String)
            End If
            Dim dataTable As NAA_DB_EXPDataSet.table_SRMDataTable = New NAA_DB_EXPDataSet.table_SRMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_SRMDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_SRM")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_SRM_Set_Name As String,  _
                    ByVal Original_SRM_Set_Number As String,  _
                    ByVal Original_SRM_Set_Weight As Single,  _
                    ByVal Original_SRM_Number As String,  _
                    ByVal Original_SRM_SLI_Weight As Global.System.Nullable(Of Single),  _
                    ByVal Original_SRM_LLI_Weight As Global.System.Nullable(Of Single),  _
                    ByVal Original_SRM_SLI_Irradiation_Date_1 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_SLI_Irradiation_Date_10 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_SLI_Irradiation_Date_2 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_SLI_Irradiation_Date_3 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_SLI_Irradiation_Date_4 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_SLI_Irradiation_Date_5 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_SLI_Irradiation_Date_6 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_SLI_Irradiation_Date_7 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_SLI_Irradiation_Date_8 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_SLI_Irradiation_Date_9 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_SLI_Not_In_Use As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SRM_LLI_Irradiation_Date_1 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_LLI_Irradiation_Date_10 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_LLI_Irradiation_Date_2 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_LLI_Irradiation_Date_3 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_LLI_Irradiation_Date_4 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_LLI_Irradiation_Date_5 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_LLI_Irradiation_Date_6 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_LLI_Irradiation_Date_7 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_LLI_Irradiation_Date_8 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_LLI_Irradiation_Date_9 As Global.System.Nullable(Of Date),  _
                    ByVal Original_SRM_LLI_Not_In_Use As Global.System.Nullable(Of Boolean)) As Integer
            If (Original_SRM_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SRM_Set_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SRM_Set_Name,String)
            End If
            If (Original_SRM_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SRM_Set_Number")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_SRM_Set_Number,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_SRM_Set_Weight,Single)
            If (Original_SRM_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SRM_Number")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_SRM_Number,String)
            End If
            If (Original_SRM_SLI_Weight.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_SRM_SLI_Weight.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_LLI_Weight.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_SRM_LLI_Weight.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_SLI_Irradiation_Date_1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_SRM_SLI_Irradiation_Date_1.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_SLI_Irradiation_Date_10.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_SRM_SLI_Irradiation_Date_10.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_SLI_Irradiation_Date_2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_SRM_SLI_Irradiation_Date_2.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_SLI_Irradiation_Date_3.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_SRM_SLI_Irradiation_Date_3.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_SLI_Irradiation_Date_4.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_SRM_SLI_Irradiation_Date_4.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_SLI_Irradiation_Date_5.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_SRM_SLI_Irradiation_Date_5.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_SLI_Irradiation_Date_6.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_SRM_SLI_Irradiation_Date_6.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_SLI_Irradiation_Date_7.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_SRM_SLI_Irradiation_Date_7.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_SLI_Irradiation_Date_8.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_SRM_SLI_Irradiation_Date_8.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_SLI_Irradiation_Date_9.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_SRM_SLI_Irradiation_Date_9.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_SLI_Not_In_Use.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_SRM_SLI_Not_In_Use.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_LLI_Irradiation_Date_1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_SRM_LLI_Irradiation_Date_1.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_LLI_Irradiation_Date_10.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_SRM_LLI_Irradiation_Date_10.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_LLI_Irradiation_Date_2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_SRM_LLI_Irradiation_Date_2.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_LLI_Irradiation_Date_3.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_SRM_LLI_Irradiation_Date_3.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_LLI_Irradiation_Date_4.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_SRM_LLI_Irradiation_Date_4.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_LLI_Irradiation_Date_5.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_SRM_LLI_Irradiation_Date_5.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_LLI_Irradiation_Date_6.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_SRM_LLI_Irradiation_Date_6.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_LLI_Irradiation_Date_7.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_SRM_LLI_Irradiation_Date_7.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_LLI_Irradiation_Date_8.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_SRM_LLI_Irradiation_Date_8.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_LLI_Irradiation_Date_9.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_SRM_LLI_Irradiation_Date_9.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_SRM_LLI_Not_In_Use.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_SRM_LLI_Not_In_Use.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal SRM_Set_Name As String,  _
                    ByVal SRM_Set_Number As String,  _
                    ByVal SRM_Set_Weight As Single,  _
                    ByVal SRM_Number As String,  _
                    ByVal SRM_SLI_Weight As Global.System.Nullable(Of Single),  _
                    ByVal SRM_LLI_Weight As Global.System.Nullable(Of Single),  _
                    ByVal SRM_SLI_Irradiation_Date_1 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_SLI_Irradiation_Date_10 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_SLI_Irradiation_Date_2 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_SLI_Irradiation_Date_3 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_SLI_Irradiation_Date_4 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_SLI_Irradiation_Date_5 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_SLI_Irradiation_Date_6 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_SLI_Irradiation_Date_7 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_SLI_Irradiation_Date_8 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_SLI_Irradiation_Date_9 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_SLI_Not_In_Use As Global.System.Nullable(Of Boolean),  _
                    ByVal SRM_LLI_Irradiation_Date_1 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_LLI_Irradiation_Date_10 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_LLI_Irradiation_Date_2 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_LLI_Irradiation_Date_3 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_LLI_Irradiation_Date_4 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_LLI_Irradiation_Date_5 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_LLI_Irradiation_Date_6 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_LLI_Irradiation_Date_7 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_LLI_Irradiation_Date_8 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_LLI_Irradiation_Date_9 As Global.System.Nullable(Of Date),  _
                    ByVal SRM_LLI_Not_In_Use As Global.System.Nullable(Of Boolean)) As Integer
            If (SRM_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SRM_Set_Name,String)
            End If
            If (SRM_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Number")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SRM_Set_Number,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(SRM_Set_Weight,Single)
            If (SRM_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Number")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SRM_Number,String)
            End If
            If (SRM_SLI_Weight.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(SRM_SLI_Weight.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SRM_LLI_Weight.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(SRM_LLI_Weight.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (SRM_SLI_Irradiation_Date_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(SRM_SLI_Irradiation_Date_1.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (SRM_SLI_Irradiation_Date_10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SRM_SLI_Irradiation_Date_10.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (SRM_SLI_Irradiation_Date_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SRM_SLI_Irradiation_Date_2.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (SRM_SLI_Irradiation_Date_3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(SRM_SLI_Irradiation_Date_3.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (SRM_SLI_Irradiation_Date_4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(SRM_SLI_Irradiation_Date_4.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (SRM_SLI_Irradiation_Date_5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SRM_SLI_Irradiation_Date_5.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (SRM_SLI_Irradiation_Date_6.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(SRM_SLI_Irradiation_Date_6.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (SRM_SLI_Irradiation_Date_7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SRM_SLI_Irradiation_Date_7.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (SRM_SLI_Irradiation_Date_8.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(SRM_SLI_Irradiation_Date_8.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (SRM_SLI_Irradiation_Date_9.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(SRM_SLI_Irradiation_Date_9.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (SRM_SLI_Not_In_Use.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(SRM_SLI_Not_In_Use.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (SRM_LLI_Irradiation_Date_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(SRM_LLI_Irradiation_Date_1.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (SRM_LLI_Irradiation_Date_10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(SRM_LLI_Irradiation_Date_10.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (SRM_LLI_Irradiation_Date_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(SRM_LLI_Irradiation_Date_2.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (SRM_LLI_Irradiation_Date_3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(SRM_LLI_Irradiation_Date_3.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (SRM_LLI_Irradiation_Date_4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(SRM_LLI_Irradiation_Date_4.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (SRM_LLI_Irradiation_Date_5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(SRM_LLI_Irradiation_Date_5.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (SRM_LLI_Irradiation_Date_6.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(SRM_LLI_Irradiation_Date_6.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (SRM_LLI_Irradiation_Date_7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(SRM_LLI_Irradiation_Date_7.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (SRM_LLI_Irradiation_Date_8.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(SRM_LLI_Irradiation_Date_8.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (SRM_LLI_Irradiation_Date_9.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(SRM_LLI_Irradiation_Date_9.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (SRM_LLI_Not_In_Use.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(SRM_LLI_Not_In_Use.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SRM_Set_Weight As Single,  _
                    ByVal SRM_SLI_Weight As Global.System.Nullable(Of Single),  _
                    ByVal SRM_LLI_Weight As Global.System.Nullable(Of Single),  _
                    ByVal SRM_SLI_Irradiation_Date_1 As String,  _
                    ByVal SRM_SLI_Irradiation_Date_2 As String,  _
                    ByVal SRM_SLI_Irradiation_Date_3 As String,  _
                    ByVal SRM_SLI_Irradiation_Date_4 As String,  _
                    ByVal SRM_SLI_Irradiation_Date_5 As String,  _
                    ByVal SRM_SLI_Irradiation_Date_6 As String,  _
                    ByVal SRM_SLI_Irradiation_Date_7 As String,  _
                    ByVal SRM_SLI_Irradiation_Date_8 As String,  _
                    ByVal SRM_SLI_Irradiation_Date_9 As String,  _
                    ByVal SRM_SLI_Irradiation_Date_10 As String,  _
                    ByVal SRM_SLI_Not_In_Use As Global.System.Nullable(Of Boolean),  _
                    ByVal SRM_LLI_Irradiation_Date_1 As String,  _
                    ByVal SRM_LLI_Irradiation_Date_2 As String,  _
                    ByVal SRM_LLI_Irradiation_Date_3 As String,  _
                    ByVal SRM_LLI_Irradiation_Date_4 As String,  _
                    ByVal SRM_LLI_Irradiation_Date_5 As String,  _
                    ByVal SRM_LLI_Irradiation_Date_6 As String,  _
                    ByVal SRM_LLI_Irradiation_Date_7 As String,  _
                    ByVal SRM_LLI_Irradiation_Date_8 As String,  _
                    ByVal SRM_LLI_Irradiation_Date_9 As String,  _
                    ByVal SRM_LLI_Irradiation_Date_10 As String,  _
                    ByVal SRM_LLI_Not_In_Use As Global.System.Nullable(Of Boolean),  _
                    ByVal SRM_Set_Name As String,  _
                    ByVal SRM_Set_Number As String,  _
                    ByVal SRM_Number As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SRM_Set_Weight,Single)
            If (SRM_SLI_Weight.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SRM_SLI_Weight.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (SRM_LLI_Weight.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SRM_LLI_Weight.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (SRM_SLI_Irradiation_Date_1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SRM_SLI_Irradiation_Date_1,String)
            End If
            If (SRM_SLI_Irradiation_Date_2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(SRM_SLI_Irradiation_Date_2,String)
            End If
            If (SRM_SLI_Irradiation_Date_3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SRM_SLI_Irradiation_Date_3,String)
            End If
            If (SRM_SLI_Irradiation_Date_4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(SRM_SLI_Irradiation_Date_4,String)
            End If
            If (SRM_SLI_Irradiation_Date_5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SRM_SLI_Irradiation_Date_5,String)
            End If
            If (SRM_SLI_Irradiation_Date_6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(SRM_SLI_Irradiation_Date_6,String)
            End If
            If (SRM_SLI_Irradiation_Date_7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(SRM_SLI_Irradiation_Date_7,String)
            End If
            If (SRM_SLI_Irradiation_Date_8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(SRM_SLI_Irradiation_Date_8,String)
            End If
            If (SRM_SLI_Irradiation_Date_9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(SRM_SLI_Irradiation_Date_9,String)
            End If
            If (SRM_SLI_Irradiation_Date_10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(SRM_SLI_Irradiation_Date_10,String)
            End If
            If (SRM_SLI_Not_In_Use.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(SRM_SLI_Not_In_Use.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (SRM_LLI_Irradiation_Date_1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(SRM_LLI_Irradiation_Date_1,String)
            End If
            If (SRM_LLI_Irradiation_Date_2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(SRM_LLI_Irradiation_Date_2,String)
            End If
            If (SRM_LLI_Irradiation_Date_3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(SRM_LLI_Irradiation_Date_3,String)
            End If
            If (SRM_LLI_Irradiation_Date_4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(SRM_LLI_Irradiation_Date_4,String)
            End If
            If (SRM_LLI_Irradiation_Date_5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(SRM_LLI_Irradiation_Date_5,String)
            End If
            If (SRM_LLI_Irradiation_Date_6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(SRM_LLI_Irradiation_Date_6,String)
            End If
            If (SRM_LLI_Irradiation_Date_7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(SRM_LLI_Irradiation_Date_7,String)
            End If
            If (SRM_LLI_Irradiation_Date_8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(SRM_LLI_Irradiation_Date_8,String)
            End If
            If (SRM_LLI_Irradiation_Date_9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(SRM_LLI_Irradiation_Date_9,String)
            End If
            If (SRM_LLI_Irradiation_Date_10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(SRM_LLI_Irradiation_Date_10,String)
            End If
            If (SRM_LLI_Not_In_Use.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(SRM_LLI_Not_In_Use.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (SRM_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(SRM_Set_Name,String)
            End If
            If (SRM_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Number")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(SRM_Set_Number,String)
            End If
            If (SRM_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Number")
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(SRM_Number,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_SRM_SetTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_SRM_Set"
            tableMapping.ColumnMappings.Add("SRM_Set_Name", "SRM_Set_Name")
            tableMapping.ColumnMappings.Add("SRM_Set_Number", "SRM_Set_Number")
            tableMapping.ColumnMappings.Add("SRM_Set_Type", "SRM_Set_Type")
            tableMapping.ColumnMappings.Add("SRM_Set_Weight", "SRM_Set_Weight")
            tableMapping.ColumnMappings.Add("SRM_Set_Purchasing_Date", "SRM_Set_Purchasing_Date")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[table_SRM_Set] WHERE (([SRM_Set_Name] = @Original_SRM_Set_Name"& _ 
                ") AND ([SRM_Set_Number] = @Original_SRM_Set_Number) AND ([SRM_Set_Type] = @Origi"& _ 
                "nal_SRM_Set_Type) AND ([SRM_Set_Weight] = @Original_SRM_Set_Weight) AND ([SRM_Se"& _ 
                "t_Purchasing_Date] = @Original_SRM_Set_Purchasing_Date))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_Set_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_Set_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_Set_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_Set_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Weight", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_Set_Purchasing_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Purchasing_Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[table_SRM_Set] ([SRM_Set_Name], [SRM_Set_Number], [SRM_Set_Typ"& _ 
                "e], [SRM_Set_Weight], [SRM_Set_Purchasing_Date]) VALUES (@SRM_Set_Name, @SRM_Set"& _ 
                "_Number, @SRM_Set_Type, @SRM_Set_Weight, @SRM_Set_Purchasing_Date);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SRM_"& _ 
                "Set_Name, SRM_Set_Number, SRM_Set_Type, SRM_Set_Weight, SRM_Set_Purchasing_Date "& _ 
                "FROM table_SRM_Set WHERE (SRM_Set_Name = @SRM_Set_Name) AND (SRM_Set_Number = @S"& _ 
                "RM_Set_Number)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Purchasing_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Purchasing_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[table_SRM_Set] SET [SRM_Set_Name] = @SRM_Set_Name, [SRM_Set_Number]"& _ 
                " = @SRM_Set_Number, [SRM_Set_Type] = @SRM_Set_Type, [SRM_Set_Weight] = @SRM_Set_"& _ 
                "Weight, [SRM_Set_Purchasing_Date] = @SRM_Set_Purchasing_Date WHERE (([SRM_Set_Na"& _ 
                "me] = @Original_SRM_Set_Name) AND ([SRM_Set_Number] = @Original_SRM_Set_Number) "& _ 
                "AND ([SRM_Set_Type] = @Original_SRM_Set_Type) AND ([SRM_Set_Weight] = @Original_"& _ 
                "SRM_Set_Weight) AND ([SRM_Set_Purchasing_Date] = @Original_SRM_Set_Purchasing_Da"& _ 
                "te));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SRM_Set_Name, SRM_Set_Number, SRM_Set_Type, SRM_Set_Weight, SRM_Se"& _ 
                "t_Purchasing_Date FROM table_SRM_Set WHERE (SRM_Set_Name = @SRM_Set_Name) AND (S"& _ 
                "RM_Set_Number = @SRM_Set_Number)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Number", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SRM_Set_Purchasing_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Purchasing_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_Set_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_Set_Number", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Number", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_Set_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_Set_Weight", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Weight", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SRM_Set_Purchasing_Date", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SRM_Set_Purchasing_Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SRM_Set_Name, SRM_Set_Number, SRM_Set_Type, SRM_Set_Weight, SRM_Set_Purcha"& _ 
                "sing_Date FROM dbo.table_SRM_Set"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NAA_DB_EXPDataSet.table_SRM_SetDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NAA_DB_EXPDataSet.table_SRM_SetDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NAA_DB_EXPDataSet.table_SRM_SetDataTable = New NAA_DB_EXPDataSet.table_SRM_SetDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_SRM_SetDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_SRM_Set")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SRM_Set_Name As String, ByVal Original_SRM_Set_Number As String, ByVal Original_SRM_Set_Type As String, ByVal Original_SRM_Set_Weight As Single, ByVal Original_SRM_Set_Purchasing_Date As Date) As Integer
            If (Original_SRM_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SRM_Set_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SRM_Set_Name,String)
            End If
            If (Original_SRM_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SRM_Set_Number")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_SRM_Set_Number,String)
            End If
            If (Original_SRM_Set_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SRM_Set_Type")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_SRM_Set_Type,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_SRM_Set_Weight,Single)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SRM_Set_Purchasing_Date,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SRM_Set_Name As String, ByVal SRM_Set_Number As String, ByVal SRM_Set_Type As String, ByVal SRM_Set_Weight As Single, ByVal SRM_Set_Purchasing_Date As Date) As Integer
            If (SRM_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SRM_Set_Name,String)
            End If
            If (SRM_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Number")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SRM_Set_Number,String)
            End If
            If (SRM_Set_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Type")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SRM_Set_Type,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(SRM_Set_Weight,Single)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(SRM_Set_Purchasing_Date,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SRM_Set_Name As String, ByVal SRM_Set_Number As String, ByVal SRM_Set_Type As String, ByVal SRM_Set_Weight As Single, ByVal SRM_Set_Purchasing_Date As Date, ByVal Original_SRM_Set_Name As String, ByVal Original_SRM_Set_Number As String, ByVal Original_SRM_Set_Type As String, ByVal Original_SRM_Set_Weight As Single, ByVal Original_SRM_Set_Purchasing_Date As Date) As Integer
            If (SRM_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SRM_Set_Name,String)
            End If
            If (SRM_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Number")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SRM_Set_Number,String)
            End If
            If (SRM_Set_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SRM_Set_Type")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SRM_Set_Type,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SRM_Set_Weight,Single)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(SRM_Set_Purchasing_Date,Date)
            If (Original_SRM_Set_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SRM_Set_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_SRM_Set_Name,String)
            End If
            If (Original_SRM_Set_Number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SRM_Set_Number")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_SRM_Set_Number,String)
            End If
            If (Original_SRM_Set_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SRM_Set_Type")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_SRM_Set_Type,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_SRM_Set_Weight,Single)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_SRM_Set_Purchasing_Date,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SRM_Set_Type As String, ByVal SRM_Set_Weight As Single, ByVal SRM_Set_Purchasing_Date As Date, ByVal Original_SRM_Set_Name As String, ByVal Original_SRM_Set_Number As String, ByVal Original_SRM_Set_Type As String, ByVal Original_SRM_Set_Weight As Single, ByVal Original_SRM_Set_Purchasing_Date As Date) As Integer
            Return Me.Update(Original_SRM_Set_Name, Original_SRM_Set_Number, SRM_Set_Type, SRM_Set_Weight, SRM_Set_Purchasing_Date, Original_SRM_Set_Name, Original_SRM_Set_Number, Original_SRM_Set_Type, Original_SRM_Set_Weight, Original_SRM_Set_Purchasing_Date)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class table_Sample_NAA_Results_TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "table_Sample_NAA_Results"
            tableMapping.ColumnMappings.Add("R_U_Detection_Limit", "R_U_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_U_Error", "R_U_Error")
            tableMapping.ColumnMappings.Add("R_U_Concentaration", "R_U_Concentaration")
            tableMapping.ColumnMappings.Add("R_U_Fact", "R_U_Fact")
            tableMapping.ColumnMappings.Add("R_Th_Detection_Limit", "R_Th_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Th_Error", "R_Th_Error")
            tableMapping.ColumnMappings.Add("R_Th_Concentaration", "R_Th_Concentaration")
            tableMapping.ColumnMappings.Add("R_Th_Fact", "R_Th_Fact")
            tableMapping.ColumnMappings.Add("R_Hg_Detection_Limit", "R_Hg_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Hg_Error", "R_Hg_Error")
            tableMapping.ColumnMappings.Add("R_Hg_Concentaration", "R_Hg_Concentaration")
            tableMapping.ColumnMappings.Add("R_Hg_Fact", "R_Hg_Fact")
            tableMapping.ColumnMappings.Add("R_Au_Detection_Limit", "R_Au_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Au_Error", "R_Au_Error")
            tableMapping.ColumnMappings.Add("R_Au_Concentaration", "R_Au_Concentaration")
            tableMapping.ColumnMappings.Add("R_Au_Fact", "R_Au_Fact")
            tableMapping.ColumnMappings.Add("R_Pt_Detection_Limit", "R_Pt_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Pt_Error", "R_Pt_Error")
            tableMapping.ColumnMappings.Add("R_Pt_Concentaration", "R_Pt_Concentaration")
            tableMapping.ColumnMappings.Add("R_Pt_Fact", "R_Pt_Fact")
            tableMapping.ColumnMappings.Add("R_Ir_Detection_Limit", "R_Ir_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Ir_Error", "R_Ir_Error")
            tableMapping.ColumnMappings.Add("R_Ir_Concentaration", "R_Ir_Concentaration")
            tableMapping.ColumnMappings.Add("R_Ir_Fact", "R_Ir_Fact")
            tableMapping.ColumnMappings.Add("R_Re_Detection_Limit", "R_Re_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Re_Error", "R_Re_Error")
            tableMapping.ColumnMappings.Add("R_Re_Concentaration", "R_Re_Concentaration")
            tableMapping.ColumnMappings.Add("R_Re_Fact", "R_Re_Fact")
            tableMapping.ColumnMappings.Add("R_W_Detection_Limit", "R_W_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_W_Error", "R_W_Error")
            tableMapping.ColumnMappings.Add("R_W_Concentaration", "R_W_Concentaration")
            tableMapping.ColumnMappings.Add("R_W_Fact", "R_W_Fact")
            tableMapping.ColumnMappings.Add("R_Ta_Detection_Limit", "R_Ta_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Ta_Error", "R_Ta_Error")
            tableMapping.ColumnMappings.Add("R_Ta_Concentaration", "R_Ta_Concentaration")
            tableMapping.ColumnMappings.Add("R_Ta_Fact", "R_Ta_Fact")
            tableMapping.ColumnMappings.Add("R_Hf_Detection_Limit", "R_Hf_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Hf_Error", "R_Hf_Error")
            tableMapping.ColumnMappings.Add("R_Hf_Concentaration", "R_Hf_Concentaration")
            tableMapping.ColumnMappings.Add("R_Hf_Fact", "R_Hf_Fact")
            tableMapping.ColumnMappings.Add("R_Lu_Detection_Limit", "R_Lu_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Lu_Error", "R_Lu_Error")
            tableMapping.ColumnMappings.Add("R_Lu_Concentaration", "R_Lu_Concentaration")
            tableMapping.ColumnMappings.Add("R_Lu_Fact", "R_Lu_Fact")
            tableMapping.ColumnMappings.Add("R_Yb_Detection_Limit", "R_Yb_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Yb_Error", "R_Yb_Error")
            tableMapping.ColumnMappings.Add("R_Yb_Concentaration", "R_Yb_Concentaration")
            tableMapping.ColumnMappings.Add("R_Yb_Fact", "R_Yb_Fact")
            tableMapping.ColumnMappings.Add("R_Tm_Detection_Limit", "R_Tm_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Tm_Error", "R_Tm_Error")
            tableMapping.ColumnMappings.Add("R_Tm_Concentaration", "R_Tm_Concentaration")
            tableMapping.ColumnMappings.Add("R_Tm_Fact", "R_Tm_Fact")
            tableMapping.ColumnMappings.Add("R_Er_Detection_Limit", "R_Er_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Er_Error", "R_Er_Error")
            tableMapping.ColumnMappings.Add("R_Er_Concentaration", "R_Er_Concentaration")
            tableMapping.ColumnMappings.Add("R_Er_Fact", "R_Er_Fact")
            tableMapping.ColumnMappings.Add("R_Dy_Detection_Limit", "R_Dy_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Dy_Error", "R_Dy_Error")
            tableMapping.ColumnMappings.Add("R_Dy_Concentaration", "R_Dy_Concentaration")
            tableMapping.ColumnMappings.Add("R_Dy_Fact", "R_Dy_Fact")
            tableMapping.ColumnMappings.Add("R_Tb_Detection_Limit", "R_Tb_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Tb_Error", "R_Tb_Error")
            tableMapping.ColumnMappings.Add("R_Tb_Concentaration", "R_Tb_Concentaration")
            tableMapping.ColumnMappings.Add("R_Tb_Fact", "R_Tb_Fact")
            tableMapping.ColumnMappings.Add("R_Gd_Detection_Limit", "R_Gd_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Gd_Error", "R_Gd_Error")
            tableMapping.ColumnMappings.Add("R_Gd_Concentaration", "R_Gd_Concentaration")
            tableMapping.ColumnMappings.Add("R_Gd_Fact", "R_Gd_Fact")
            tableMapping.ColumnMappings.Add("R_Eu_Detection_Limit", "R_Eu_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Eu_Error", "R_Eu_Error")
            tableMapping.ColumnMappings.Add("R_Eu_Concentaration", "R_Eu_Concentaration")
            tableMapping.ColumnMappings.Add("R_Eu_Fact", "R_Eu_Fact")
            tableMapping.ColumnMappings.Add("R_Sm_Detection_Limit", "R_Sm_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Sm_Error", "R_Sm_Error")
            tableMapping.ColumnMappings.Add("R_Sm_Concentaration", "R_Sm_Concentaration")
            tableMapping.ColumnMappings.Add("R_Sm_Fact", "R_Sm_Fact")
            tableMapping.ColumnMappings.Add("R_Nd_Detection_Limit", "R_Nd_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Nd_Error", "R_Nd_Error")
            tableMapping.ColumnMappings.Add("R_Nd_Concentaration", "R_Nd_Concentaration")
            tableMapping.ColumnMappings.Add("R_Nd_Fact", "R_Nd_Fact")
            tableMapping.ColumnMappings.Add("R_Ce_Detection_Limit", "R_Ce_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Ce_Error", "R_Ce_Error")
            tableMapping.ColumnMappings.Add("R_Ce_Concentaration", "R_Ce_Concentaration")
            tableMapping.ColumnMappings.Add("R_Ce_Fact", "R_Ce_Fact")
            tableMapping.ColumnMappings.Add("R_La_Detection_Limit", "R_La_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_La_Error", "R_La_Error")
            tableMapping.ColumnMappings.Add("R_La_Concentaration", "R_La_Concentaration")
            tableMapping.ColumnMappings.Add("R_La_Fact", "R_La_Fact")
            tableMapping.ColumnMappings.Add("R_Ba_Detection_Limit", "R_Ba_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Ba_Error", "R_Ba_Error")
            tableMapping.ColumnMappings.Add("R_Ba_Concentaration", "R_Ba_Concentaration")
            tableMapping.ColumnMappings.Add("R_Ba_Fact", "R_Ba_Fact")
            tableMapping.ColumnMappings.Add("R_Cs_Detection_Limit", "R_Cs_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Cs_Error", "R_Cs_Error")
            tableMapping.ColumnMappings.Add("R_Cs_Concentaration", "R_Cs_Concentaration")
            tableMapping.ColumnMappings.Add("R_Cs_Fact", "R_Cs_Fact")
            tableMapping.ColumnMappings.Add("R_I_Detection_Limit", "R_I_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_I_Error", "R_I_Error")
            tableMapping.ColumnMappings.Add("R_I_Concentaration", "R_I_Concentaration")
            tableMapping.ColumnMappings.Add("R_I_Fact", "R_I_Fact")
            tableMapping.ColumnMappings.Add("R_Sb_Detection_Limit", "R_Sb_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Sb_Error", "R_Sb_Error")
            tableMapping.ColumnMappings.Add("R_Sb_Concentaration", "R_Sb_Concentaration")
            tableMapping.ColumnMappings.Add("R_Sb_Fact", "R_Sb_Fact")
            tableMapping.ColumnMappings.Add("R_Sn_Detection_Limit", "R_Sn_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Sn_Error", "R_Sn_Error")
            tableMapping.ColumnMappings.Add("R_Sn_Concentaration", "R_Sn_Concentaration")
            tableMapping.ColumnMappings.Add("R_Sn_Fact", "R_Sn_Fact")
            tableMapping.ColumnMappings.Add("R_In_Detection_Limit", "R_In_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_In_Error", "R_In_Error")
            tableMapping.ColumnMappings.Add("R_In_Concentaration", "R_In_Concentaration")
            tableMapping.ColumnMappings.Add("R_In_Fact", "R_In_Fact")
            tableMapping.ColumnMappings.Add("R_Cd_Detection_Limit", "R_Cd_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Cd_Error", "R_Cd_Error")
            tableMapping.ColumnMappings.Add("R_Cd_Concentaration", "R_Cd_Concentaration")
            tableMapping.ColumnMappings.Add("R_Cd_Fact", "R_Cd_Fact")
            tableMapping.ColumnMappings.Add("R_Ag_Detection_Limit", "R_Ag_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Ag_Error", "R_Ag_Error")
            tableMapping.ColumnMappings.Add("R_Ag_Concentaration", "R_Ag_Concentaration")
            tableMapping.ColumnMappings.Add("R_Ag_Fact", "R_Ag_Fact")
            tableMapping.ColumnMappings.Add("R_Ru_Detection_Limit", "R_Ru_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Ru_Error", "R_Ru_Error")
            tableMapping.ColumnMappings.Add("R_Ru_Concentaration", "R_Ru_Concentaration")
            tableMapping.ColumnMappings.Add("R_Ru_Fact", "R_Ru_Fact")
            tableMapping.ColumnMappings.Add("R_Mo_Detection_Limit", "R_Mo_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Mo_Error", "R_Mo_Error")
            tableMapping.ColumnMappings.Add("R_Mo_Concentaration", "R_Mo_Concentaration")
            tableMapping.ColumnMappings.Add("R_Mo_Fact", "R_Mo_Fact")
            tableMapping.ColumnMappings.Add("R_Nb_Detection_Limit", "R_Nb_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Nb_Error", "R_Nb_Error")
            tableMapping.ColumnMappings.Add("R_Nb_Concentaration", "R_Nb_Concentaration")
            tableMapping.ColumnMappings.Add("R_Zr_Detection_Limit", "R_Zr_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Nb_Fact", "R_Nb_Fact")
            tableMapping.ColumnMappings.Add("R_Zr_Error", "R_Zr_Error")
            tableMapping.ColumnMappings.Add("R_Zr_Concentaration", "R_Zr_Concentaration")
            tableMapping.ColumnMappings.Add("R_Zr_Fact", "R_Zr_Fact")
            tableMapping.ColumnMappings.Add("R_Y_Detection_Limit", "R_Y_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Y_Error", "R_Y_Error")
            tableMapping.ColumnMappings.Add("R_Y_Concentaration", "R_Y_Concentaration")
            tableMapping.ColumnMappings.Add("R_Y_Fact", "R_Y_Fact")
            tableMapping.ColumnMappings.Add("R_Sr_Detection_Limit", "R_Sr_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Sr_Error", "R_Sr_Error")
            tableMapping.ColumnMappings.Add("R_Sr_Concentaration", "R_Sr_Concentaration")
            tableMapping.ColumnMappings.Add("R_Rb_Detection_Limit", "R_Rb_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Sr_Fact", "R_Sr_Fact")
            tableMapping.ColumnMappings.Add("R_Rb_Error", "R_Rb_Error")
            tableMapping.ColumnMappings.Add("R_Rb_Concentaration", "R_Rb_Concentaration")
            tableMapping.ColumnMappings.Add("R_Rb_Fact", "R_Rb_Fact")
            tableMapping.ColumnMappings.Add("R_Br_Detection_Limit", "R_Br_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Br_Error", "R_Br_Error")
            tableMapping.ColumnMappings.Add("R_Br_Concentaration", "R_Br_Concentaration")
            tableMapping.ColumnMappings.Add("R_Br_Fact", "R_Br_Fact")
            tableMapping.ColumnMappings.Add("R_Se_Detection_Limit", "R_Se_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Se_Error", "R_Se_Error")
            tableMapping.ColumnMappings.Add("R_Se_Concentaration", "R_Se_Concentaration")
            tableMapping.ColumnMappings.Add("R_Se_Fact", "R_Se_Fact")
            tableMapping.ColumnMappings.Add("R_As_Detection_Limit", "R_As_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_As_Error", "R_As_Error")
            tableMapping.ColumnMappings.Add("R_As_Concentaration", "R_As_Concentaration")
            tableMapping.ColumnMappings.Add("R_As_Fact", "R_As_Fact")
            tableMapping.ColumnMappings.Add("R_Ga_Detection_Limit", "R_Ga_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Ga_Error", "R_Ga_Error")
            tableMapping.ColumnMappings.Add("R_Ga_Concentaration", "R_Ga_Concentaration")
            tableMapping.ColumnMappings.Add("R_Ga_Fact", "R_Ga_Fact")
            tableMapping.ColumnMappings.Add("R_Zn_Detection_Limit", "R_Zn_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Zn_Error", "R_Zn_Error")
            tableMapping.ColumnMappings.Add("R_Zn_Concentaration", "R_Zn_Concentaration")
            tableMapping.ColumnMappings.Add("R_Zn_Fact", "R_Zn_Fact")
            tableMapping.ColumnMappings.Add("R_Cu_Detection_Limit", "R_Cu_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Cu_Error", "R_Cu_Error")
            tableMapping.ColumnMappings.Add("R_Cu_Concentaration", "R_Cu_Concentaration")
            tableMapping.ColumnMappings.Add("R_Cu_Fact", "R_Cu_Fact")
            tableMapping.ColumnMappings.Add("R_Co_Detection_Limit", "R_Co_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Co_Error", "R_Co_Error")
            tableMapping.ColumnMappings.Add("R_Co_Concentaration", "R_Co_Concentaration")
            tableMapping.ColumnMappings.Add("R_Co_Fact", "R_Co_Fact")
            tableMapping.ColumnMappings.Add("R_Fe_Detection_Limit", "R_Fe_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Fe_Error", "R_Fe_Error")
            tableMapping.ColumnMappings.Add("R_Fe_Concentaration", "R_Fe_Concentaration")
            tableMapping.ColumnMappings.Add("R_Fe_Fact", "R_Fe_Fact")
            tableMapping.ColumnMappings.Add("R_Mn_Detection_Limit", "R_Mn_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Mn_Error", "R_Mn_Error")
            tableMapping.ColumnMappings.Add("R_F_Fact", "R_F_Fact")
            tableMapping.ColumnMappings.Add("R_F_Concentaration", "R_F_Concentaration")
            tableMapping.ColumnMappings.Add("R_F_Error", "R_F_Error")
            tableMapping.ColumnMappings.Add("R_F_Detection_Limit", "R_F_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Na_Fact", "R_Na_Fact")
            tableMapping.ColumnMappings.Add("R_Na_Concentaration", "R_Na_Concentaration")
            tableMapping.ColumnMappings.Add("R_Na_Error", "R_Na_Error")
            tableMapping.ColumnMappings.Add("R_Na_Detection_Limit", "R_Na_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Mg_Fact", "R_Mg_Fact")
            tableMapping.ColumnMappings.Add("R_Mg_Concentaration", "R_Mg_Concentaration")
            tableMapping.ColumnMappings.Add("R_Mg_Error", "R_Mg_Error")
            tableMapping.ColumnMappings.Add("R_Mg_Detection_Limit", "R_Mg_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Al_Fact", "R_Al_Fact")
            tableMapping.ColumnMappings.Add("R_Al_Concentaration", "R_Al_Concentaration")
            tableMapping.ColumnMappings.Add("R_Al_Error", "R_Al_Error")
            tableMapping.ColumnMappings.Add("R_Si_Fact", "R_Si_Fact")
            tableMapping.ColumnMappings.Add("R_Al_Detection_Limit", "R_Al_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Si_Concentaration", "R_Si_Concentaration")
            tableMapping.ColumnMappings.Add("R_Si_Error", "R_Si_Error")
            tableMapping.ColumnMappings.Add("R_Si_Detection_Limit", "R_Si_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_S_Fact", "R_S_Fact")
            tableMapping.ColumnMappings.Add("R_S_Concentaration", "R_S_Concentaration")
            tableMapping.ColumnMappings.Add("R_S_Error", "R_S_Error")
            tableMapping.ColumnMappings.Add("R_S_Detection_Limit", "R_S_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Cl_Fact", "R_Cl_Fact")
            tableMapping.ColumnMappings.Add("R_Cl_Concentaration", "R_Cl_Concentaration")
            tableMapping.ColumnMappings.Add("R_Cl_Error", "R_Cl_Error")
            tableMapping.ColumnMappings.Add("R_Cl_Detection_Limit", "R_Cl_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_K_Fact", "R_K_Fact")
            tableMapping.ColumnMappings.Add("R_K_Concentaration", "R_K_Concentaration")
            tableMapping.ColumnMappings.Add("R_K_Error", "R_K_Error")
            tableMapping.ColumnMappings.Add("R_K_Detection_Limit", "R_K_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Ca_Fact", "R_Ca_Fact")
            tableMapping.ColumnMappings.Add("R_Ca_Concentaration", "R_Ca_Concentaration")
            tableMapping.ColumnMappings.Add("R_Ca_Error", "R_Ca_Error")
            tableMapping.ColumnMappings.Add("R_Ca_Detection_Limit", "R_Ca_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Sc_Fact", "R_Sc_Fact")
            tableMapping.ColumnMappings.Add("R_Sc_Concentaration", "R_Sc_Concentaration")
            tableMapping.ColumnMappings.Add("R_Sc_Error", "R_Sc_Error")
            tableMapping.ColumnMappings.Add("R_Sc_Detection_Limit", "R_Sc_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Ti_Fact", "R_Ti_Fact")
            tableMapping.ColumnMappings.Add("R_Ti_Concentaration", "R_Ti_Concentaration")
            tableMapping.ColumnMappings.Add("R_Ti_Error", "R_Ti_Error")
            tableMapping.ColumnMappings.Add("R_Ti_Detection_Limit", "R_Ti_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_V_Fact", "R_V_Fact")
            tableMapping.ColumnMappings.Add("R_V_Concentaration", "R_V_Concentaration")
            tableMapping.ColumnMappings.Add("R_V_Error", "R_V_Error")
            tableMapping.ColumnMappings.Add("R_V_Detection_Limit", "R_V_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Cr_Fact", "R_Cr_Fact")
            tableMapping.ColumnMappings.Add("R_Cr_Concentaration", "R_Cr_Concentaration")
            tableMapping.ColumnMappings.Add("R_Cr_Error", "R_Cr_Error")
            tableMapping.ColumnMappings.Add("R_Cr_Detection_Limit", "R_Cr_Detection_Limit")
            tableMapping.ColumnMappings.Add("R_Mn_Fact", "R_Mn_Fact")
            tableMapping.ColumnMappings.Add("R_Mn_Concentaration", "R_Mn_Concentaration")
            tableMapping.ColumnMappings.Add("A_Sample_ID", "A_Sample_ID")
            tableMapping.ColumnMappings.Add("F_Country_Code", "F_Country_Code")
            tableMapping.ColumnMappings.Add("F_Client_ID", "F_Client_ID")
            tableMapping.ColumnMappings.Add("F_Year", "F_Year")
            tableMapping.ColumnMappings.Add("F_Sample_Set_ID", "F_Sample_Set_ID")
            tableMapping.ColumnMappings.Add("F_Sample_Set_Index", "F_Sample_Set_Index")
            tableMapping.ColumnMappings.Add("R_Processed_By", "R_Processed_By")
            tableMapping.ColumnMappings.Add("R_File_Spectrum", "R_File_Spectrum")
            tableMapping.ColumnMappings.Add("A_Client_Sample_ID", "A_Client_Sample_ID")
            tableMapping.ColumnMappings.Add("A_Latitude", "A_Latitude")
            tableMapping.ColumnMappings.Add("A_Longitude", "A_Longitude")
            tableMapping.ColumnMappings.Add("A_Collection_Place", "A_Collection_Place")
            tableMapping.ColumnMappings.Add("A_Notes", "A_Notes")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [table_Sample] WHERE (([A_Sample_ID] = @Original_A_Sample_ID) AND ([F"& _ 
                "_Country_Code] = @Original_F_Country_Code) AND ([F_Client_ID] = @Original_F_Clie"& _ 
                "nt_ID) AND ([F_Year] = @Original_F_Year) AND ([F_Sample_Set_ID] = @Original_F_Sa"& _ 
                "mple_Set_ID) AND ([F_Sample_Set_Index] = @Original_F_Sample_Set_Index))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_A_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sample_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_F_Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Country_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_F_Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Client_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_F_Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Year", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_F_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_F_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_Index", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [table_Sample] ([A_Sample_ID], [R_F_Fact], [R_F_Concentaration], [R_F"& _ 
                "_Error], [R_F_Detection_Limit], [R_Na_Fact], [R_Na_Concentaration], [R_Na_Error]"& _ 
                ", [R_Na_Detection_Limit], [R_Mg_Fact], [R_Mg_Concentaration], [R_Mg_Error], [R_M"& _ 
                "g_Detection_Limit], [R_Al_Fact], [R_Al_Concentaration], [R_Al_Error], [R_Al_Dete"& _ 
                "ction_Limit], [R_Si_Fact], [R_Si_Concentaration], [R_Si_Error], [R_Si_Detection_"& _ 
                "Limit], [R_S_Fact], [R_S_Concentaration], [R_S_Error], [R_S_Detection_Limit], [R"& _ 
                "_Cl_Fact], [R_Cl_Concentaration], [R_Cl_Error], [R_Cl_Detection_Limit], [R_K_Fac"& _ 
                "t], [R_K_Concentaration], [R_K_Error], [R_K_Detection_Limit], [R_Ca_Fact], [R_Ca"& _ 
                "_Concentaration], [R_Ca_Error], [R_Ca_Detection_Limit], [R_Sc_Fact], [R_Sc_Conce"& _ 
                "ntaration], [R_Sc_Error], [R_Sc_Detection_Limit], [R_Ti_Fact], [R_Ti_Concentarat"& _ 
                "ion], [R_Ti_Error], [R_Ti_Detection_Limit], [R_V_Fact], [R_V_Concentaration], [R"& _ 
                "_V_Error], [R_V_Detection_Limit], [R_Cr_Fact], [R_Cr_Concentaration], [R_Cr_Erro"& _ 
                "r], [R_Cr_Detection_Limit], [R_Mn_Fact], [R_Mn_Concentaration], [R_Mn_Error], [R"& _ 
                "_Mn_Detection_Limit], [R_Fe_Fact], [R_Fe_Concentaration], [R_Fe_Error], [R_Fe_De"& _ 
                "tection_Limit], [R_Co_Fact], [R_Co_Concentaration], [R_Co_Error], [R_Co_Detectio"& _ 
                "n_Limit], [R_Cu_Fact], [R_Cu_Concentaration], [R_Cu_Error], [R_Cu_Detection_Limi"& _ 
                "t], [R_Zn_Fact], [R_Zn_Concentaration], [R_Zn_Error], [R_Zn_Detection_Limit], [R"& _ 
                "_Ga_Fact], [R_Ga_Concentaration], [R_Ga_Error], [R_Ga_Detection_Limit], [R_As_Fa"& _ 
                "ct], [R_As_Concentaration], [R_As_Error], [R_As_Detection_Limit], [R_Se_Fact], ["& _ 
                "R_Se_Concentaration], [R_Se_Error], [R_Se_Detection_Limit], [R_Br_Fact], [R_Br_C"& _ 
                "oncentaration], [R_Br_Error], [R_Br_Detection_Limit], [R_Rb_Fact], [R_Rb_Concent"& _ 
                "aration], [R_Rb_Error], [R_Rb_Detection_Limit], [R_Sr_Fact], [R_Sr_Concentaratio"& _ 
                "n], [R_Sr_Error], [R_Sr_Detection_Limit], [R_Y_Fact], [R_Y_Concentaration], [R_Y"& _ 
                "_Error], [R_Y_Detection_Limit], [R_Zr_Fact], [R_Zr_Concentaration], [R_Zr_Error]"& _ 
                ", [R_Zr_Detection_Limit], [R_Nb_Fact], [R_Nb_Concentaration], [R_Nb_Error], [R_N"& _ 
                "b_Detection_Limit], [R_Mo_Fact], [R_Mo_Concentaration], [R_Mo_Error], [R_Mo_Dete"& _ 
                "ction_Limit], [R_Ru_Fact], [R_Ru_Concentaration], [R_Ru_Error], [R_Ru_Detection_"& _ 
                "Limit], [R_Ag_Fact], [R_Ag_Concentaration], [R_Ag_Error], [R_Ag_Detection_Limit]"& _ 
                ", [R_Cd_Fact], [R_Cd_Concentaration], [R_Cd_Error], [R_Cd_Detection_Limit], [R_I"& _ 
                "n_Fact], [R_In_Concentaration], [R_In_Error], [R_In_Detection_Limit], [R_Sn_Fact"& _ 
                "], [R_Sn_Concentaration], [R_Sn_Error], [R_Sn_Detection_Limit], [R_Sb_Fact], [R_"& _ 
                "Sb_Concentaration], [R_Sb_Error], [R_Sb_Detection_Limit], [R_I_Fact], [R_I_Conce"& _ 
                "ntaration], [R_I_Error], [R_I_Detection_Limit], [R_Cs_Fact], [R_Cs_Concentaratio"& _ 
                "n], [R_Cs_Error], [R_Cs_Detection_Limit], [R_Ba_Fact], [R_Ba_Concentaration], [R"& _ 
                "_Ba_Error], [R_Ba_Detection_Limit], [R_La_Fact], [R_La_Concentaration], [R_La_Er"& _ 
                "ror], [R_La_Detection_Limit], [R_Ce_Fact], [R_Ce_Concentaration], [R_Ce_Error], "& _ 
                "[R_Ce_Detection_Limit], [R_Nd_Fact], [R_Nd_Concentaration], [R_Nd_Error], [R_Nd_"& _ 
                "Detection_Limit], [R_Sm_Fact], [R_Sm_Concentaration], [R_Sm_Error], [R_Sm_Detect"& _ 
                "ion_Limit], [R_Eu_Fact], [R_Eu_Concentaration], [R_Eu_Error], [R_Eu_Detection_Li"& _ 
                "mit], [R_Gd_Fact], [R_Gd_Concentaration], [R_Gd_Error], [R_Gd_Detection_Limit], "& _ 
                "[R_Tb_Fact], [R_Tb_Concentaration], [R_Tb_Error], [R_Tb_Detection_Limit], [R_Dy_"& _ 
                "Fact], [R_Dy_Concentaration], [R_Dy_Error], [R_Dy_Detection_Limit], [R_Er_Fact],"& _ 
                " [R_Er_Concentaration], [R_Er_Error], [R_Er_Detection_Limit], [R_Tm_Fact], [R_Tm"& _ 
                "_Concentaration], [R_Tm_Error], [R_Tm_Detection_Limit], [R_Yb_Fact], [R_Yb_Conce"& _ 
                "ntaration], [R_Yb_Error], [R_Yb_Detection_Limit], [R_Lu_Fact], [R_Lu_Concentarat"& _ 
                "ion], [R_Lu_Error], [R_Lu_Detection_Limit], [R_Hf_Fact], [R_Hf_Concentaration], "& _ 
                "[R_Hf_Error], [R_Hf_Detection_Limit], [R_Ta_Fact], [R_Ta_Concentaration], [R_Ta_"& _ 
                "Error], [R_Ta_Detection_Limit], [R_W_Fact], [R_W_Concentaration], [R_W_Error], ["& _ 
                "R_W_Detection_Limit], [R_Re_Fact], [R_Re_Concentaration], [R_Re_Error], [R_Re_De"& _ 
                "tection_Limit], [R_Ir_Fact], [R_Ir_Concentaration], [R_Ir_Error], [R_Ir_Detectio"& _ 
                "n_Limit], [R_Pt_Fact], [R_Pt_Concentaration], [R_Pt_Error], [R_Pt_Detection_Limi"& _ 
                "t], [R_Au_Fact], [R_Au_Concentaration], [R_Au_Error], [R_Au_Detection_Limit], [R"& _ 
                "_Hg_Fact], [R_Hg_Concentaration], [R_Hg_Error], [R_Hg_Detection_Limit], [R_Th_Fa"& _ 
                "ct], [R_Th_Concentaration], [R_Th_Error], [R_Th_Detection_Limit], [R_U_Fact], [R"& _ 
                "_U_Concentaration], [R_U_Error], [R_U_Detection_Limit], [F_Country_Code], [F_Cli"& _ 
                "ent_ID], [F_Year], [F_Sample_Set_ID], [F_Sample_Set_Index], [R_Processed_By], [R"& _ 
                "_File_Spectrum], [A_Client_Sample_ID], [A_Latitude], [A_Longitude], [A_Collectio"& _ 
                "n_Place], [A_Notes]) VALUES (@A_Sample_ID, @R_F_Fact, @R_F_Concentaration, @R_F_"& _ 
                "Error, @R_F_Detection_Limit, @R_Na_Fact, @R_Na_Concentaration, @R_Na_Error, @R_N"& _ 
                "a_Detection_Limit, @R_Mg_Fact, @R_Mg_Concentaration, @R_Mg_Error, @R_Mg_Detectio"& _ 
                "n_Limit, @R_Al_Fact, @R_Al_Concentaration, @R_Al_Error, @R_Al_Detection_Limit, @"& _ 
                "R_Si_Fact, @R_Si_Concentaration, @R_Si_Error, @R_Si_Detection_Limit, @R_S_Fact, "& _ 
                "@R_S_Concentaration, @R_S_Error, @R_S_Detection_Limit, @R_Cl_Fact, @R_Cl_Concent"& _ 
                "aration, @R_Cl_Error, @R_Cl_Detection_Limit, @R_K_Fact, @R_K_Concentaration, @R_"& _ 
                "K_Error, @R_K_Detection_Limit, @R_Ca_Fact, @R_Ca_Concentaration, @R_Ca_Error, @R"& _ 
                "_Ca_Detection_Limit, @R_Sc_Fact, @R_Sc_Concentaration, @R_Sc_Error, @R_Sc_Detect"& _ 
                "ion_Limit, @R_Ti_Fact, @R_Ti_Concentaration, @R_Ti_Error, @R_Ti_Detection_Limit,"& _ 
                " @R_V_Fact, @R_V_Concentaration, @R_V_Error, @R_V_Detection_Limit, @R_Cr_Fact, @"& _ 
                "R_Cr_Concentaration, @R_Cr_Error, @R_Cr_Detection_Limit, @R_Mn_Fact, @R_Mn_Conce"& _ 
                "ntaration, @R_Mn_Error, @R_Mn_Detection_Limit, @R_Fe_Fact, @R_Fe_Concentaration,"& _ 
                " @R_Fe_Error, @R_Fe_Detection_Limit, @R_Co_Fact, @R_Co_Concentaration, @R_Co_Err"& _ 
                "or, @R_Co_Detection_Limit, @R_Cu_Fact, @R_Cu_Concentaration, @R_Cu_Error, @R_Cu_"& _ 
                "Detection_Limit, @R_Zn_Fact, @R_Zn_Concentaration, @R_Zn_Error, @R_Zn_Detection_"& _ 
                "Limit, @R_Ga_Fact, @R_Ga_Concentaration, @R_Ga_Error, @R_Ga_Detection_Limit, @R_"& _ 
                "As_Fact, @R_As_Concentaration, @R_As_Error, @R_As_Detection_Limit, @R_Se_Fact, @"& _ 
                "R_Se_Concentaration, @R_Se_Error, @R_Se_Detection_Limit, @R_Br_Fact, @R_Br_Conce"& _ 
                "ntaration, @R_Br_Error, @R_Br_Detection_Limit, @R_Rb_Fact, @R_Rb_Concentaration,"& _ 
                " @R_Rb_Error, @R_Rb_Detection_Limit, @R_Sr_Fact, @R_Sr_Concentaration, @R_Sr_Err"& _ 
                "or, @R_Sr_Detection_Limit, @R_Y_Fact, @R_Y_Concentaration, @R_Y_Error, @R_Y_Dete"& _ 
                "ction_Limit, @R_Zr_Fact, @R_Zr_Concentaration, @R_Zr_Error, @R_Zr_Detection_Limi"& _ 
                "t, @R_Nb_Fact, @R_Nb_Concentaration, @R_Nb_Error, @R_Nb_Detection_Limit, @R_Mo_F"& _ 
                "act, @R_Mo_Concentaration, @R_Mo_Error, @R_Mo_Detection_Limit, @R_Ru_Fact, @R_Ru"& _ 
                "_Concentaration, @R_Ru_Error, @R_Ru_Detection_Limit, @R_Ag_Fact, @R_Ag_Concentar"& _ 
                "ation, @R_Ag_Error, @R_Ag_Detection_Limit, @R_Cd_Fact, @R_Cd_Concentaration, @R_"& _ 
                "Cd_Error, @R_Cd_Detection_Limit, @R_In_Fact, @R_In_Concentaration, @R_In_Error, "& _ 
                "@R_In_Detection_Limit, @R_Sn_Fact, @R_Sn_Concentaration, @R_Sn_Error, @R_Sn_Dete"& _ 
                "ction_Limit, @R_Sb_Fact, @R_Sb_Concentaration, @R_Sb_Error, @R_Sb_Detection_Limi"& _ 
                "t, @R_I_Fact, @R_I_Concentaration, @R_I_Error, @R_I_Detection_Limit, @R_Cs_Fact,"& _ 
                " @R_Cs_Concentaration, @R_Cs_Error, @R_Cs_Detection_Limit, @R_Ba_Fact, @R_Ba_Con"& _ 
                "centaration, @R_Ba_Error, @R_Ba_Detection_Limit, @R_La_Fact, @R_La_Concentaratio"& _ 
                "n, @R_La_Error, @R_La_Detection_Limit, @R_Ce_Fact, @R_Ce_Concentaration, @R_Ce_E"& _ 
                "rror, @R_Ce_Detection_Limit, @R_Nd_Fact, @R_Nd_Concentaration, @R_Nd_Error, @R_N"& _ 
                "d_Detection_Limit, @R_Sm_Fact, @R_Sm_Concentaration, @R_Sm_Error, @R_Sm_Detectio"& _ 
                "n_Limit, @R_Eu_Fact, @R_Eu_Concentaration, @R_Eu_Error, @R_Eu_Detection_Limit, @"& _ 
                "R_Gd_Fact, @R_Gd_Concentaration, @R_Gd_Error, @R_Gd_Detection_Limit, @R_Tb_Fact,"& _ 
                " @R_Tb_Concentaration, @R_Tb_Error, @R_Tb_Detection_Limit, @R_Dy_Fact, @R_Dy_Con"& _ 
                "centaration, @R_Dy_Error, @R_Dy_Detection_Limit, @R_Er_Fact, @R_Er_Concentaratio"& _ 
                "n, @R_Er_Error, @R_Er_Detection_Limit, @R_Tm_Fact, @R_Tm_Concentaration, @R_Tm_E"& _ 
                "rror, @R_Tm_Detection_Limit, @R_Yb_Fact, @R_Yb_Concentaration, @R_Yb_Error, @R_Y"& _ 
                "b_Detection_Limit, @R_Lu_Fact, @R_Lu_Concentaration, @R_Lu_Error, @R_Lu_Detectio"& _ 
                "n_Limit, @R_Hf_Fact, @R_Hf_Concentaration, @R_Hf_Error, @R_Hf_Detection_Limit, @"& _ 
                "R_Ta_Fact, @R_Ta_Concentaration, @R_Ta_Error, @R_Ta_Detection_Limit, @R_W_Fact, "& _ 
                "@R_W_Concentaration, @R_W_Error, @R_W_Detection_Limit, @R_Re_Fact, @R_Re_Concent"& _ 
                "aration, @R_Re_Error, @R_Re_Detection_Limit, @R_Ir_Fact, @R_Ir_Concentaration, @"& _ 
                "R_Ir_Error, @R_Ir_Detection_Limit, @R_Pt_Fact, @R_Pt_Concentaration, @R_Pt_Error"& _ 
                ", @R_Pt_Detection_Limit, @R_Au_Fact, @R_Au_Concentaration, @R_Au_Error, @R_Au_De"& _ 
                "tection_Limit, @R_Hg_Fact, @R_Hg_Concentaration, @R_Hg_Error, @R_Hg_Detection_Li"& _ 
                "mit, @R_Th_Fact, @R_Th_Concentaration, @R_Th_Error, @R_Th_Detection_Limit, @R_U_"& _ 
                "Fact, @R_U_Concentaration, @R_U_Error, @R_U_Detection_Limit, @F_Country_Code, @F"& _ 
                "_Client_ID, @F_Year, @F_Sample_Set_ID, @F_Sample_Set_Index, @R_Processed_By, @R_"& _ 
                "File_Spectrum, @A_Client_Sample_ID, @A_Latitude, @A_Longitude, @A_Collection_Pla"& _ 
                "ce, @A_Notes)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sample_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_F_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_F_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_F_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_F_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_F_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_F_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_F_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_F_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Na_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Na_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Na_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Na_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Na_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Na_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Na_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Na_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mg_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mg_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mg_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mg_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mg_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mg_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mg_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mg_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Al_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Al_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Al_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Al_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Al_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Al_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Al_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Al_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Si_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Si_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Si_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Si_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Si_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Si_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Si_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Si_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_S_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_S_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_S_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_S_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_S_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_S_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_S_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_S_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cl_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cl_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cl_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cl_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cl_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cl_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cl_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cl_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_K_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_K_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_K_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_K_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_K_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_K_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_K_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_K_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ca_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ca_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ca_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ca_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ca_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ca_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ca_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ca_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sc_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sc_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sc_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sc_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sc_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sc_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sc_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sc_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ti_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ti_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ti_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ti_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ti_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ti_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ti_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ti_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_V_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_V_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_V_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_V_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_V_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_V_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_V_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_V_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cr_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cr_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cr_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cr_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cr_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cr_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cr_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cr_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mn_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mn_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mn_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mn_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mn_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mn_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mn_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mn_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Fe_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Fe_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Fe_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Fe_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Fe_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Fe_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Fe_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Fe_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Co_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Co_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Co_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Co_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Co_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Co_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Co_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Co_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cu_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cu_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cu_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cu_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cu_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cu_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cu_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cu_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zn_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zn_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zn_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zn_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zn_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zn_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zn_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zn_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ga_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ga_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ga_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ga_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ga_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ga_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ga_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ga_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_As_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_As_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_As_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_As_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_As_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_As_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_As_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_As_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Se_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Se_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Se_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Se_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Se_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Se_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Se_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Se_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Br_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Br_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Br_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Br_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Br_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Br_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Br_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Br_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Rb_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Rb_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Rb_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Rb_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Rb_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Rb_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Rb_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Rb_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sr_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sr_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sr_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sr_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sr_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sr_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sr_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sr_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Y_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Y_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Y_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Y_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Y_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Y_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Y_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Y_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zr_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zr_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zr_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zr_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zr_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zr_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zr_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zr_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nb_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nb_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nb_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nb_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nb_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nb_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nb_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nb_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mo_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mo_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mo_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mo_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mo_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mo_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mo_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mo_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ru_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ru_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ru_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ru_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ru_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ru_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ru_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ru_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ag_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ag_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ag_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ag_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ag_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ag_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ag_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ag_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cd_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cd_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cd_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cd_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cd_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cd_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cd_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cd_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_In_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_In_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_In_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_In_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_In_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_In_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_In_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_In_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sn_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sn_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sn_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sn_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sn_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sn_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sn_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sn_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sb_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sb_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sb_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sb_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sb_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sb_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sb_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sb_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_I_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_I_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_I_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_I_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_I_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_I_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_I_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_I_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cs_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cs_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cs_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cs_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cs_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cs_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cs_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cs_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ba_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ba_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ba_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ba_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ba_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ba_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ba_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ba_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_La_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_La_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_La_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_La_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_La_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_La_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_La_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_La_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ce_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ce_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ce_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ce_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ce_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ce_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ce_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ce_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nd_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nd_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nd_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nd_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nd_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nd_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nd_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nd_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sm_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sm_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sm_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sm_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sm_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sm_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sm_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sm_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Eu_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Eu_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Eu_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Eu_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Eu_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Eu_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Eu_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Eu_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Gd_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Gd_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Gd_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Gd_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Gd_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Gd_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Gd_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Gd_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tb_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tb_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tb_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tb_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tb_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tb_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tb_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tb_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Dy_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Dy_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Dy_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Dy_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Dy_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Dy_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Dy_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Dy_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Er_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Er_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Er_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Er_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Er_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Er_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Er_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Er_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tm_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tm_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tm_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tm_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tm_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tm_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tm_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tm_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Yb_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Yb_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Yb_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Yb_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Yb_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Yb_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Yb_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Yb_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Lu_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Lu_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Lu_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Lu_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Lu_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Lu_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Lu_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Lu_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hf_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hf_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hf_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hf_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hf_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hf_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hf_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hf_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ta_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ta_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ta_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ta_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ta_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ta_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ta_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ta_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_W_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_W_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_W_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_W_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_W_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_W_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_W_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_W_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Re_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Re_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Re_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Re_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Re_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Re_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Re_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Re_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ir_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ir_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ir_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ir_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ir_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ir_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ir_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ir_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Pt_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Pt_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Pt_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Pt_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Pt_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Pt_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Pt_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Pt_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Au_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Au_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Au_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Au_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Au_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Au_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Au_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Au_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hg_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hg_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hg_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hg_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hg_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hg_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hg_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hg_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Th_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Th_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Th_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Th_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Th_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Th_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Th_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Th_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_U_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_U_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_U_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_U_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_U_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_U_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_U_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_U_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Client_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_Index", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Processed_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Processed_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_File_Spectrum", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_File_Spectrum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Client_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Client_Sample_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Latitude", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Latitude", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Longitude", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Longitude", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Collection_Place", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Collection_Place", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Notes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Notes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [table_Sample] SET [A_Sample_ID] = @A_Sample_ID, [R_F_Fact] = @R_F_Fact, ["& _ 
                "R_F_Concentaration] = @R_F_Concentaration, [R_F_Error] = @R_F_Error, [R_F_Detect"& _ 
                "ion_Limit] = @R_F_Detection_Limit, [R_Na_Fact] = @R_Na_Fact, [R_Na_Concentaratio"& _ 
                "n] = @R_Na_Concentaration, [R_Na_Error] = @R_Na_Error, [R_Na_Detection_Limit] = "& _ 
                "@R_Na_Detection_Limit, [R_Mg_Fact] = @R_Mg_Fact, [R_Mg_Concentaration] = @R_Mg_C"& _ 
                "oncentaration, [R_Mg_Error] = @R_Mg_Error, [R_Mg_Detection_Limit] = @R_Mg_Detect"& _ 
                "ion_Limit, [R_Al_Fact] = @R_Al_Fact, [R_Al_Concentaration] = @R_Al_Concentaratio"& _ 
                "n, [R_Al_Error] = @R_Al_Error, [R_Al_Detection_Limit] = @R_Al_Detection_Limit, ["& _ 
                "R_Si_Fact] = @R_Si_Fact, [R_Si_Concentaration] = @R_Si_Concentaration, [R_Si_Err"& _ 
                "or] = @R_Si_Error, [R_Si_Detection_Limit] = @R_Si_Detection_Limit, [R_S_Fact] = "& _ 
                "@R_S_Fact, [R_S_Concentaration] = @R_S_Concentaration, [R_S_Error] = @R_S_Error,"& _ 
                " [R_S_Detection_Limit] = @R_S_Detection_Limit, [R_Cl_Fact] = @R_Cl_Fact, [R_Cl_C"& _ 
                "oncentaration] = @R_Cl_Concentaration, [R_Cl_Error] = @R_Cl_Error, [R_Cl_Detecti"& _ 
                "on_Limit] = @R_Cl_Detection_Limit, [R_K_Fact] = @R_K_Fact, [R_K_Concentaration] "& _ 
                "= @R_K_Concentaration, [R_K_Error] = @R_K_Error, [R_K_Detection_Limit] = @R_K_De"& _ 
                "tection_Limit, [R_Ca_Fact] = @R_Ca_Fact, [R_Ca_Concentaration] = @R_Ca_Concentar"& _ 
                "ation, [R_Ca_Error] = @R_Ca_Error, [R_Ca_Detection_Limit] = @R_Ca_Detection_Limi"& _ 
                "t, [R_Sc_Fact] = @R_Sc_Fact, [R_Sc_Concentaration] = @R_Sc_Concentaration, [R_Sc"& _ 
                "_Error] = @R_Sc_Error, [R_Sc_Detection_Limit] = @R_Sc_Detection_Limit, [R_Ti_Fac"& _ 
                "t] = @R_Ti_Fact, [R_Ti_Concentaration] = @R_Ti_Concentaration, [R_Ti_Error] = @R"& _ 
                "_Ti_Error, [R_Ti_Detection_Limit] = @R_Ti_Detection_Limit, [R_V_Fact] = @R_V_Fac"& _ 
                "t, [R_V_Concentaration] = @R_V_Concentaration, [R_V_Error] = @R_V_Error, [R_V_De"& _ 
                "tection_Limit] = @R_V_Detection_Limit, [R_Cr_Fact] = @R_Cr_Fact, [R_Cr_Concentar"& _ 
                "ation] = @R_Cr_Concentaration, [R_Cr_Error] = @R_Cr_Error, [R_Cr_Detection_Limit"& _ 
                "] = @R_Cr_Detection_Limit, [R_Mn_Fact] = @R_Mn_Fact, [R_Mn_Concentaration] = @R_"& _ 
                "Mn_Concentaration, [R_Mn_Error] = @R_Mn_Error, [R_Mn_Detection_Limit] = @R_Mn_De"& _ 
                "tection_Limit, [R_Fe_Fact] = @R_Fe_Fact, [R_Fe_Concentaration] = @R_Fe_Concentar"& _ 
                "ation, [R_Fe_Error] = @R_Fe_Error, [R_Fe_Detection_Limit] = @R_Fe_Detection_Limi"& _ 
                "t, [R_Co_Fact] = @R_Co_Fact, [R_Co_Concentaration] = @R_Co_Concentaration, [R_Co"& _ 
                "_Error] = @R_Co_Error, [R_Co_Detection_Limit] = @R_Co_Detection_Limit, [R_Cu_Fac"& _ 
                "t] = @R_Cu_Fact, [R_Cu_Concentaration] = @R_Cu_Concentaration, [R_Cu_Error] = @R"& _ 
                "_Cu_Error, [R_Cu_Detection_Limit] = @R_Cu_Detection_Limit, [R_Zn_Fact] = @R_Zn_F"& _ 
                "act, [R_Zn_Concentaration] = @R_Zn_Concentaration, [R_Zn_Error] = @R_Zn_Error, ["& _ 
                "R_Zn_Detection_Limit] = @R_Zn_Detection_Limit, [R_Ga_Fact] = @R_Ga_Fact, [R_Ga_C"& _ 
                "oncentaration] = @R_Ga_Concentaration, [R_Ga_Error] = @R_Ga_Error, [R_Ga_Detecti"& _ 
                "on_Limit] = @R_Ga_Detection_Limit, [R_As_Fact] = @R_As_Fact, [R_As_Concentaratio"& _ 
                "n] = @R_As_Concentaration, [R_As_Error] = @R_As_Error, [R_As_Detection_Limit] = "& _ 
                "@R_As_Detection_Limit, [R_Se_Fact] = @R_Se_Fact, [R_Se_Concentaration] = @R_Se_C"& _ 
                "oncentaration, [R_Se_Error] = @R_Se_Error, [R_Se_Detection_Limit] = @R_Se_Detect"& _ 
                "ion_Limit, [R_Br_Fact] = @R_Br_Fact, [R_Br_Concentaration] = @R_Br_Concentaratio"& _ 
                "n, [R_Br_Error] = @R_Br_Error, [R_Br_Detection_Limit] = @R_Br_Detection_Limit, ["& _ 
                "R_Rb_Fact] = @R_Rb_Fact, [R_Rb_Concentaration] = @R_Rb_Concentaration, [R_Rb_Err"& _ 
                "or] = @R_Rb_Error, [R_Rb_Detection_Limit] = @R_Rb_Detection_Limit, [R_Sr_Fact] ="& _ 
                " @R_Sr_Fact, [R_Sr_Concentaration] = @R_Sr_Concentaration, [R_Sr_Error] = @R_Sr_"& _ 
                "Error, [R_Sr_Detection_Limit] = @R_Sr_Detection_Limit, [R_Y_Fact] = @R_Y_Fact, ["& _ 
                "R_Y_Concentaration] = @R_Y_Concentaration, [R_Y_Error] = @R_Y_Error, [R_Y_Detect"& _ 
                "ion_Limit] = @R_Y_Detection_Limit, [R_Zr_Fact] = @R_Zr_Fact, [R_Zr_Concentaratio"& _ 
                "n] = @R_Zr_Concentaration, [R_Zr_Error] = @R_Zr_Error, [R_Zr_Detection_Limit] = "& _ 
                "@R_Zr_Detection_Limit, [R_Nb_Fact] = @R_Nb_Fact, [R_Nb_Concentaration] = @R_Nb_C"& _ 
                "oncentaration, [R_Nb_Error] = @R_Nb_Error, [R_Nb_Detection_Limit] = @R_Nb_Detect"& _ 
                "ion_Limit, [R_Mo_Fact] = @R_Mo_Fact, [R_Mo_Concentaration] = @R_Mo_Concentaratio"& _ 
                "n, [R_Mo_Error] = @R_Mo_Error, [R_Mo_Detection_Limit] = @R_Mo_Detection_Limit, ["& _ 
                "R_Ru_Fact] = @R_Ru_Fact, [R_Ru_Concentaration] = @R_Ru_Concentaration, [R_Ru_Err"& _ 
                "or] = @R_Ru_Error, [R_Ru_Detection_Limit] = @R_Ru_Detection_Limit, [R_Ag_Fact] ="& _ 
                " @R_Ag_Fact, [R_Ag_Concentaration] = @R_Ag_Concentaration, [R_Ag_Error] = @R_Ag_"& _ 
                "Error, [R_Ag_Detection_Limit] = @R_Ag_Detection_Limit, [R_Cd_Fact] = @R_Cd_Fact,"& _ 
                " [R_Cd_Concentaration] = @R_Cd_Concentaration, [R_Cd_Error] = @R_Cd_Error, [R_Cd"& _ 
                "_Detection_Limit] = @R_Cd_Detection_Limit, [R_In_Fact] = @R_In_Fact, [R_In_Conce"& _ 
                "ntaration] = @R_In_Concentaration, [R_In_Error] = @R_In_Error, [R_In_Detection_L"& _ 
                "imit] = @R_In_Detection_Limit, [R_Sn_Fact] = @R_Sn_Fact, [R_Sn_Concentaration] ="& _ 
                " @R_Sn_Concentaration, [R_Sn_Error] = @R_Sn_Error, [R_Sn_Detection_Limit] = @R_S"& _ 
                "n_Detection_Limit, [R_Sb_Fact] = @R_Sb_Fact, [R_Sb_Concentaration] = @R_Sb_Conce"& _ 
                "ntaration, [R_Sb_Error] = @R_Sb_Error, [R_Sb_Detection_Limit] = @R_Sb_Detection_"& _ 
                "Limit, [R_I_Fact] = @R_I_Fact, [R_I_Concentaration] = @R_I_Concentaration, [R_I_"& _ 
                "Error] = @R_I_Error, [R_I_Detection_Limit] = @R_I_Detection_Limit, [R_Cs_Fact] ="& _ 
                " @R_Cs_Fact, [R_Cs_Concentaration] = @R_Cs_Concentaration, [R_Cs_Error] = @R_Cs_"& _ 
                "Error, [R_Cs_Detection_Limit] = @R_Cs_Detection_Limit, [R_Ba_Fact] = @R_Ba_Fact,"& _ 
                " [R_Ba_Concentaration] = @R_Ba_Concentaration, [R_Ba_Error] = @R_Ba_Error, [R_Ba"& _ 
                "_Detection_Limit] = @R_Ba_Detection_Limit, [R_La_Fact] = @R_La_Fact, [R_La_Conce"& _ 
                "ntaration] = @R_La_Concentaration, [R_La_Error] = @R_La_Error, [R_La_Detection_L"& _ 
                "imit] = @R_La_Detection_Limit, [R_Ce_Fact] = @R_Ce_Fact, [R_Ce_Concentaration] ="& _ 
                " @R_Ce_Concentaration, [R_Ce_Error] = @R_Ce_Error, [R_Ce_Detection_Limit] = @R_C"& _ 
                "e_Detection_Limit, [R_Nd_Fact] = @R_Nd_Fact, [R_Nd_Concentaration] = @R_Nd_Conce"& _ 
                "ntaration, [R_Nd_Error] = @R_Nd_Error, [R_Nd_Detection_Limit] = @R_Nd_Detection_"& _ 
                "Limit, [R_Sm_Fact] = @R_Sm_Fact, [R_Sm_Concentaration] = @R_Sm_Concentaration, ["& _ 
                "R_Sm_Error] = @R_Sm_Error, [R_Sm_Detection_Limit] = @R_Sm_Detection_Limit, [R_Eu"& _ 
                "_Fact] = @R_Eu_Fact, [R_Eu_Concentaration] = @R_Eu_Concentaration, [R_Eu_Error] "& _ 
                "= @R_Eu_Error, [R_Eu_Detection_Limit] = @R_Eu_Detection_Limit, [R_Gd_Fact] = @R_"& _ 
                "Gd_Fact, [R_Gd_Concentaration] = @R_Gd_Concentaration, [R_Gd_Error] = @R_Gd_Erro"& _ 
                "r, [R_Gd_Detection_Limit] = @R_Gd_Detection_Limit, [R_Tb_Fact] = @R_Tb_Fact, [R_"& _ 
                "Tb_Concentaration] = @R_Tb_Concentaration, [R_Tb_Error] = @R_Tb_Error, [R_Tb_Det"& _ 
                "ection_Limit] = @R_Tb_Detection_Limit, [R_Dy_Fact] = @R_Dy_Fact, [R_Dy_Concentar"& _ 
                "ation] = @R_Dy_Concentaration, [R_Dy_Error] = @R_Dy_Error, [R_Dy_Detection_Limit"& _ 
                "] = @R_Dy_Detection_Limit, [R_Er_Fact] = @R_Er_Fact, [R_Er_Concentaration] = @R_"& _ 
                "Er_Concentaration, [R_Er_Error] = @R_Er_Error, [R_Er_Detection_Limit] = @R_Er_De"& _ 
                "tection_Limit, [R_Tm_Fact] = @R_Tm_Fact, [R_Tm_Concentaration] = @R_Tm_Concentar"& _ 
                "ation, [R_Tm_Error] = @R_Tm_Error, [R_Tm_Detection_Limit] = @R_Tm_Detection_Limi"& _ 
                "t, [R_Yb_Fact] = @R_Yb_Fact, [R_Yb_Concentaration] = @R_Yb_Concentaration, [R_Yb"& _ 
                "_Error] = @R_Yb_Error, [R_Yb_Detection_Limit] = @R_Yb_Detection_Limit, [R_Lu_Fac"& _ 
                "t] = @R_Lu_Fact, [R_Lu_Concentaration] = @R_Lu_Concentaration, [R_Lu_Error] = @R"& _ 
                "_Lu_Error, [R_Lu_Detection_Limit] = @R_Lu_Detection_Limit, [R_Hf_Fact] = @R_Hf_F"& _ 
                "act, [R_Hf_Concentaration] = @R_Hf_Concentaration, [R_Hf_Error] = @R_Hf_Error, ["& _ 
                "R_Hf_Detection_Limit] = @R_Hf_Detection_Limit, [R_Ta_Fact] = @R_Ta_Fact, [R_Ta_C"& _ 
                "oncentaration] = @R_Ta_Concentaration, [R_Ta_Error] = @R_Ta_Error, [R_Ta_Detecti"& _ 
                "on_Limit] = @R_Ta_Detection_Limit, [R_W_Fact] = @R_W_Fact, [R_W_Concentaration] "& _ 
                "= @R_W_Concentaration, [R_W_Error] = @R_W_Error, [R_W_Detection_Limit] = @R_W_De"& _ 
                "tection_Limit, [R_Re_Fact] = @R_Re_Fact, [R_Re_Concentaration] = @R_Re_Concentar"& _ 
                "ation, [R_Re_Error] = @R_Re_Error, [R_Re_Detection_Limit] = @R_Re_Detection_Limi"& _ 
                "t, [R_Ir_Fact] = @R_Ir_Fact, [R_Ir_Concentaration] = @R_Ir_Concentaration, [R_Ir"& _ 
                "_Error] = @R_Ir_Error, [R_Ir_Detection_Limit] = @R_Ir_Detection_Limit, [R_Pt_Fac"& _ 
                "t] = @R_Pt_Fact, [R_Pt_Concentaration] = @R_Pt_Concentaration, [R_Pt_Error] = @R"& _ 
                "_Pt_Error, [R_Pt_Detection_Limit] = @R_Pt_Detection_Limit, [R_Au_Fact] = @R_Au_F"& _ 
                "act, [R_Au_Concentaration] = @R_Au_Concentaration, [R_Au_Error] = @R_Au_Error, ["& _ 
                "R_Au_Detection_Limit] = @R_Au_Detection_Limit, [R_Hg_Fact] = @R_Hg_Fact, [R_Hg_C"& _ 
                "oncentaration] = @R_Hg_Concentaration, [R_Hg_Error] = @R_Hg_Error, [R_Hg_Detecti"& _ 
                "on_Limit] = @R_Hg_Detection_Limit, [R_Th_Fact] = @R_Th_Fact, [R_Th_Concentaratio"& _ 
                "n] = @R_Th_Concentaration, [R_Th_Error] = @R_Th_Error, [R_Th_Detection_Limit] = "& _ 
                "@R_Th_Detection_Limit, [R_U_Fact] = @R_U_Fact, [R_U_Concentaration] = @R_U_Conce"& _ 
                "ntaration, [R_U_Error] = @R_U_Error, [R_U_Detection_Limit] = @R_U_Detection_Limi"& _ 
                "t, [F_Country_Code] = @F_Country_Code, [F_Client_ID] = @F_Client_ID, [F_Year] = "& _ 
                "@F_Year, [F_Sample_Set_ID] = @F_Sample_Set_ID, [F_Sample_Set_Index] = @F_Sample_"& _ 
                "Set_Index, [R_Processed_By] = @R_Processed_By, [R_File_Spectrum] = @R_File_Spect"& _ 
                "rum, [A_Client_Sample_ID] = @A_Client_Sample_ID, [A_Latitude] = @A_Latitude, [A_"& _ 
                "Longitude] = @A_Longitude, [A_Collection_Place] = @A_Collection_Place, [A_Notes]"& _ 
                " = @A_Notes WHERE (([A_Sample_ID] = @Original_A_Sample_ID) AND ([F_Country_Code]"& _ 
                " = @Original_F_Country_Code) AND ([F_Client_ID] = @Original_F_Client_ID) AND ([F"& _ 
                "_Year] = @Original_F_Year) AND ([F_Sample_Set_ID] = @Original_F_Sample_Set_ID) A"& _ 
                "ND ([F_Sample_Set_Index] = @Original_F_Sample_Set_Index))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sample_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_F_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_F_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_F_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_F_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_F_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_F_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_F_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_F_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Na_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Na_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Na_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Na_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Na_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Na_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Na_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Na_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mg_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mg_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mg_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mg_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mg_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mg_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mg_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mg_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Al_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Al_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Al_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Al_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Al_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Al_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Al_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Al_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Si_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Si_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Si_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Si_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Si_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Si_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Si_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Si_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_S_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_S_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_S_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_S_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_S_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_S_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_S_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_S_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cl_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cl_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cl_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cl_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cl_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cl_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cl_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cl_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_K_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_K_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_K_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_K_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_K_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_K_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_K_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_K_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ca_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ca_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ca_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ca_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ca_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ca_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ca_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ca_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sc_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sc_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sc_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sc_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sc_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sc_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sc_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sc_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ti_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ti_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ti_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ti_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ti_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ti_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ti_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ti_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_V_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_V_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_V_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_V_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_V_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_V_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_V_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_V_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cr_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cr_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cr_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cr_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cr_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cr_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cr_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cr_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mn_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mn_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mn_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mn_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mn_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mn_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mn_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mn_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Fe_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Fe_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Fe_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Fe_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Fe_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Fe_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Fe_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Fe_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Co_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Co_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Co_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Co_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Co_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Co_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Co_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Co_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cu_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cu_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cu_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cu_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cu_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cu_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cu_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cu_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zn_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zn_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zn_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zn_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zn_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zn_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zn_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zn_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ga_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ga_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ga_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ga_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ga_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ga_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ga_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ga_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_As_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_As_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_As_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_As_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_As_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_As_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_As_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_As_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Se_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Se_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Se_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Se_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Se_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Se_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Se_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Se_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Br_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Br_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Br_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Br_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Br_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Br_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Br_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Br_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Rb_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Rb_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Rb_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Rb_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Rb_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Rb_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Rb_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Rb_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sr_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sr_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sr_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sr_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sr_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sr_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sr_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sr_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Y_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Y_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Y_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Y_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Y_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Y_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Y_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Y_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zr_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zr_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zr_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zr_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zr_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zr_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Zr_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Zr_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nb_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nb_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nb_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nb_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nb_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nb_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nb_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nb_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mo_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mo_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mo_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mo_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mo_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mo_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Mo_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Mo_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ru_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ru_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ru_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ru_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ru_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ru_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ru_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ru_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ag_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ag_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ag_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ag_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ag_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ag_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ag_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ag_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cd_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cd_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cd_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cd_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cd_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cd_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cd_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cd_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_In_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_In_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_In_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_In_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_In_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_In_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_In_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_In_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sn_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sn_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sn_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sn_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sn_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sn_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sn_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sn_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sb_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sb_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sb_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sb_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sb_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sb_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sb_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sb_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_I_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_I_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_I_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_I_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_I_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_I_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_I_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_I_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cs_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cs_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cs_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cs_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cs_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cs_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Cs_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Cs_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ba_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ba_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ba_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ba_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ba_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ba_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ba_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ba_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_La_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_La_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_La_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_La_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_La_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_La_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_La_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_La_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ce_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ce_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ce_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ce_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ce_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ce_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ce_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ce_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nd_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nd_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nd_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nd_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nd_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nd_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Nd_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Nd_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sm_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sm_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sm_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sm_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sm_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sm_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Sm_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Sm_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Eu_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Eu_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Eu_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Eu_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Eu_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Eu_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Eu_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Eu_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Gd_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Gd_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Gd_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Gd_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Gd_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Gd_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Gd_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Gd_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tb_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tb_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tb_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tb_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tb_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tb_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tb_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tb_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Dy_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Dy_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Dy_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Dy_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Dy_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Dy_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Dy_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Dy_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Er_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Er_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Er_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Er_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Er_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Er_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Er_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Er_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tm_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tm_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tm_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tm_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tm_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tm_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Tm_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Tm_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Yb_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Yb_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Yb_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Yb_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Yb_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Yb_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Yb_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Yb_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Lu_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Lu_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Lu_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Lu_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Lu_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Lu_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Lu_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Lu_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hf_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hf_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hf_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hf_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hf_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hf_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hf_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hf_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ta_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ta_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ta_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ta_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ta_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ta_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ta_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ta_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_W_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_W_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_W_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_W_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_W_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_W_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_W_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_W_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Re_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Re_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Re_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Re_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Re_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Re_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Re_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Re_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ir_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ir_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ir_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ir_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ir_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ir_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Ir_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Ir_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Pt_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Pt_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Pt_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Pt_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Pt_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Pt_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Pt_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Pt_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Au_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Au_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Au_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Au_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Au_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Au_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Au_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Au_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hg_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hg_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hg_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hg_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hg_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hg_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Hg_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Hg_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Th_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Th_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Th_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Th_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Th_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Th_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Th_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Th_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_U_Fact", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_U_Fact", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_U_Concentaration", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_U_Concentaration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_U_Error", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_U_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_U_Detection_Limit", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_U_Detection_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Client_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_Index", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Processed_By", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Processed_By", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_File_Spectrum", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_File_Spectrum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Client_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Client_Sample_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Latitude", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Latitude", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Longitude", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Longitude", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Collection_Place", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Collection_Place", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_Notes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Notes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_A_Sample_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_Sample_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_F_Country_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Country_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_F_Client_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Client_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_F_Year", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Year", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_F_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_F_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_Index", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.NaaDB.My.Settings.Default.NAA_DB_EXPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     A_Sample_ID, R_F_Fact, R_F_Concentaration, R_F_Error, R_F_Detection_Li"& _ 
                "mit, R_Na_Fact, R_Na_Concentaration, R_Na_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_Na_De"& _ 
                "tection_Limit, R_Mg_Fact, R_Mg_Concentaration, R_Mg_Error, R_Mg_Detection_Limit,"& _ 
                " R_Al_Fact, R_Al_Concentaration, R_Al_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_Al_Detect"& _ 
                "ion_Limit, R_Si_Fact, R_Si_Concentaration, R_Si_Error, R_Si_Detection_Limit, R_S"& _ 
                "_Fact, R_S_Concentaration, R_S_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_S_Detection_Limi"& _ 
                "t, R_Cl_Fact, R_Cl_Concentaration, R_Cl_Error, R_Cl_Detection_Limit, R_K_Fact, R"& _ 
                "_K_Concentaration, R_K_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_K_Detection_Limit, R_Ca_"& _ 
                "Fact, R_Ca_Concentaration, R_Ca_Error, R_Ca_Detection_Limit, R_Sc_Fact, R_Sc_Con"& _ 
                "centaration, R_Sc_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_Sc_Detection_Limit, R_Ti_Fact"& _ 
                ", R_Ti_Concentaration, R_Ti_Error, R_Ti_Detection_Limit, R_V_Fact, R_V_Concentar"& _ 
                "ation, R_V_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_V_Detection_Limit, R_Cr_Fact, R_Cr_C"& _ 
                "oncentaration, R_Cr_Error, R_Cr_Detection_Limit, R_Mn_Fact, R_Mn_Concentaration,"& _ 
                " R_Mn_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_Mn_Detection_Limit, R_Fe_Fact, R_Fe_Conce"& _ 
                "ntaration, R_Fe_Error, R_Fe_Detection_Limit, R_Co_Fact, R_Co_Concentaration, R_C"& _ 
                "o_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_Co_Detection_Limit, R_Cu_Fact, R_Cu_Concentar"& _ 
                "ation, R_Cu_Error, R_Cu_Detection_Limit, R_Zn_Fact, R_Zn_Concentaration, R_Zn_Er"& _ 
                "ror, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_Zn_Detection_Limit, R_Ga_Fact, R_Ga_Concentaratio"& _ 
                "n, R_Ga_Error, R_Ga_Detection_Limit, R_As_Fact, R_As_Concentaration, R_As_Error,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_As_Detection_Limit, R_Se_Fact, R_Se_Concentaration, R"& _ 
                "_Se_Error, R_Se_Detection_Limit, R_Br_Fact, R_Br_Concentaration, R_Br_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                     R_Br_Detection_Limit, R_Rb_Fact, R_Rb_Concentaration, R_Rb_"& _ 
                "Error, R_Rb_Detection_Limit, R_Sr_Fact, R_Sr_Concentaration, R_Sr_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                 R_Sr_Detection_Limit, R_Y_Fact, R_Y_Concentaration, R_Y_Error, "& _ 
                "R_Y_Detection_Limit, R_Zr_Fact, R_Zr_Concentaration, R_Zr_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "         R_Zr_Detection_Limit, R_Nb_Fact, R_Nb_Concentaration, R_Nb_Error, R_Nb_"& _ 
                "Detection_Limit, R_Mo_Fact, R_Mo_Concentaration, R_Mo_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "     R_Mo_Detection_Limit, R_Ru_Fact, R_Ru_Concentaration, R_Ru_Error, R_Ru_Dete"& _ 
                "ction_Limit, R_Ag_Fact, R_Ag_Concentaration, R_Ag_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                " R_Ag_Detection_Limit, R_Cd_Fact, R_Cd_Concentaration, R_Cd_Error, R_Cd_Detectio"& _ 
                "n_Limit, R_In_Fact, R_In_Concentaration, R_In_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_I"& _ 
                "n_Detection_Limit, R_Sn_Fact, R_Sn_Concentaration, R_Sn_Error, R_Sn_Detection_Li"& _ 
                "mit, R_Sb_Fact, R_Sb_Concentaration, R_Sb_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_Sb_De"& _ 
                "tection_Limit, R_I_Fact, R_I_Concentaration, R_I_Error, R_I_Detection_Limit, R_C"& _ 
                "s_Fact, R_Cs_Concentaration, R_Cs_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_Cs_Detection_"& _ 
                "Limit, R_Ba_Fact, R_Ba_Concentaration, R_Ba_Error, R_Ba_Detection_Limit, R_La_Fa"& _ 
                "ct, R_La_Concentaration, R_La_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_La_Detection_Limi"& _ 
                "t, R_Ce_Fact, R_Ce_Concentaration, R_Ce_Error, R_Ce_Detection_Limit, R_Nd_Fact, "& _ 
                "R_Nd_Concentaration, R_Nd_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_Nd_Detection_Limit, R"& _ 
                "_Sm_Fact, R_Sm_Concentaration, R_Sm_Error, R_Sm_Detection_Limit, R_Eu_Fact, R_Eu"& _ 
                "_Concentaration, R_Eu_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_Eu_Detection_Limit, R_Gd_"& _ 
                "Fact, R_Gd_Concentaration, R_Gd_Error, R_Gd_Detection_Limit, R_Tb_Fact, R_Tb_Con"& _ 
                "centaration, R_Tb_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_Tb_Detection_Limit, R_Dy_Fact"& _ 
                ", R_Dy_Concentaration, R_Dy_Error, R_Dy_Detection_Limit, R_Er_Fact, R_Er_Concent"& _ 
                "aration, R_Er_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_Er_Detection_Limit, R_Tm_Fact, R_"& _ 
                "Tm_Concentaration, R_Tm_Error, R_Tm_Detection_Limit, R_Yb_Fact, R_Yb_Concentarat"& _ 
                "ion, R_Yb_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_Yb_Detection_Limit, R_Lu_Fact, R_Lu_C"& _ 
                "oncentaration, R_Lu_Error, R_Lu_Detection_Limit, R_Hf_Fact, R_Hf_Concentaration,"& _ 
                " R_Hf_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_Hf_Detection_Limit, R_Ta_Fact, R_Ta_Conce"& _ 
                "ntaration, R_Ta_Error, R_Ta_Detection_Limit, R_W_Fact, R_W_Concentaration, R_W_E"& _ 
                "rror, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_W_Detection_Limit, R_Re_Fact, R_Re_Concentaratio"& _ 
                "n, R_Re_Error, R_Re_Detection_Limit, R_Ir_Fact, R_Ir_Concentaration, R_Ir_Error,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      R_Ir_Detection_Limit, R_Pt_Fact, R_Pt_Concentaration, R"& _ 
                "_Pt_Error, R_Pt_Detection_Limit, R_Au_Fact, R_Au_Concentaration, R_Au_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                     R_Au_Detection_Limit, R_Hg_Fact, R_Hg_Concentaration, R_Hg_"& _ 
                "Error, R_Hg_Detection_Limit, R_Th_Fact, R_Th_Concentaration, R_Th_Error, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                 R_Th_Detection_Limit, R_U_Fact, R_U_Concentaration, R_U_Error, "& _ 
                "R_U_Detection_Limit, F_Country_Code, F_Client_ID, F_Year, F_Sample_Set_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                   F_Sample_Set_Index, R_Processed_By, R_File_Spectrum, A_Client"& _ 
                "_Sample_ID, A_Latitude, A_Longitude, A_Collection_Place, A_Notes"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         t"& _ 
                "able_Sample"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (F_Country_Code = @F_Country_Code) AND (F_Client_ID = @F_"& _ 
                "Client_ID) AND (F_Year = @F_Year) AND (F_Sample_Set_ID = @F_Sample_Set_ID) AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                       (F_Sample_Set_Index = @F_Sample_Set_Index)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Country_Code", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Country_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Client_ID", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Client_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Year", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_ID", Global.System.Data.SqlDbType.NVarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Sample_Set_Index", Global.System.Data.SqlDbType.NVarChar, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Sample_Set_Index", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill_Sample_NAA_Results(ByVal dataTable As NAA_DB_EXPDataSet.table_Sample_NAA_ResultsDataTable, ByVal F_Country_Code As String, ByVal F_Client_ID As String, ByVal F_Year As String, ByVal F_Sample_Set_ID As String, ByVal F_Sample_Set_Index As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (F_Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Country_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(F_Country_Code,String)
            End If
            If (F_Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Client_ID")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(F_Client_ID,String)
            End If
            If (F_Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Year")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(F_Year,String)
            End If
            If (F_Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_ID")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(F_Sample_Set_ID,String)
            End If
            If (F_Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_Index")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(F_Sample_Set_Index,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData_Sample_NAA_Results(ByVal F_Country_Code As String, ByVal F_Client_ID As String, ByVal F_Year As String, ByVal F_Sample_Set_ID As String, ByVal F_Sample_Set_Index As String) As NAA_DB_EXPDataSet.table_Sample_NAA_ResultsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (F_Country_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Country_Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(F_Country_Code,String)
            End If
            If (F_Client_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Client_ID")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(F_Client_ID,String)
            End If
            If (F_Year Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Year")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(F_Year,String)
            End If
            If (F_Sample_Set_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_ID")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(F_Sample_Set_ID,String)
            End If
            If (F_Sample_Set_Index Is Nothing) Then
                Throw New Global.System.ArgumentNullException("F_Sample_Set_Index")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(F_Sample_Set_Index,String)
            End If
            Dim dataTable As NAA_DB_EXPDataSet.table_Sample_NAA_ResultsDataTable = New NAA_DB_EXPDataSet.table_Sample_NAA_ResultsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NAA_DB_EXPDataSet.table_Sample_NAA_ResultsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "table_Sample_NAA_Results")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _table_ClientTableAdapter As table_ClientTableAdapter
        
        Private _table_CountryTableAdapter As table_CountryTableAdapter
        
        Private _table_Determined_ElementsTableAdapter As table_Determined_ElementsTableAdapter
        
        Private _table_Physical_EnvironmentTableAdapter As table_Physical_EnvironmentTableAdapter
        
        Private _table_Sample_PreparationTableAdapter As table_Sample_PreparationTableAdapter
        
        Private _table_Sample_SetTableAdapter As table_Sample_SetTableAdapter
        
        Private _table_Sample_TypeTableAdapter As table_Sample_TypeTableAdapter
        
        Private _table_Sample_TableAdapter As table_Sample_TableAdapter
        
        Private _table_Sample_Sample_Preparation_TableAdapter As table_Sample_Sample_Preparation_TableAdapter
        
        Private _table_SLI_Irradiation_LogTableAdapter As table_SLI_Irradiation_LogTableAdapter
        
        Private _table_LLI_Irradiation_LogTableAdapter As table_LLI_Irradiation_LogTableAdapter
        
        Private _table_MonitorTableAdapter As table_MonitorTableAdapter
        
        Private _table_Monitor_SetTableAdapter As table_Monitor_SetTableAdapter
        
        Private _table_SRMTableAdapter As table_SRMTableAdapter
        
        Private _table_SRM_SetTableAdapter As table_SRM_SetTableAdapter
        
        Private _table_Sample_NAA_Results_TableAdapter As table_Sample_NAA_Results_TableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_ClientTableAdapter() As table_ClientTableAdapter
            Get
                Return Me._table_ClientTableAdapter
            End Get
            Set
                Me._table_ClientTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_CountryTableAdapter() As table_CountryTableAdapter
            Get
                Return Me._table_CountryTableAdapter
            End Get
            Set
                Me._table_CountryTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_Determined_ElementsTableAdapter() As table_Determined_ElementsTableAdapter
            Get
                Return Me._table_Determined_ElementsTableAdapter
            End Get
            Set
                Me._table_Determined_ElementsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_Physical_EnvironmentTableAdapter() As table_Physical_EnvironmentTableAdapter
            Get
                Return Me._table_Physical_EnvironmentTableAdapter
            End Get
            Set
                Me._table_Physical_EnvironmentTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_Sample_PreparationTableAdapter() As table_Sample_PreparationTableAdapter
            Get
                Return Me._table_Sample_PreparationTableAdapter
            End Get
            Set
                Me._table_Sample_PreparationTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_Sample_SetTableAdapter() As table_Sample_SetTableAdapter
            Get
                Return Me._table_Sample_SetTableAdapter
            End Get
            Set
                Me._table_Sample_SetTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_Sample_TypeTableAdapter() As table_Sample_TypeTableAdapter
            Get
                Return Me._table_Sample_TypeTableAdapter
            End Get
            Set
                Me._table_Sample_TypeTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_Sample_TableAdapter() As table_Sample_TableAdapter
            Get
                Return Me._table_Sample_TableAdapter
            End Get
            Set
                Me._table_Sample_TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_Sample_Sample_Preparation_TableAdapter() As table_Sample_Sample_Preparation_TableAdapter
            Get
                Return Me._table_Sample_Sample_Preparation_TableAdapter
            End Get
            Set
                Me._table_Sample_Sample_Preparation_TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_SLI_Irradiation_LogTableAdapter() As table_SLI_Irradiation_LogTableAdapter
            Get
                Return Me._table_SLI_Irradiation_LogTableAdapter
            End Get
            Set
                Me._table_SLI_Irradiation_LogTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_LLI_Irradiation_LogTableAdapter() As table_LLI_Irradiation_LogTableAdapter
            Get
                Return Me._table_LLI_Irradiation_LogTableAdapter
            End Get
            Set
                Me._table_LLI_Irradiation_LogTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_MonitorTableAdapter() As table_MonitorTableAdapter
            Get
                Return Me._table_MonitorTableAdapter
            End Get
            Set
                Me._table_MonitorTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_Monitor_SetTableAdapter() As table_Monitor_SetTableAdapter
            Get
                Return Me._table_Monitor_SetTableAdapter
            End Get
            Set
                Me._table_Monitor_SetTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_SRMTableAdapter() As table_SRMTableAdapter
            Get
                Return Me._table_SRMTableAdapter
            End Get
            Set
                Me._table_SRMTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_SRM_SetTableAdapter() As table_SRM_SetTableAdapter
            Get
                Return Me._table_SRM_SetTableAdapter
            End Get
            Set
                Me._table_SRM_SetTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property table_Sample_NAA_Results_TableAdapter() As table_Sample_NAA_Results_TableAdapter
            Get
                Return Me._table_Sample_NAA_Results_TableAdapter
            End Get
            Set
                Me._table_Sample_NAA_Results_TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._table_ClientTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_ClientTableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_ClientTableAdapter.Connection
                End If
                If ((Not (Me._table_CountryTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_CountryTableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_CountryTableAdapter.Connection
                End If
                If ((Not (Me._table_Determined_ElementsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_Determined_ElementsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_Determined_ElementsTableAdapter.Connection
                End If
                If ((Not (Me._table_Physical_EnvironmentTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_Physical_EnvironmentTableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_Physical_EnvironmentTableAdapter.Connection
                End If
                If ((Not (Me._table_Sample_PreparationTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_Sample_PreparationTableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_Sample_PreparationTableAdapter.Connection
                End If
                If ((Not (Me._table_Sample_SetTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_Sample_SetTableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_Sample_SetTableAdapter.Connection
                End If
                If ((Not (Me._table_Sample_TypeTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_Sample_TypeTableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_Sample_TypeTableAdapter.Connection
                End If
                If ((Not (Me._table_Sample_TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_Sample_TableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_Sample_TableAdapter.Connection
                End If
                If ((Not (Me._table_Sample_Sample_Preparation_TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_Sample_Sample_Preparation_TableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_Sample_Sample_Preparation_TableAdapter.Connection
                End If
                If ((Not (Me._table_SLI_Irradiation_LogTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_SLI_Irradiation_LogTableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_SLI_Irradiation_LogTableAdapter.Connection
                End If
                If ((Not (Me._table_LLI_Irradiation_LogTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_LLI_Irradiation_LogTableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_LLI_Irradiation_LogTableAdapter.Connection
                End If
                If ((Not (Me._table_MonitorTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_MonitorTableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_MonitorTableAdapter.Connection
                End If
                If ((Not (Me._table_Monitor_SetTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_Monitor_SetTableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_Monitor_SetTableAdapter.Connection
                End If
                If ((Not (Me._table_SRMTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_SRMTableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_SRMTableAdapter.Connection
                End If
                If ((Not (Me._table_SRM_SetTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_SRM_SetTableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_SRM_SetTableAdapter.Connection
                End If
                If ((Not (Me._table_Sample_NAA_Results_TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._table_Sample_NAA_Results_TableAdapter.Connection) Is Nothing)) Then
                    Return Me._table_Sample_NAA_Results_TableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._table_ClientTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._table_CountryTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._table_Determined_ElementsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._table_Physical_EnvironmentTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._table_Sample_PreparationTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._table_Sample_SetTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._table_Sample_TypeTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._table_Sample_TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._table_Sample_Sample_Preparation_TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._table_SLI_Irradiation_LogTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._table_LLI_Irradiation_LogTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._table_MonitorTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._table_Monitor_SetTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._table_SRMTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._table_SRM_SetTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._table_Sample_NAA_Results_TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As NAA_DB_EXPDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._table_ClientTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_Client.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_ClientTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._table_Monitor_SetTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_Monitor_Set.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_Monitor_SetTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._table_SRM_SetTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_SRM_Set.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_SRM_SetTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._table_Sample_SetTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_Sample_Set.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_Sample_SetTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._table_SRMTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_SRM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_SRMTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._table_MonitorTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_Monitor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_MonitorTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._table_Sample_Sample_Preparation_TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_Sample_Sample_Preparation.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_Sample_Sample_Preparation_TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._table_Sample_TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_Sample.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_Sample_TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._table_Sample_PreparationTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_Sample_Preparation.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_Sample_PreparationTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._table_SLI_Irradiation_LogTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_SLI_Irradiation_Log.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_SLI_Irradiation_LogTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._table_LLI_Irradiation_LogTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_LLI_Irradiation_Log.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_LLI_Irradiation_LogTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._table_Physical_EnvironmentTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_Physical_Environment.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_Physical_EnvironmentTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._table_Determined_ElementsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_Determined_Elements.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_Determined_ElementsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._table_CountryTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_Country.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_CountryTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._table_Sample_TypeTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_Sample_Type.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_Sample_TypeTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._table_Sample_NAA_Results_TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.table_Sample_NAA_Results.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._table_Sample_NAA_Results_TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As NAA_DB_EXPDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._table_ClientTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_Client.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_ClientTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._table_Monitor_SetTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_Monitor_Set.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_Monitor_SetTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._table_SRM_SetTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_SRM_Set.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_SRM_SetTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._table_Sample_SetTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_Sample_Set.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_Sample_SetTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._table_SRMTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_SRM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_SRMTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._table_MonitorTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_Monitor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_MonitorTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._table_Sample_Sample_Preparation_TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_Sample_Sample_Preparation.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_Sample_Sample_Preparation_TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._table_Sample_TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_Sample.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_Sample_TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._table_Sample_PreparationTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_Sample_Preparation.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_Sample_PreparationTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._table_SLI_Irradiation_LogTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_SLI_Irradiation_Log.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_SLI_Irradiation_LogTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._table_LLI_Irradiation_LogTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_LLI_Irradiation_Log.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_LLI_Irradiation_LogTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._table_Physical_EnvironmentTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_Physical_Environment.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_Physical_EnvironmentTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._table_Determined_ElementsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_Determined_Elements.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_Determined_ElementsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._table_CountryTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_Country.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_CountryTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._table_Sample_TypeTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_Sample_Type.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_Sample_TypeTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._table_Sample_NAA_Results_TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.table_Sample_NAA_Results.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._table_Sample_NAA_Results_TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As NAA_DB_EXPDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._table_Sample_NAA_Results_TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_Sample_NAA_Results.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_Sample_NAA_Results_TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._table_Sample_TypeTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_Sample_Type.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_Sample_TypeTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._table_CountryTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_Country.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_CountryTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._table_Determined_ElementsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_Determined_Elements.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_Determined_ElementsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._table_Physical_EnvironmentTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_Physical_Environment.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_Physical_EnvironmentTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._table_LLI_Irradiation_LogTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_LLI_Irradiation_Log.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_LLI_Irradiation_LogTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._table_SLI_Irradiation_LogTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_SLI_Irradiation_Log.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_SLI_Irradiation_LogTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._table_Sample_PreparationTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_Sample_Preparation.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_Sample_PreparationTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._table_Sample_TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_Sample.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_Sample_TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._table_Sample_Sample_Preparation_TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_Sample_Sample_Preparation.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_Sample_Sample_Preparation_TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._table_MonitorTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_Monitor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_MonitorTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._table_SRMTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_SRM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_SRMTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._table_Sample_SetTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_Sample_Set.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_Sample_SetTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._table_SRM_SetTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_SRM_Set.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_SRM_SetTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._table_Monitor_SetTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_Monitor_Set.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_Monitor_SetTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._table_ClientTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.table_Client.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._table_ClientTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As NAA_DB_EXPDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._table_ClientTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_ClientTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._table_CountryTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_CountryTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._table_Determined_ElementsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_Determined_ElementsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._table_Physical_EnvironmentTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_Physical_EnvironmentTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._table_Sample_PreparationTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_Sample_PreparationTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._table_Sample_SetTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_Sample_SetTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._table_Sample_TypeTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_Sample_TypeTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._table_Sample_TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_Sample_TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._table_Sample_Sample_Preparation_TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_Sample_Sample_Preparation_TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._table_SLI_Irradiation_LogTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_SLI_Irradiation_LogTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._table_LLI_Irradiation_LogTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_LLI_Irradiation_LogTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._table_MonitorTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_MonitorTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._table_Monitor_SetTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_Monitor_SetTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._table_SRMTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_SRMTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._table_SRM_SetTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_SRM_SetTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._table_Sample_NAA_Results_TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._table_Sample_NAA_Results_TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._table_ClientTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_ClientTableAdapter, Me._table_ClientTableAdapter.Connection)
                    Me._table_ClientTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_ClientTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_ClientTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_ClientTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_ClientTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._table_CountryTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_CountryTableAdapter, Me._table_CountryTableAdapter.Connection)
                    Me._table_CountryTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_CountryTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_CountryTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_CountryTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_CountryTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._table_Determined_ElementsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_Determined_ElementsTableAdapter, Me._table_Determined_ElementsTableAdapter.Connection)
                    Me._table_Determined_ElementsTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Determined_ElementsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_Determined_ElementsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_Determined_ElementsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_Determined_ElementsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._table_Physical_EnvironmentTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_Physical_EnvironmentTableAdapter, Me._table_Physical_EnvironmentTableAdapter.Connection)
                    Me._table_Physical_EnvironmentTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Physical_EnvironmentTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_Physical_EnvironmentTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_Physical_EnvironmentTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_Physical_EnvironmentTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._table_Sample_PreparationTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_Sample_PreparationTableAdapter, Me._table_Sample_PreparationTableAdapter.Connection)
                    Me._table_Sample_PreparationTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Sample_PreparationTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_Sample_PreparationTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_Sample_PreparationTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_Sample_PreparationTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._table_Sample_SetTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_Sample_SetTableAdapter, Me._table_Sample_SetTableAdapter.Connection)
                    Me._table_Sample_SetTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Sample_SetTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_Sample_SetTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_Sample_SetTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_Sample_SetTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._table_Sample_TypeTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_Sample_TypeTableAdapter, Me._table_Sample_TypeTableAdapter.Connection)
                    Me._table_Sample_TypeTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Sample_TypeTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_Sample_TypeTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_Sample_TypeTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_Sample_TypeTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._table_Sample_TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_Sample_TableAdapter, Me._table_Sample_TableAdapter.Connection)
                    Me._table_Sample_TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Sample_TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_Sample_TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_Sample_TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_Sample_TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._table_Sample_Sample_Preparation_TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_Sample_Sample_Preparation_TableAdapter, Me._table_Sample_Sample_Preparation_TableAdapter.Connection)
                    Me._table_Sample_Sample_Preparation_TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Sample_Sample_Preparation_TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_Sample_Sample_Preparation_TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_Sample_Sample_Preparation_TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_Sample_Sample_Preparation_TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._table_SLI_Irradiation_LogTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_SLI_Irradiation_LogTableAdapter, Me._table_SLI_Irradiation_LogTableAdapter.Connection)
                    Me._table_SLI_Irradiation_LogTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_SLI_Irradiation_LogTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_SLI_Irradiation_LogTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_SLI_Irradiation_LogTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_SLI_Irradiation_LogTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._table_LLI_Irradiation_LogTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_LLI_Irradiation_LogTableAdapter, Me._table_LLI_Irradiation_LogTableAdapter.Connection)
                    Me._table_LLI_Irradiation_LogTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_LLI_Irradiation_LogTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_LLI_Irradiation_LogTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_LLI_Irradiation_LogTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_LLI_Irradiation_LogTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._table_MonitorTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_MonitorTableAdapter, Me._table_MonitorTableAdapter.Connection)
                    Me._table_MonitorTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_MonitorTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_MonitorTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_MonitorTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_MonitorTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._table_Monitor_SetTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_Monitor_SetTableAdapter, Me._table_Monitor_SetTableAdapter.Connection)
                    Me._table_Monitor_SetTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Monitor_SetTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_Monitor_SetTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_Monitor_SetTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_Monitor_SetTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._table_SRMTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_SRMTableAdapter, Me._table_SRMTableAdapter.Connection)
                    Me._table_SRMTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_SRMTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_SRMTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_SRMTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_SRMTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._table_SRM_SetTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_SRM_SetTableAdapter, Me._table_SRM_SetTableAdapter.Connection)
                    Me._table_SRM_SetTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_SRM_SetTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_SRM_SetTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_SRM_SetTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_SRM_SetTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._table_Sample_NAA_Results_TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._table_Sample_NAA_Results_TableAdapter, Me._table_Sample_NAA_Results_TableAdapter.Connection)
                    Me._table_Sample_NAA_Results_TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Sample_NAA_Results_TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._table_Sample_NAA_Results_TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._table_Sample_NAA_Results_TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._table_Sample_NAA_Results_TableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._table_ClientTableAdapter) Is Nothing) Then
                    Me._table_ClientTableAdapter.Connection = CType(revertConnections(Me._table_ClientTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_ClientTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._table_CountryTableAdapter) Is Nothing) Then
                    Me._table_CountryTableAdapter.Connection = CType(revertConnections(Me._table_CountryTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_CountryTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._table_Determined_ElementsTableAdapter) Is Nothing) Then
                    Me._table_Determined_ElementsTableAdapter.Connection = CType(revertConnections(Me._table_Determined_ElementsTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Determined_ElementsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._table_Physical_EnvironmentTableAdapter) Is Nothing) Then
                    Me._table_Physical_EnvironmentTableAdapter.Connection = CType(revertConnections(Me._table_Physical_EnvironmentTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Physical_EnvironmentTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._table_Sample_PreparationTableAdapter) Is Nothing) Then
                    Me._table_Sample_PreparationTableAdapter.Connection = CType(revertConnections(Me._table_Sample_PreparationTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Sample_PreparationTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._table_Sample_SetTableAdapter) Is Nothing) Then
                    Me._table_Sample_SetTableAdapter.Connection = CType(revertConnections(Me._table_Sample_SetTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Sample_SetTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._table_Sample_TypeTableAdapter) Is Nothing) Then
                    Me._table_Sample_TypeTableAdapter.Connection = CType(revertConnections(Me._table_Sample_TypeTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Sample_TypeTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._table_Sample_TableAdapter) Is Nothing) Then
                    Me._table_Sample_TableAdapter.Connection = CType(revertConnections(Me._table_Sample_TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Sample_TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._table_Sample_Sample_Preparation_TableAdapter) Is Nothing) Then
                    Me._table_Sample_Sample_Preparation_TableAdapter.Connection = CType(revertConnections(Me._table_Sample_Sample_Preparation_TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Sample_Sample_Preparation_TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._table_SLI_Irradiation_LogTableAdapter) Is Nothing) Then
                    Me._table_SLI_Irradiation_LogTableAdapter.Connection = CType(revertConnections(Me._table_SLI_Irradiation_LogTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_SLI_Irradiation_LogTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._table_LLI_Irradiation_LogTableAdapter) Is Nothing) Then
                    Me._table_LLI_Irradiation_LogTableAdapter.Connection = CType(revertConnections(Me._table_LLI_Irradiation_LogTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_LLI_Irradiation_LogTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._table_MonitorTableAdapter) Is Nothing) Then
                    Me._table_MonitorTableAdapter.Connection = CType(revertConnections(Me._table_MonitorTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_MonitorTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._table_Monitor_SetTableAdapter) Is Nothing) Then
                    Me._table_Monitor_SetTableAdapter.Connection = CType(revertConnections(Me._table_Monitor_SetTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Monitor_SetTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._table_SRMTableAdapter) Is Nothing) Then
                    Me._table_SRMTableAdapter.Connection = CType(revertConnections(Me._table_SRMTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_SRMTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._table_SRM_SetTableAdapter) Is Nothing) Then
                    Me._table_SRM_SetTableAdapter.Connection = CType(revertConnections(Me._table_SRM_SetTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_SRM_SetTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._table_Sample_NAA_Results_TableAdapter) Is Nothing) Then
                    Me._table_Sample_NAA_Results_TableAdapter.Connection = CType(revertConnections(Me._table_Sample_NAA_Results_TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._table_Sample_NAA_Results_TableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
